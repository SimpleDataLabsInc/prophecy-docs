"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[27303],{10538:(e,n,r)=>{r.d(n,{W:()=>o});var i=r(96540),t=r(22777);const a=["zero","one","two","few","many","other"];function s(e){return a.filter(n=>e.includes(n))}const c={locale:"en",pluralForms:s(["one","other"]),select:e=>1===e?"one":"other"};function l(){const{i18n:{currentLocale:e}}=(0,t.A)();return(0,i.useMemo)(()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:s(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),c}},[e])}function o(){const e=l();return{selectMessage:(n,r)=>function(e,n,r){const i=e.split("|");if(1===i.length)return i[0];i.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${i.length}: ${e}`);const t=r.select(n),a=r.pluralForms.indexOf(t);return i[Math.min(a,i.length-1)]}(r,n,e)}}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(96540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},49611:(e,n,r)=>{r.d(n,{A:()=>y});r(96540);var i=r(18215),t=r(56971),a=r(68957),s=r(10538),c=r(33091),l=r(45122),o=r(72128);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=r(74848);function p({className:e,href:n,children:r}){return(0,h.jsx)(a.A,{href:n,className:(0,i.A)("card padding--lg",d.cardContainer,e),children:r})}function u({className:e,href:n,icon:r,title:t,description:a}){return(0,h.jsxs)(p,{href:n,className:e,children:[(0,h.jsxs)(o.A,{as:"h2",className:(0,i.A)("text--truncate",d.cardTitle),title:t,children:[r," ",t]}),a&&(0,h.jsx)("p",{className:(0,i.A)("text--truncate",d.cardDescription),title:a,children:a})]})}function m({item:e}){const n=(0,t.Nr)(e),r=function(){const{selectMessage:e}=(0,s.W)();return n=>e(n,(0,l.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return n?(0,h.jsx)(u,{className:e.className,href:n,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??r(e.items.length)}):null}function g({item:e}){const n=(0,c.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,t.cC)(e.docId??void 0);return(0,h.jsx)(u,{className:e.className,href:e.href,icon:n,title:e.label,description:e.description??r?.description})}function f({item:e}){switch(e.type){case"link":return(0,h.jsx)(g,{item:e});case"category":return(0,h.jsx)(m,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}const x={docCardListItem:"docCardListItem_W1sv"};function j({className:e}){const n=(0,t.a4)();return(0,h.jsx)(y,{items:n,className:e})}function b({item:e}){return(0,h.jsx)("article",{className:(0,i.A)(x.docCardListItem,"col col--6"),children:(0,h.jsx)(f,{item:e})})}function y(e){const{items:n,className:r}=e;if(!n)return(0,h.jsx)(j,{...e});const a=(0,t.d1)(n);return(0,h.jsx)("section",{className:(0,i.A)("row",r),children:a.map((e,n)=>(0,h.jsx)(b,{item:e},n))})}},53051:(e,n,r)=>{r.d(n,{$S:()=>i});r(22777);function i(...e){return r(99752).$S(...e)}},61089:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"Spark/gems/machine-learning/machine-learning","title":"Machine Learning","description":"Preparing and Using Data for Machine Learning","source":"@site/docs/Spark/gems/machine-learning/machine-learning.md","sourceDirName":"Spark/gems/machine-learning","slug":"/engineers/machine-learning","permalink":"/engineers/machine-learning","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"generative-ai","permalink":"/tags/generative-ai"},{"inline":true,"label":"machine-learning","permalink":"/tags/machine-learning"},{"inline":true,"label":"llm","permalink":"/tags/llm"},{"inline":true,"label":"pinecone","permalink":"/tags/pinecone"},{"inline":true,"label":"openai","permalink":"/tags/openai"}],"version":"current","frontMatter":{"title":"Machine Learning","id":"machine-learning","slug":"/engineers/machine-learning","description":"Preparing and Using Data for Machine Learning","tags":["generative-ai","machine-learning","llm","pinecone","openai"]},"sidebar":"mySidebar","previous":{"title":"WhileIterator","permalink":"/engineers/while-iterator"},"next":{"title":"OpenAI","permalink":"/engineers/openai"}}');var t=r(74848),a=r(28453),s=r(49611),c=r(53051);const l={title:"Machine Learning",id:"machine-learning",slug:"/engineers/machine-learning",description:"Preparing and Using Data for Machine Learning",tags:["generative-ai","machine-learning","llm","pinecone","openai"]},o=void 0,d={},h=[{value:"Cluster library dependencies",id:"cluster-library-dependencies",level:3}];function p(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Each page below describes one of the set of gems that prepare or use data for Machine Learning. These gems have a required ",(0,t.jsx)(n.a,{href:"/engineers/machine-learning#cluster-library-dependencies",children:"Cluster library dependency"}),". For an example set of pipelines that use these gems to create a Generative AI Chatbot, see this ",(0,t.jsx)(n.a,{href:"/engineers/generative-ai-chatbot",children:"guide."})]}),"\n","\n",(0,t.jsx)(s.A,{items:(0,c.$S)().items}),"\n",(0,t.jsx)(n.h3,{id:"cluster-library-dependencies",children:"Cluster library dependencies"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/prophecy-io/spark-ai/tree/main",children:(0,t.jsx)(n.strong,{children:"Spark-AI"})})," - Toolbox for building Generative AI applications on top of Apache Spark. This library dependency is required for the Machine Learning gem functionality. Setup this dependency in one of two ways:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Option a. Import a project with the spark-ai dependency preconfigured, as in this ",(0,t.jsx)(n.a,{href:"/engineers/generative-ai-chatbot#1c-load-the-git-repository",children:"guide."})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Option b. Alternatively, add ",(0,t.jsx)(n.code,{children:"prophecy-spark-ai==0.1.8"})," as a Python library, and ",(0,t.jsx)(n.code,{children:"io.prophecy:spark-ai_2.12:0.1.8"})," as a Maven library to the pipeline ",(0,t.jsx)(n.a,{href:"/engineers/spark-dependencies",children:"dependencies."})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.a,{href:"https://github.com/prophecy-io/spark-ai/tree/main#roadmap",children:"here"})," to see the roadmap for what's coming in the future with the Spark-AI toolbox."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);