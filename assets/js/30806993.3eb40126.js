"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[6185],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var i=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},s=Object.keys(e);for(i=0;i<s.length;i++)a=s[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)a=s[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=i.createContext({}),p=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return a?i.createElement(h,r(r({ref:t},c),{},{components:a})):i.createElement(h,r({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,r=new Array(s);r[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:n,r[1]=o;for(var p=2;p<s;p++)r[p]=a[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}m.displayName="MDXCreateElement"},59304:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var i=a(87462),n=(a(67294),a(3905));const s={title:"Unit Testing",id:"tests",description:"Low-code Spark Unit testing",sidebar_position:5,tags:["spark","development","CICD","testing","unit tests"]},r=void 0,o={unversionedId:"low-code-spark/tests",id:"low-code-spark/tests",title:"Unit Testing",description:"Low-code Spark Unit testing",source:"@site/docs/low-code-spark/tests.md",sourceDirName:"low-code-spark",slug:"/low-code-spark/tests",permalink:"/low-code-spark/tests",draft:!1,tags:[{label:"spark",permalink:"/tags/spark"},{label:"development",permalink:"/tags/development"},{label:"CICD",permalink:"/tags/cicd"},{label:"testing",permalink:"/tags/testing"},{label:"unit tests",permalink:"/tags/unit-tests"}],version:"current",sidebarPosition:5,frontMatter:{title:"Unit Testing",id:"tests",description:"Low-code Spark Unit testing",sidebar_position:5,tags:["spark","development","CICD","testing","unit tests"]},sidebar:"defaultSidebar",previous:{title:"Expression Builder",permalink:"/low-code-spark/expression-builder"},next:{title:"Data Explorer",permalink:"/low-code-spark/data-explorer"}},l={},p=[{value:"Output rows equality",id:"output-rows-equality",level:2},{value:"Example",id:"output-rows-equality",level:3},{value:"Output predicates",id:"output-predicates",level:2},{value:"Example",id:"output-predicates",level:3},{value:"Generating sample data for test cases automatically",id:"generating-sample-data-for-test-cases-automatically",level:2},{value:"Generated code",id:"generated-code",level:2},{value:"Renaming the name of unit test",id:"renaming-the-name-of-unit-test",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Writing good unit tests is one of the key stages of the CI/CD process. It ensures that the changes made by developers to projects will be verified and all the functionality will work correctly after deployment."),(0,n.kt)("p",null,"Prophecy makes the process of writing unit cases easier by giving an interactive environment via which unit test cases can be configured across each component."),(0,n.kt)("p",null,"There are 2 types of unit test cases which can be configured through Prophecy UI:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Output rows equality"),(0,n.kt)("li",{parentName:"ol"},"Output predicates")),(0,n.kt)("p",null,"Let us understand both types in detail:"),(0,n.kt)("h2",{id:"output-rows-equality"},"Output rows equality"),(0,n.kt)("p",null,"Automatically takes a snapshot of the data for the component and allows to continuously test that the logic performs as intended. This would simply check the equality of the output rows."),(0,n.kt)("h3",{id:"output-rows-equality"},"Example"),(0,n.kt)("p",null,"In the below example we would create below unit tests:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"To check the join condition correctly for one-to-one mappings."),(0,n.kt)("li",{parentName:"ol"},"To check the join condition correctly for one-to-many mappings.")),(0,n.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174785192-7d99a6e1-d8bf-445f-bf51-981526e3a1e6.mp4",title:"Output rows equality",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.kt)("h2",{id:"output-predicates"},"Output predicates"),(0,n.kt)("p",null,"These are more advanced unit tests where multiple rules need to pass in order for the test as a whole to pass. Requires Spark expression to be used as predicates."),(0,n.kt)("h3",{id:"output-predicates"},"Example"),(0,n.kt)("p",null,"In the below example we will create below unit tests:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Check that the value of amount column is ",(0,n.kt)("inlineCode",{parentName:"li"},">0"),"."),(0,n.kt)("li",{parentName:"ol"},"Check whether first name is not equal to last name.")),(0,n.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174785268-5266a044-087f-40cb-a846-f7b548275986.mp4",title:"Output predicates",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.kt)("h2",{id:"generating-sample-data-for-test-cases-automatically"},"Generating sample data for test cases automatically"),(0,n.kt)("p",null,"To generate sample input data automatically from the source DataFrame, this option can be enabled while creating unit test."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Pipeline needs to run once, to generate units test based on auto-generated sample data.")),(0,n.kt)("p",null,"Let's generate sample data automatically for the unit test case we created in above example."),(0,n.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174785504-6ee9b766-958a-4dd8-8fc8-9835a3fb4294.mp4",title:"Generate sample data",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.kt)("h2",{id:"generated-code"},"Generated code"),(0,n.kt)("p",null,"Behind the scenes, the code for unit tests is automatically generated in our repository.\nLet's have a look at the generated code for our unit test above."),(0,n.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174785480-294ca5de-9fd2-4e17-94a7-078a3619dddc.mp4",title:"Generate code",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.kt)("h2",{id:"renaming-the-name-of-unit-test"},"Renaming the name of unit test"),(0,n.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174785461-8d717efb-87a7-44d2-82a0-d0db6e833b29.mp4",title:"Generate code",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))))}d.isMDXComponent=!0}}]);