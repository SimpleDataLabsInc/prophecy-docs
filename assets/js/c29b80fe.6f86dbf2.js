"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[32594],{10538:(e,t,n)=>{n.d(t,{W:()=>l});var s=n(96540),r=n(22777);const o=["zero","one","two","few","many","other"];function i(e){return o.filter(t=>e.includes(t))}const c={locale:"en",pluralForms:i(["one","other"]),select:e=>1===e?"one":"other"};function a(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,s.useMemo)(()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:i(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),c}},[e])}function l(){const e=a();return{selectMessage:(t,n)=>function(e,t,n){const s=e.split("|");if(1===s.length)return s[0];s.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${s.length}: ${e}`);const r=n.select(t),o=n.pluralForms.indexOf(r);return s[Math.min(o,s.length-1)]}(n,t,e)}}},17978:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"Spark/gems/join-split/join-split","title":"Join & Split","description":"The set of gems that can split or join one or more DataFrames","source":"@site/docs/Spark/gems/join-split/join-split.md","sourceDirName":"Spark/gems/join-split","slug":"/engineers/join-split","permalink":"/engineers/join-split","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Join & Split","id":"join-split","slug":"/engineers/join-split","description":"The set of gems that can split or join one or more DataFrames","tags":[]},"sidebar":"mySidebar","previous":{"title":"WindowFunction","permalink":"/engineers/window-function"},"next":{"title":"CompareColumns","permalink":"/engineers/compare-columns"}}');var r=n(74848),o=n(28453),i=n(49611),c=n(53051);const a={title:"Join & Split",id:"join-split",slug:"/engineers/join-split",description:"The set of gems that can split or join one or more DataFrames",tags:[]},l=void 0,u={},m=[];function d(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Includes the set of gems that help with the process of merging or splitting DataFrames to create new DataFrames."}),"\n","\n",(0,r.jsx)(i.A,{items:(0,c.$S)().items})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}},49611:(e,t,n)=>{n.d(t,{A:()=>w});n(96540);var s=n(18215),r=n(56971),o=n(68957),i=n(10538),c=n(33091),a=n(45122),l=n(72128);const u={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var m=n(74848);function d({className:e,href:t,children:n}){return(0,m.jsx)(o.A,{href:t,className:(0,s.A)("card padding--lg",u.cardContainer,e),children:n})}function p({className:e,href:t,icon:n,title:r,description:o}){return(0,m.jsxs)(d,{href:t,className:e,children:[(0,m.jsxs)(l.A,{as:"h2",className:(0,s.A)("text--truncate",u.cardTitle),title:r,children:[n," ",r]}),o&&(0,m.jsx)("p",{className:(0,s.A)("text--truncate",u.cardDescription),title:o,children:o})]})}function f({item:e}){const t=(0,r.Nr)(e),n=function(){const{selectMessage:e}=(0,i.W)();return t=>e(t,(0,a.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return t?(0,m.jsx)(p,{className:e.className,href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??n(e.items.length)}):null}function h({item:e}){const t=(0,c.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,r.cC)(e.docId??void 0);return(0,m.jsx)(p,{className:e.className,href:e.href,icon:t,title:e.label,description:e.description??n?.description})}function g({item:e}){switch(e.type){case"link":return(0,m.jsx)(h,{item:e});case"category":return(0,m.jsx)(f,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}const j={docCardListItem:"docCardListItem_W1sv"};function x({className:e}){const t=(0,r.a4)();return(0,m.jsx)(w,{items:t,className:e})}function N({item:e}){return(0,m.jsx)("article",{className:(0,s.A)(j.docCardListItem,"col col--6"),children:(0,m.jsx)(g,{item:e})})}function w(e){const{items:t,className:n}=e;if(!t)return(0,m.jsx)(x,{...e});const o=(0,r.d1)(t);return(0,m.jsx)("section",{className:(0,s.A)("row",n),children:o.map((e,t)=>(0,m.jsx)(N,{item:e},t))})}},53051:(e,t,n)=>{n.d(t,{$S:()=>s});n(22777);function s(...e){return n(99752).$S(...e)}}}]);