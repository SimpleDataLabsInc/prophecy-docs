"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[2042],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),m=n,f=c["".concat(i,".").concat(m)]||c[m]||u[m]||l;return a?r.createElement(f,o(o({ref:t},d),{},{components:a})):r.createElement(f,o({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6735:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),o=["components"],s={title:"JSON",id:"json",description:"JSON",sidebar_position:6,tags:["gems","file","json"]},i=void 0,p={unversionedId:"low-code-spark/gems/source-target/file/json",id:"low-code-spark/gems/source-target/file/json",title:"JSON",description:"JSON",source:"@site/docs/low-code-spark/gems/source-target/file/json.md",sourceDirName:"low-code-spark/gems/source-target/file",slug:"/low-code-spark/gems/source-target/file/json",permalink:"/low-code-spark/gems/source-target/file/json",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"file",permalink:"/tags/file"},{label:"json",permalink:"/tags/json"}],version:"current",sidebarPosition:6,frontMatter:{title:"JSON",id:"json",description:"JSON",sidebar_position:6,tags:["gems","file","json"]},sidebar:"defaultSidebar",previous:{title:"Delta",permalink:"/low-code-spark/gems/source-target/file/delta"},next:{title:"ORC",permalink:"/low-code-spark/gems/source-target/file/orc"}},d={},u=[{value:"Source Parameters",id:"source-parameters",level:3},{value:"Source Example",id:"source-example",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Generated Code",id:"target-code",level:3}],c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)}},m=c("Tabs"),f=c("TabItem"),k={toc:u};function g(e){var t=e.components,s=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},k,s,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Allows you to read or write a delimited file (often called Comma Separated File, CSV)"),(0,l.kt)("h3",{id:"source-parameters"},"Source Parameters"),(0,l.kt)("p",null,"JSON ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Source"))," supports all the available ",(0,l.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-json.html"},"spark read options for JSON"),"."),(0,l.kt)("p",null,"The below list contains the additional parameters to read a JSON file:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the Dataset (",(0,l.kt)("a",{parentName:"td",href:"/core/concepts/dataset"},"read more about Datasets"),")"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Location"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,l.kt)("br",null)," Eg: dbfs:/data/test.json"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Schema"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Schema to applied on the loaded data. Can be defined/edited as json or inferred using ",(0,l.kt)("inlineCode",{parentName:"td"},"Infer Schema")," button"),(0,l.kt)("td",{parentName:"tr",align:null},"True")))),(0,l.kt)("h3",{id:"source-example"},"Source Example"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Delta source example",src:a(8400).Z,width:"717",height:"376"})),(0,l.kt)("h3",{id:"source-code"},"Generated Code"),(0,l.kt)(m,{mdxType:"Tabs"},(0,l.kt)(f,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def ReadDelta(spark: SparkSession) -> DataFrame:\n    return spark.read.format("json").load("dbfs:/FileStore/data/example.json")\n'))),(0,l.kt)(f,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'object ReadJson {\n\ndef apply(spark: SparkSession): DataFrame =\nspark.read\n.format("json")\n.load("dbfs:/FileStore/data/example.json")\n\n}\n')))),(0,l.kt)("h3",{id:"target-parameters"},"Target Parameters"),(0,l.kt)("p",null,"JSON ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Target"))," supports all the available ",(0,l.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-json.html"},"spark write options for JSON"),"."),(0,l.kt)("p",null,"The below list contains the additional parameters to write a JSON file:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the Dataset (",(0,l.kt)("a",{parentName:"td",href:"/core/concepts/dataset"},"read more about Datasets"),")"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Location"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,l.kt)("br",null)," Eg: dbfs:/data/output.json"),(0,l.kt)("td",{parentName:"tr",align:null},"True")))),(0,l.kt)("h3",{id:"target-code"},"Generated Code"),(0,l.kt)(m,{mdxType:"Tabs"},(0,l.kt)(f,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def write_json(spark: SparkSession, in0: DataFrame):\n    in0.write\\\n        .format("json")\\\n        .mode("overwrite")\\\n        .save("dbfs:/data/test_output.json")\n'))),(0,l.kt)(f,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'object write_json {\n  def apply(spark: SparkSession, in: DataFrame): Unit =\n    in.write\n        .format("json")\n        .mode("overwrite")\n        .save("dbfs:/data/test_output.json")\n}\n')))))}g.isMDXComponent=!0},8400:function(e,t,a){t.Z=a.p+"assets/images/json_source-7a13c3f53fdb98d65c7a67fec53fa0db.gif"}}]);