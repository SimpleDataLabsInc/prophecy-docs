"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[14334],{15680:(e,a,t)=>{t.d(a,{xA:()=>c,yg:()=>d});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),p=function(e){var a=r.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=p(e.components);return r.createElement(s.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},g=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),g=n,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||l;return t?r.createElement(d,i(i({ref:a},c),{},{components:t})):r.createElement(d,i({ref:a},c))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=g;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},19365:(e,a,t)=>{t.d(a,{A:()=>i});var r=t(96540),n=t(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:a,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,i),hidden:t},a)}},11470:(e,a,t)=>{t.d(a,{A:()=>k});var r=t(58168),n=t(96540),l=t(20053),i=t(23104),o=t(56347),s=t(57485),p=t(31682),c=t(89466);function u(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:r,default:n}}=e;return{value:a,label:t,attributes:r,default:n}}))}function m(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??u(t);return function(e){const a=(0,p.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function g(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function d(e){let{queryString:a=!1,groupId:t}=e;const r=(0,o.W6)(),l=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,s.aZ)(l),(0,n.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(r.location.search);a.set(l,e),r.replace({...r.location,search:a.toString()})}),[l,r])]}function y(e){const{defaultValue:a,queryString:t=!1,groupId:r}=e,l=m(e),[i,o]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!g({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:l}))),[s,p]=d({queryString:t,groupId:r}),[u,y]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[r,l]=(0,c.Dv)(t);return[r,(0,n.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),b=(()=>{const e=s??u;return g({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{b&&o(b)}),[b]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),y(e)}),[p,y,l]),tabValues:l}}var b=t(92303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:a,block:t,selectedValue:o,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),m=e=>{const a=e.currentTarget,t=c.indexOf(a),r=p[t].value;r!==o&&(u(a),s(r))},g=e=>{let a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},a)},p.map((e=>{let{value:a,label:t,attributes:i}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:o===a?0:-1,"aria-selected":o===a,key:a,ref:e=>c.push(e),onKeyDown:g,onClick:m},i,{className:(0,l.A)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":o===a})}),t??a)})))}function v(e){let{lazy:a,children:t,selectedValue:r}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=l.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},l.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==r}))))}function N(e){const a=y(e);return n.createElement("div",{className:(0,l.A)("tabs-container",h.tabList)},n.createElement(f,(0,r.A)({},e,a)),n.createElement(v,(0,r.A)({},e,a)))}function k(e){const a=(0,b.A)();return n.createElement(N,(0,r.A)({key:String(a)},e))}},50728:(e,a,t)=>{t.d(a,{A:()=>n});var r=t(96540);function n(e){return r.createElement("div",null,e.python_package_name&&e.python_package_version&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},e.python_package_name),r.createElement("span",{className:"right"},e.python_package_version))),e.scala_package_name&&e.scala_package_version&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},e.scala_package_name),r.createElement("span",{className:"right"},e.scala_package_version))),e.python_lib&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},"ProphecyLibsPython"),r.createElement("span",{className:"right"},e.python_lib))),e.scala_lib&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},"ProphecyLibsScala"),r.createElement("span",{className:"right"},e.scala_lib))),e.uc_single&&r.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/"},r.createElement("span",{className:"badge-spark"},r.createElement("span",{className:"left"},"Databricks UC Single Cluster"),r.createElement("span",{className:"right"},e.uc_single))),e.uc_shared&&r.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/ucshared"},r.createElement("span",{className:"badge-spark"},r.createElement("span",{className:"left"},"Databricks UC Shared"),r.createElement("span",{className:"right"},e.uc_shared))),e.livy&&r.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/livy"},r.createElement("span",{className:"badge-spark"},r.createElement("span",{className:"left"},"Livy"),r.createElement("span",{className:"right"},e.livy))),r.createElement("br",null),r.createElement("br",null))}},84886:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>p,default:()=>y,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var r=t(58168),n=(t(96540),t(15680)),l=t(50728),i=t(11470),o=t(19365);const s={title:"Repartition",id:"Repartition",description:"Repartition or coalesce a DataFrame",tags:["gems","join-split","partition","repartition","coalesce"]},p=void 0,c={unversionedId:"Spark/gems/join-split/Repartition",id:"Spark/gems/join-split/Repartition",title:"Repartition",description:"Repartition or coalesce a DataFrame",source:"@site/docs/Spark/gems/join-split/repartition.md",sourceDirName:"Spark/gems/join-split",slug:"/Spark/gems/join-split/Repartition",permalink:"/Spark/gems/join-split/Repartition",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"join-split",permalink:"/tags/join-split"},{label:"partition",permalink:"/tags/partition"},{label:"repartition",permalink:"/tags/repartition"},{label:"coalesce",permalink:"/tags/coalesce"}],version:"current",frontMatter:{title:"Repartition",id:"Repartition",description:"Repartition or coalesce a DataFrame",tags:["gems","join-split","partition","repartition","coalesce"]},sidebar:"mySidebar",previous:{title:"Join",permalink:"/Spark/gems/join-split/join"},next:{title:"RowDistributor",permalink:"/Spark/gems/join-split/row-distributor"}},u={},m=[{value:"Hash Repartitoning",id:"hash-repartitoning",level:2},{value:"Parameters",id:"hash-repartitoning",level:3},{value:"Generated Code",id:"hash-repartitoning",level:3},{value:"Random Repartitioning",id:"random-repartitioning",level:2},{value:"Parameters",id:"random-repartitioning",level:3},{value:"Generated Code",id:"random-repartitioning",level:3},{value:"Range Repartitoning",id:"range-repartitoning",level:2},{value:"Parameters",id:"range-repartitoning",level:3},{value:"Generated Code",id:"range-repartitoning",level:3},{value:"Coalesce",id:"coalesce",level:2},{value:"Parameters",id:"coalesce",level:3},{value:"Generated Code",id:"coalesce",level:3},{value:"Video demo",id:"video-demo",level:2}],g={toc:m},d="wrapper";function y(e){let{components:a,...t}=e;return(0,n.yg)(d,(0,r.A)({},g,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)(l.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+",mdxType:"Requirements"}),(0,n.yg)("p",null,"This will repartition or coalesce the input DataFrame based on the specified configuration. There are four different repartitioning options:"),(0,n.yg)("h2",{id:"hash-repartitoning"},"Hash Repartitoning"),(0,n.yg)("p",null,"Repartitions the data evenly across various partitions based on the hash value of the specified key."),(0,n.yg)("h3",{id:"hash-repartitoning"},"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"DataFrame"),(0,n.yg)("td",{parentName:"tr",align:null},"Input DataFrame"),(0,n.yg)("td",{parentName:"tr",align:null},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Overwrite default partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"Flag to overwrite default partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"False")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Number of partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"Integer value specifying number of partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"False")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Repartition expression(s)"),(0,n.yg)("td",{parentName:"tr",align:null},"List of expressions to repartition by"),(0,n.yg)("td",{parentName:"tr",align:null},"True")))),(0,n.yg)("h3",{id:"hash-repartitoning"},"Generated Code"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(o.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},'def hashRepartition(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.repartition(5, col("customer_id"))\n'))),(0,n.yg)(o.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},'object hashRepartition {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.repartition(5, col("customer_id"))\n\n}\n')))),(0,n.yg)("h2",{id:"random-repartitioning"},"Random Repartitioning"),(0,n.yg)("p",null,"Repartitions without data distribution defined."),(0,n.yg)("h3",{id:"random-repartitioning"},"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Required"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},"DataFrame"),(0,n.yg)("td",{parentName:"tr",align:"left"},"Input DataFrame"),(0,n.yg)("td",{parentName:"tr",align:"left"},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of partitions"),(0,n.yg)("td",{parentName:"tr",align:"left"},"Integer value specifying number of partitions"),(0,n.yg)("td",{parentName:"tr",align:"left"},"True")))),(0,n.yg)("h3",{id:"random-repartitioning"},"Generated Code"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(o.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},"def randomRepartition(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.repartition(5)\n"))),(0,n.yg)(o.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},"object randomRepartition {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.repartition(5)\n\n}\n")))),(0,n.yg)("h2",{id:"range-repartitoning"},"Range Repartitoning"),(0,n.yg)("p",null,"Repartitions the data with tuples having keys within the same range on the same worker."),(0,n.yg)("h3",{id:"range-repartitoning"},"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"DataFrame"),(0,n.yg)("td",{parentName:"tr",align:null},"Input DataFrame"),(0,n.yg)("td",{parentName:"tr",align:null},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Overwrite default partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"Flag to overwrite default partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"False")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Number of partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"Integer value specifying number of partitions"),(0,n.yg)("td",{parentName:"tr",align:null},"False")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Repartition expression(s) with sorting"),(0,n.yg)("td",{parentName:"tr",align:null},"List of expressions to repartition by with corresponding sorting order"),(0,n.yg)("td",{parentName:"tr",align:null},"True")))),(0,n.yg)("h3",{id:"range-repartitoning"},"Generated Code"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(o.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},'def RepartitionByRange(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.repartitionByRange(5, col("customer_id").asc())\n'))),(0,n.yg)(o.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},'object RepartitionByRange {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.repartitionByRange(5, col("customer_id").asc())\n\n}\n')))),(0,n.yg)("h2",{id:"coalesce"},"Coalesce"),(0,n.yg)("p",null,"Reduces the number of partitions without shuffling the dataset."),(0,n.yg)("h3",{id:"coalesce"},"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Required"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},"DataFrame"),(0,n.yg)("td",{parentName:"tr",align:"left"},"Input DataFrame"),(0,n.yg)("td",{parentName:"tr",align:"left"},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of partitions"),(0,n.yg)("td",{parentName:"tr",align:"left"},"Integer value specifying number of partitions"),(0,n.yg)("td",{parentName:"tr",align:"left"},"True")))),(0,n.yg)("h3",{id:"coalesce"},"Generated Code"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(o.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},"def Coalesce(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.coalesce(5)\n"))),(0,n.yg)(o.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},"object Coalesce {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.coalesce(5)\n\n}\n")))),(0,n.yg)("h2",{id:"video-demo"},"Video demo"),(0,n.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.yg)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174014498-277e1037-8634-4752-a4f1-e0e1aae66659.mp4",title:"Repartition",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))))}y.isMDXComponent=!0}}]);