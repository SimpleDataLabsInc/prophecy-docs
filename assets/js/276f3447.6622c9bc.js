"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[18644],{9008:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"analysts/development/gems/spatial/distance","title":"Distance gem","description":"Calculate the distance between two points","source":"@site/docs/analysts/development/gems/spatial/distance.md","sourceDirName":"analysts/development/gems/spatial","slug":"/analysts/distance","permalink":"/analysts/distance","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"spatial","permalink":"/tags/spatial"}],"version":"current","frontMatter":{"title":"Distance gem","sidebar_label":"Distance","id":"distance","slug":"/analysts/distance","description":"Calculate the distance between two points","tags":["gems","analyst","spatial"]},"sidebar":"platformSidebar","previous":{"title":"CreatePoint","permalink":"/analysts/create-point"},"next":{"title":"FindNearest","permalink":"/analysts/find-nearest"}}');var i=t(74848),d=t(28453),r=t(77956);const l={title:"Distance gem",sidebar_label:"Distance",id:"distance",slug:"/analysts/distance",description:"Calculate the distance between two points",tags:["gems","analyst","spatial"]},c=void 0,a={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Spatial Object Fields",id:"spatial-object-fields",level:3},{value:"Select Output Options",id:"select-output-options",level:3},{value:"Example",id:"example",level:2},{value:"Result",id:"result",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{execution_engine:"SQL Warehouse",sql_package_name:"ProphecyDatabricksSqlSpatial",sql_package_version:"0.0.1+"}),"\n",(0,i.jsx)(n.p,{children:"Use the Distance gem to calculate the distance between two geographic points."}),"\n",(0,i.jsx)(n.admonition,{title:"Interactive Gem Example",type:"info",children:(0,i.jsxs)(n.p,{children:["The Distance gem has a corresponding interactive gem example. See ",(0,i.jsx)(n.a,{href:"/analysts/gems#interactive-gem-examples",children:"Interactive gem examples"})," to learn how to run sample pipelines for this and other gems."]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Geographic points must be in Well-known Text (",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry",children:"WKT"}),") format. Use the ",(0,i.jsx)(n.a,{href:"/analysts/create-point",children:"CreatePoint"})," gem to convert longitude and latitude coordinates to WKT format."]})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Configure the Distance gem using the following parameters."}),"\n",(0,i.jsx)(n.h3,{id:"spatial-object-fields",children:"Spatial Object Fields"}),"\n",(0,i.jsx)(n.p,{children:"Use these parameters to specify the columns containing the source and destination geographic points for distance calculation."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Source Type"}),(0,i.jsx)(n.td,{children:"Format of the source column."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Source Column"}),(0,i.jsx)(n.td,{children:"Column that contains the source geo points."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Destination Type"}),(0,i.jsx)(n.td,{children:"Format of the destination column."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Destination Column"}),(0,i.jsx)(n.td,{children:"Column that contains the destination geo points."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"select-output-options",children:"Select Output Options"}),"\n",(0,i.jsx)(n.p,{children:"Use the checkboxes defined below to choose which output columns the Distance gem should generate."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Checkbox"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Output Distance"}),(0,i.jsx)(n.td,{children:"Return a column that includes the distance between points in a specified unit of distance"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Output Cardinal Direction"}),(0,i.jsx)(n.td,{children:"Return a column that includes the cardinal direction from the source point to the destination point"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Output Direction in Degrees"}),(0,i.jsx)(n.td,{children:"Return a column that includes the direction in degrees from the source point to the destination point"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"You can select zero, one, or multiple checkboxes. All checkboxes are disabled by default."})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Assume you have the following airline route table, and you would like to calculate the distance between start and destination cities."}),"\n",(0,i.jsx)("div",{class:"table-example",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"start_city"}),(0,i.jsx)(n.th,{children:"destination_city"}),(0,i.jsx)(n.th,{children:"source_point"}),(0,i.jsx)(n.th,{children:"dest_point"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"New York"}),(0,i.jsx)(n.td,{children:"Los Angeles"}),(0,i.jsx)(n.td,{children:"POINT (-74.0060 40.7128)"}),(0,i.jsx)(n.td,{children:"POINT (-118.2437 34.0522)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"London"}),(0,i.jsx)(n.td,{children:"Paris"}),(0,i.jsx)(n.td,{children:"POINT (-0.1278 51.5074)"}),(0,i.jsx)(n.td,{children:"POINT (2.3522 48.8566)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Tokyo"}),(0,i.jsx)(n.td,{children:"Sydney"}),(0,i.jsx)(n.td,{children:"POINT (139.6917 35.6895)"}),(0,i.jsx)(n.td,{children:"POINT (151.2093 -33.8688)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Toronto"}),(0,i.jsx)(n.td,{children:"Chicago"}),(0,i.jsx)(n.td,{children:"POINT (-79.3470 43.6511)"}),(0,i.jsx)(n.td,{children:"POINT (-87.6298 41.8781)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Dubai"}),(0,i.jsx)(n.td,{children:"Mumbai"}),(0,i.jsx)(n.td,{children:"POINT (55.2962 25.2760)"}),(0,i.jsx)(n.td,{children:"POINT (72.8777 19.0760)"})]})]})]})}),"\n",(0,i.jsx)(n.p,{children:"To find the distance and direction between cities, set the following gem configurations."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Set source and destination:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.strong,{children:"Source Type"})," to ",(0,i.jsx)(n.strong,{children:"Point"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.strong,{children:"Source Column"})," to ",(0,i.jsx)(n.code,{children:"start_city"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.strong,{children:"Destination Type"})," to ",(0,i.jsx)(n.strong,{children:"Point"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.strong,{children:"Destination Column"})," to ",(0,i.jsx)(n.code,{children:"destination_city"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Set output options:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select the ",(0,i.jsx)(n.strong,{children:"Output Distance"})," checkbox."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["From the ",(0,i.jsx)(n.strong,{children:"Units"})," dropdown, select ",(0,i.jsx)(n.strong,{children:"Kilometers"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select the ",(0,i.jsx)(n.strong,{children:"Output Cardinal Direction"})," checkbox."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select the ",(0,i.jsx)(n.strong,{children:"Output Direction in Degrees"})," checkbox."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the gem."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"result",children:"Result"}),"\n",(0,i.jsxs)(n.p,{children:["The resulting table will have three new columns: ",(0,i.jsx)(n.code,{children:"distance_kilometers"}),", ",(0,i.jsx)(n.code,{children:"cardinal_direction"}),", and ",(0,i.jsx)(n.code,{children:"direction_degrees"}),"."]}),"\n",(0,i.jsx)("div",{class:"table-example",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"start_city"}),(0,i.jsx)(n.th,{children:"destination_city"}),(0,i.jsx)(n.th,{children:"source_point"}),(0,i.jsx)(n.th,{children:"dest_point"}),(0,i.jsx)(n.th,{children:"distance_kilometers"}),(0,i.jsx)(n.th,{children:"cardinal_direction"}),(0,i.jsx)(n.th,{children:"direction_degrees"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"New York"}),(0,i.jsx)(n.td,{children:"Los Angeles"}),(0,i.jsx)(n.td,{children:"POINT (-74.0060 40.7128)"}),(0,i.jsx)(n.td,{children:"POINT (-118.2437 34.0522)"}),(0,i.jsx)(n.td,{children:"3944.42"}),(0,i.jsx)(n.td,{children:"W"}),(0,i.jsx)(n.td,{children:"273.7"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"London"}),(0,i.jsx)(n.td,{children:"Paris"}),(0,i.jsx)(n.td,{children:"POINT (-0.1278 51.5074)"}),(0,i.jsx)(n.td,{children:"POINT (2.3522 48.8566)"}),(0,i.jsx)(n.td,{children:"343.92"}),(0,i.jsx)(n.td,{children:"SE"}),(0,i.jsx)(n.td,{children:"148.1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Tokyo"}),(0,i.jsx)(n.td,{children:"Sydney"}),(0,i.jsx)(n.td,{children:"POINT (139.6917 35.6895)"}),(0,i.jsx)(n.td,{children:"POINT (151.2093 -33.8688)"}),(0,i.jsx)(n.td,{children:"7792.96"}),(0,i.jsx)(n.td,{children:"S"}),(0,i.jsx)(n.td,{children:"169.9"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Toronto"}),(0,i.jsx)(n.td,{children:"Chicago"}),(0,i.jsx)(n.td,{children:"POINT (-79.3470 43.6511)"}),(0,i.jsx)(n.td,{children:"POINT (-87.6298 41.8781)"}),(0,i.jsx)(n.td,{children:"705.64"}),(0,i.jsx)(n.td,{children:"W"}),(0,i.jsx)(n.td,{children:"256.6"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Dubai"}),(0,i.jsx)(n.td,{children:"Mumbai"}),(0,i.jsx)(n.td,{children:"POINT (55.2962 25.2760)"}),(0,i.jsx)(n.td,{children:"POINT (72.8777 19.0760)"}),(0,i.jsx)(n.td,{children:"1936.68"}),(0,i.jsx)(n.td,{children:"E"}),(0,i.jsx)(n.td,{children:"107.3"})]})]})]})})]})}function x(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(96540);const i={},d=s.createContext(i);function r(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(d.Provider,{value:n},e.children)}},77956:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var s=t(74848);function i(e){return(0,s.jsxs)("div",{children:[e.execution_engine&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,s.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,s.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})}}}]);