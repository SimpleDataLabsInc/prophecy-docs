"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[61269],{13713:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"analysts/development/gems/transform/dynamic-select","title":"DynamicSelect","description":"Dynamically filter columns of your dataset based on a set of conditions","source":"@site/docs/analysts/development/gems/transform/dynamic-select.md","sourceDirName":"analysts/development/gems/transform","slug":"/analysts/dynamic-select","permalink":"/analysts/dynamic-select","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"prepare","permalink":"/tags/prepare"}],"version":"current","frontMatter":{"title":"DynamicSelect","id":"dynamic-select","slug":"/analysts/dynamic-select","description":"Dynamically filter columns of your dataset based on a set of conditions","tags":["gems","analyst","prepare"]},"sidebar":"mySidebar","previous":{"title":"Aggregate","permalink":"/analysts/aggregate"},"next":{"title":"FuzzyMatch","permalink":"/analysts/fuzzy-match"}}');var i=s(74848),l=s(28453);const r={title:"DynamicSelect",id:"dynamic-select",slug:"/analysts/dynamic-select",description:"Dynamically filter columns of your dataset based on a set of conditions",tags:["gems","analyst","prepare"]},d=void 0,c={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Remove columns using field type",id:"remove-columns-using-field-type",level:3},{value:"Remove columns with an expression",id:"remove-columns-with-an-expression",level:3},{value:"Result",id:"result",level:3}];function o(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{class:"badge",children:"SQL"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.p,{children:"Use the DynamicSelect gem to dynamically filter columns of your dataset based on a set of conditions to avoid hard-coding your choice of columns."}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Configuration"}),(0,i.jsxs)(t.td,{children:["Whether to filter the columns visually or with code.",(0,i.jsxs)("ul",{class:"table-list",children:[(0,i.jsx)("li",{children:"Select field types: Use checkboxes to select column types to keep in the dataset, such as string, decimal, or date."}),(0,i.jsx)("li",{children:"Select via expression: Create an expression that limits the type of columns to keep in the dataset."})]})]})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.p,{children:"Let's say you have the following table with weather prediction data."}),"\n",(0,i.jsx)("div",{class:"table-example",children:(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.th,{children:["DatePrediction - ",(0,i.jsx)(t.code,{children:"Date"})]}),(0,i.jsxs)(t.th,{children:["TemperatureCelsius - ",(0,i.jsx)(t.code,{children:"Integer"})]}),(0,i.jsxs)(t.th,{children:["HumidityPercent - ",(0,i.jsx)(t.code,{children:"Integer"})]}),(0,i.jsxs)(t.th,{children:["WindSpeed - ",(0,i.jsx)(t.code,{children:"Float"})]}),(0,i.jsxs)(t.th,{children:["Condition - ",(0,i.jsx)(t.code,{children:"String"})]})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-01"}),(0,i.jsx)(t.td,{children:"15"}),(0,i.jsx)(t.td,{children:"65"}),(0,i.jsx)(t.td,{children:"10.0"}),(0,i.jsx)(t.td,{children:"Sunny"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-02"}),(0,i.jsx)(t.td,{children:"17"}),(0,i.jsx)(t.td,{children:"70"}),(0,i.jsx)(t.td,{children:"12.2"}),(0,i.jsx)(t.td,{children:"Cloudy"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-03"}),(0,i.jsx)(t.td,{children:"16"}),(0,i.jsx)(t.td,{children:"68"}),(0,i.jsx)(t.td,{children:"11.0"}),(0,i.jsx)(t.td,{children:"Rainy"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-04"}),(0,i.jsx)(t.td,{children:"14"}),(0,i.jsx)(t.td,{children:"72"}),(0,i.jsx)(t.td,{children:"9.8"}),(0,i.jsx)(t.td,{children:"Sunny"})]})]})]})}),"\n",(0,i.jsx)(t.h3,{id:"remove-columns-using-field-type",children:"Remove columns using field type"}),"\n",(0,i.jsxs)(t.p,{children:["Assume you would like to remove irrelevant float and string columns from your dataset. You can do so with the ",(0,i.jsx)(t.strong,{children:"Select field types"})," method by selecting all field types to maintain, except for float and string."]}),"\n",(0,i.jsx)(t.h3,{id:"remove-columns-with-an-expression",children:"Remove columns with an expression"}),"\n",(0,i.jsxs)(t.p,{children:["Using the same example, you can accomplish the same task with the ",(0,i.jsx)(t.strong,{children:"Select via expression"})," method by inputting the the expression ",(0,i.jsx)(t.code,{children:"column_type NOT IN ('Float', 'String')"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Be aware that column types are case sensitive. Use the same format shown in the input table schemas in the gem configuration."})}),"\n",(0,i.jsx)(t.h3,{id:"result",children:"Result"}),"\n",(0,i.jsx)("div",{class:"table-example",children:(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.th,{children:["DatePrediction - ",(0,i.jsx)(t.code,{children:"Date"})]}),(0,i.jsxs)(t.th,{children:["TemperatureCelsius - ",(0,i.jsx)(t.code,{children:"Integer"})]}),(0,i.jsxs)(t.th,{children:["HumidityPercent - ",(0,i.jsx)(t.code,{children:"Integer"})]})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-01"}),(0,i.jsx)(t.td,{children:"15"}),(0,i.jsx)(t.td,{children:"65"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-02"}),(0,i.jsx)(t.td,{children:"17"}),(0,i.jsx)(t.td,{children:"70"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-03"}),(0,i.jsx)(t.td,{children:"16"}),(0,i.jsx)(t.td,{children:"68"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"2025-03-04"}),(0,i.jsx)(t.td,{children:"14"}),(0,i.jsx)(t.td,{children:"72"})]})]})]})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>d});var n=s(96540);const i={},l=n.createContext(i);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);