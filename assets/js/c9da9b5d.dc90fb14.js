"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[78104],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var o=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=p(n),g=a,m=c["".concat(l,".").concat(g)]||c[g]||y[g]||s;return n?o.createElement(m,i(i({ref:t},d),{},{components:n})):o.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=g;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[c]="string"==typeof e?e:a,i[1]=r;for(var p=2;p<s;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3514:(e,t,n)=>{n.d(t,{A:()=>u});var o=n(96540),a=n(20053),s=n(84142),i=n(75489),r=n(16654),l=n(21312);const p={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function d(e){let{href:t,children:n}=e;return o.createElement(i.A,{href:t,className:(0,a.A)("card padding--lg",p.cardContainer)},n)}function c(e){let{href:t,icon:n,title:s,description:i}=e;return o.createElement(d,{href:t},o.createElement("h2",{className:(0,a.A)("text--truncate",p.cardTitle),title:s},n," ",s),i&&o.createElement("p",{className:(0,a.A)("text--truncate",p.cardDescription),title:i},i))}function y(e){let{item:t}=e;const n=(0,s._o)(t);return n?o.createElement(c,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,l.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function g(e){let{item:t}=e;const n=(0,r.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,s.cC)(t.docId??void 0);return o.createElement(c,{href:t.href,icon:n,title:t.label,description:t.description??a?.description})}function m(e){let{item:t}=e;switch(t.type){case"link":return o.createElement(g,{item:t});case"category":return o.createElement(y,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function h(e){let{className:t}=e;const n=(0,s.$S)();return o.createElement(u,{items:n.items,className:t})}function u(e){const{items:t,className:n}=e;if(!t)return o.createElement(h,e);const i=(0,s.d1)(t);return o.createElement("section",{className:(0,a.A)("row",n)},i.map(((e,t)=>o.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},o.createElement(m,{item:e})))))}},41666:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=n(58168),a=(n(96540),n(15680)),s=n(3514),i=n(84142);const r={title:"Deployment",id:"Deployment",description:"Release projects and deploy jobs",tags:["metadata","Git","release","build","deploy"]},l=void 0,p={unversionedId:"ci-cd/deployment/Deployment",id:"ci-cd/deployment/Deployment",title:"Deployment",description:"Release projects and deploy jobs",source:"@site/docs/ci-cd/deployment/deployment.md",sourceDirName:"ci-cd/deployment",slug:"/ci-cd/deployment/",permalink:"/ci-cd/deployment/",draft:!1,tags:[{label:"metadata",permalink:"/tags/metadata"},{label:"Git",permalink:"/tags/git"},{label:"release",permalink:"/tags/release"},{label:"build",permalink:"/tags/build"},{label:"deploy",permalink:"/tags/deploy"}],version:"current",frontMatter:{title:"Deployment",id:"Deployment",description:"Release projects and deploy jobs",tags:["metadata","Git","release","build","deploy"]},sidebar:"mySidebar",previous:{title:"Use project tests",permalink:"/ci-cd/data-tests/use-project-tests"},next:{title:"Deploy a project",permalink:"/ci-cd/deployment/deploy-project"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"How to Release a Project",id:"how-to-release-a-project",level:2},{value:"Advanced Release Settings",id:"advanced-release-settings",level:2},{value:"Deploy on Release",id:"deploy-on-release",level:3},{value:"Staged Release and Deployment",id:"staged-release-and-deployment",level:3},{value:"Release",id:"release",level:4},{value:"Deploy",id:"deploy",level:4},{value:"Selective Job Deployment",id:"selective-job-deployment",level:3},{value:"Enable Unit Tests",id:"enable-unit-tests",level:3},{value:"Releases and Deployment History",id:"releases-and-deployment-history",level:2},{value:"Releases",id:"releases",level:3},{value:"Current Version",id:"current-version",level:3},{value:"Deployment History",id:"deployment-history",level:3},{value:"What&#39;s next",id:"whats-next",level:2}],y={toc:c},g="wrapper";function m(e){let{components:t,...r}=e;return(0,a.yg)(g,(0,o.A)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Once you have developed and tested your custom components like gems, pipelines, models, or jobs in Prophecy, the next step is to make them available for use. This involves Releasing and Deploying them to the respective environments.\nYou can Release and Deploy via Prophecy UI or you can use ",(0,a.yg)("a",{parentName:"p",href:"/ci-cd/prophecy-build-tool/"},"Prophecy Build Tool")," CLI to integrate with any other CI-CD tools.\nLets see how you can do it via the Prophecy UI below."),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"As part of the release process, we start by creating a ",(0,a.yg)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Git-Basics-Tagging"},"Git Tag")," with a specified version. This tag is then pushed to your configured Git repository. Following this, the pipelines, gems, and jobs in the project are built and deployed to the respective environments.\nHere's a breakdown of what deploying means for each component:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Gems"),": With Prophecy 3.2, you can create ",(0,a.yg)("a",{parentName:"p",href:"/extensibility/gem-builder/spark-gem-builder"},"custom gems")," and use in your pipelines. During the release, these gems are built and uploaded to an internal Artifactory. They aren't directly copied to your environments, as they are used in generating code for the pipelines, not during job/pipeline execution. Note, the code for gems do get committed to your Git repo as part of the project.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Pipelines"),": Each pipeline in the project is compiled and built into an artifact (Wheel file for Python and Jar file for Scala). These artifacts are then uploaded to your environment as part of the release process.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"jobs"),": Depending on the type of job (Databricks or Airflow), the job is copied to the respective environments as a Json file for Databricks jobs and as a Python DAG for Airflow."))),(0,a.yg)("p",null,"There is no specific deployment step needed for other entities."),(0,a.yg)("h2",{id:"how-to-release-a-project"},"How to Release a Project"),(0,a.yg)("p",null,"Once you've committed and merged your changes, you're ready to release them. To do this, Simply proceed with the ",(0,a.yg)("a",{parentName:"p",href:"/concepts/git/#release-a-branch"},"Release and Deploy"),", which takes care of both the release and deployment of pipelines, gems, and jobs to respective environments."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Release_screen",src:n(94447).A,width:"2880",height:"1726"})),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Only an Admin user of the team can initiate a Project Release and Deployment.")),(0,a.yg)("h2",{id:"advanced-release-settings"},"Advanced Release Settings"),(0,a.yg)("p",null,"For most users, a regular project release takes care of both the release and deployment of pipelines, gems, and jobs to respective environments. However, for users who want more control over their deployment process, we offer some advanced options in Project Settings."),(0,a.yg)("p",null,"To access these settings, go to the ",(0,a.yg)("strong",{parentName:"p"},"(1) Settings page")," in your project, and click on ",(0,a.yg)("strong",{parentName:"p"},"(2) Deployment"),"."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Deployment_settings",src:n(52392).A,width:"2880",height:"1726"})),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Only an Admin user can modify these Deployment settings for a project.")),(0,a.yg)("p",null,"When you navigate to Settings and Deployment, you'll find the following options:"),(0,a.yg)("h3",{id:"deploy-on-release"},"Deploy on Release"),(0,a.yg)("p",null,"This option is enabled by default, meaning the release and deployment happen in a single step. The ",(0,a.yg)("strong",{parentName:"p"},"Release and Deploy")," button handles building and deploying all pipelines, gems, and jobs, and uploading the required artifacts to the respective environments.\nYou can switch the selection to ",(0,a.yg)("strong",{parentName:"p"},"Staged Release and Deployment")," to break down the process into two steps: ",(0,a.yg)("strong",{parentName:"p"},"Release")," and ",(0,a.yg)("strong",{parentName:"p"},"Deploy"),"."),(0,a.yg)("h3",{id:"staged-release-and-deployment"},"Staged Release and Deployment"),(0,a.yg)("p",null,"When you switch to Staged Release and Deployment, you would start seeing a new step for Deploy separately after Release."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Staged_deploy_Release",src:n(78989).A,width:"2880",height:"1726"})),(0,a.yg)("h4",{id:"release"},"Release"),(0,a.yg)("p",null,"With Auto-deploy turned off, the Release step only creates a ",(0,a.yg)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Git-Basics-Tagging"},"Git Tag")," and pushes the tagged code version to your Git repository. At this step, artifacts are not built. This speeds up the release process for larger projects with numerous pipelines and jobs."),(0,a.yg)("h4",{id:"deploy"},"Deploy"),(0,a.yg)("p",null,"After the release, you can directly proceed to deploy or choose to deploy later from the Deploy option in the dropdown shown below."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Deploy_separately",src:n(57417).A,width:"2880",height:"1726"})),(0,a.yg)("p",null,"This Deploy step builds all the pipelines and gems, uploads the artifacts, and schedules all the jobs in the project to the respective environments."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Deployment_steps",src:n(64686).A,width:"2880",height:"1726"})),(0,a.yg)("p",null,"Start with ",(0,a.yg)("strong",{parentName:"p"},"(1) Choose a release"),", where you would select a version created in Release step. This would be prefilled with the version you created, if you continue to Deploy from the release step directly.\nIn ",(0,a.yg)("strong",{parentName:"p"},"(2) Override Fabric")," , you have the option to choose a specific environment (fabric) for deploying the jobs. This is useful for testing purposes, allowing you to deploy all jobs to a designated test environment."),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"This is an optional step and overrides the environment for this particular job deployment. Leave it blank to use the fabrics pre-configured in jobs.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"(3) Pick Jobs to Deploy")," table provides an overview of the deployment status for each job, indicating the targeted fabric, and any actions taken, such as addition, deletion, or modification.\nIn the ",(0,a.yg)("strong",{parentName:"p"},"Staged Release and Deployment")," setting, the ability to select or deselect specific jobs is disabled. For more information on enabling this functionality, continue reading or directly jump ",(0,a.yg)("a",{parentName:"p",href:"#selective-job-deployment"},"here"),"."),(0,a.yg)("p",null,"Click on ",(0,a.yg)("strong",{parentName:"p"},"(4) Deploy")," to start the deployment process. This will now build your pipelines, gems and update the jobs as shown below. You would be able to see logs for each step in this screen."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Deployment_logs",src:n(69702).A,width:"2880",height:"1726"})),(0,a.yg)("h3",{id:"selective-job-deployment"},"Selective Job Deployment"),(0,a.yg)("p",null,"If you activate ",(0,a.yg)("strong",{parentName:"p"},"Selective Job Deployment")," in the advance settings ",(0,a.yg)("a",{parentName:"p",href:"#advanced-release-settings"},"here"),", you would be able to select specific jobs during the Deploy step. This is helpful when you have many pipelines and jobs in the same project and only want to deploy a few at a time. It also speeds up the overall process by only building the pipelines used in the selected jobs."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"Different versions of pipelines, datasets, and Subgraphs may coexist within the same environment when selectively deploying jobs. Only the deployed jobs will use the latest versions of pipelines, datasets, and subgraphs.")),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Selective_job_deployment",src:n(5687).A,width:"2880",height:"1726"})),(0,a.yg)("h3",{id:"enable-unit-tests"},"Enable Unit Tests"),(0,a.yg)("p",null,"Writing good ",(0,a.yg)("a",{parentName:"p",href:"/ci-cd/tests"},"Unit tests")," is a key component for data pipeline quality and management. Prophecy makes the process of writing unit cases easier by giving an interactive environment via which unit test cases can be configured across each component.\nThis setting enables running Unit tests as part of pipeline builds."),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Enabling unit tests might lead to a slight increase the Build time")),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Enable_unit_tests",src:n(24250).A,width:"2880",height:"1726"})),(0,a.yg)("h2",{id:"releases-and-deployment-history"},"Releases and Deployment History"),(0,a.yg)("p",null,"Click on ",(0,a.yg)("strong",{parentName:"p"},"(1) Releases and Deployments")," tab in the Project Metadata to access the history and the currently deployed jobs."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Releases_and_Deployments",src:n(80178).A,width:"2880",height:"1726"})),(0,a.yg)("h3",{id:"releases"},"Releases"),(0,a.yg)("p",null,"In the ",(0,a.yg)("strong",{parentName:"p"},"(2) Releases")," tab, you'll find a list of all tags, who created them, when they were created, and the latest tag. Also find ",(0,a.yg)("strong",{parentName:"p"},"(3) logs")," of the latest deployment associated with that tag."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Releases_and_deployments",src:n(55477).A,width:"2880",height:"1084"})),(0,a.yg)("h3",{id:"current-version"},"Current Version"),(0,a.yg)("p",null,"In the ",(0,a.yg)("strong",{parentName:"p"},"(4) Current Version")," tab, you can view the current state of all deployed jobs per environment. Select the ",(0,a.yg)("strong",{parentName:"p"},"(5) Fabric")," environment you want to see the deployed jobs for, and see the list for all the jobs deployed in that environment, along with their versions and deployment logs."),(0,a.yg)("h3",{id:"deployment-history"},"Deployment History"),(0,a.yg)("p",null,"In ",(0,a.yg)("strong",{parentName:"p"},"(6) Deployment History")," tab, you can view the history of all past deployments, along with the time that it was deployed and related logs."),(0,a.yg)("h2",{id:"whats-next"},"What's next"),(0,a.yg)("p",null,"To continue with your Prophecy deployment, see the following pages:"),(0,a.yg)(s.A,{items:(0,i.$S)().items,mdxType:"DocCardList"}))}m.isMDXComponent=!0},80178:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/Release_&_Deployments-ef32b979903ce78e0bbe4b1298d28d61.png"},55477:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/Release_Deployment_history-96c282839cc53d49aeea36c05f373a4f.png"},57417:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/deploy_separately-d00f4c0bc4d2fc9fbeee752585863515.png"},64686:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/deployment_steps-9592d87be587f3c8c01a16f50daefd3f.png"},69702:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/deployment_steps_complete-519a867bdd23e4c5957093e8d18d7e44.png"},94447:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/release_and_deploy_screen-6cb31b600460c0bfd3585766e0340c89.png"},5687:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/selective_job_deployment-0b7ca0bd5a4cda747a53eddea5fbe782.png"},52392:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/settings_for_deployment-e48d01af0afdaf1eaf49a34349844680.png"},78989:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/staged_release_deploy-3e57161f46080ce9b31b672c74daff35.png"},24250:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/unit_test-c574cd7144085b3dde6e6d5517becf14.png"}}]);