"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[95148],{11154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"analysts/development/gems/prepare/bulk-column-expressions","title":"BulkColumnExpressions","description":"Change the data type of multiple columns at once","source":"@site/docs/analysts/development/gems/prepare/bulk-column-expressions.md","sourceDirName":"analysts/development/gems/prepare","slug":"/analysts/bulk-column-expressions","permalink":"/analysts/bulk-column-expressions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"prepare","permalink":"/tags/prepare"}],"version":"current","frontMatter":{"title":"BulkColumnExpressions","id":"bulk-column-expressions","slug":"/analysts/bulk-column-expressions","description":"Change the data type of multiple columns at once","tags":["gems","analyst","prepare"]},"sidebar":"mySidebar","previous":{"title":"BulkColumnRename","permalink":"/analysts/bulk-column-rename"},"next":{"title":"Filter","permalink":"/analysts/filter"}}');var l=n(74848),r=n(28453);const o={title:"BulkColumnExpressions",id:"bulk-column-expressions",slug:"/analysts/bulk-column-expressions",description:"Change the data type of multiple columns at once",tags:["gems","analyst","prepare"]},a=void 0,i={},c=[{value:"Parameters",id:"parameters",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("span",{class:"badge",children:"SQL"}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.p,{children:"The BulkColumnExpressions Gem primarily lets you cast or change the data type of multiple columns at once. It provides additional functionality, including:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Adding a prefix or suffix to selected columns."}),"\n",(0,l.jsx)(t.li,{children:"Applying a custom expression to selected columns."}),"\n"]}),"\n",(0,l.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"Parameter"}),(0,l.jsx)(t.th,{children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Data Type of the columns to do operations on"}),(0,l.jsx)(t.td,{children:"The data type of columns to select."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Selected Columns"}),(0,l.jsx)(t.td,{children:"The columns on which to apply transformations."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Change output column name"}),(0,l.jsx)(t.td,{children:"An option to add a prefix or suffix to the selected column names."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Change output column type"}),(0,l.jsx)(t.td,{children:"The data type that the columns will be transformed into."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Output Expression"}),(0,l.jsxs)(t.td,{children:["A SQL expression that can be applied to the selected columns. This field is required. If you only want to select the column, use ",(0,l.jsx)(t.code,{children:"column_value"})," as the expression."]})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const l={},r=s.createContext(l);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);