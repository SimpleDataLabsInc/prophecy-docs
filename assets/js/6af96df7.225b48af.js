"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[13760],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var n=s(96540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}},28635:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"analysts/development/gems/custom/rest-api","title":"RestAPI","description":"Call APIs from your pipeline.","source":"@site/docs/analysts/development/gems/custom/rest-api.md","sourceDirName":"analysts/development/gems/custom","slug":"/analysts/rest-api","permalink":"/analysts/rest-api","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"custom","permalink":"/tags/custom"}],"version":"current","frontMatter":{"title":"RestAPI","id":"rest-api","slug":"/analysts/rest-api","description":"Call APIs from your pipeline.","tags":["gems","analyst","custom"]},"sidebar":"mySidebar","previous":{"title":"SQL statement","permalink":"/analysts/sql-statement"},"next":{"title":"Macro","permalink":"/analysts/macro"}}');var r=s(74848),a=s(28453);const i={title:"RestAPI",id:"rest-api",slug:"/analysts/rest-api",description:"Call APIs from your pipeline.",tags:["gems","analyst","custom"]},l=void 0,c={},o=[{value:"Use cases",id:"use-cases",level:2},{value:"Parameters",id:"parameters",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("span",{class:"badge",children:"Prophecy Automate"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.p,{children:"Use the RestAPI gem to make API calls from your pipeline."}),"\n",(0,r.jsx)(t.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,r.jsx)(t.p,{children:"While RestAPIs vary greatly in functionality, we can highlight a few use cases that may be particularly helpful for your pipelines."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Use case"}),(0,r.jsx)(t.th,{children:"Example"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Bringing in more data from external systems"}),(0,r.jsx)(t.td,{children:"Retrieve active users from an internal user database."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Enriching data with specific APIs"}),(0,r.jsx)(t.td,{children:"Send data to LLMs to analyze text and return the sentiments of a column."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Sending notifications or alerts"}),(0,r.jsx)(t.td,{children:"Send real-time messages to a Slack channel when an event occurs in your pipeline."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"URL"})}),(0,r.jsx)(t.td,{children:"The endpoint of the API that you are making a request to."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Method"})}),(0,r.jsxs)(t.td,{children:["The HTTP method used for the request (e.g., ",(0,r.jsx)(t.code,{children:"GET"}),", ",(0,r.jsx)(t.code,{children:"POST"}),", ",(0,r.jsx)(t.code,{children:"PUT"}),", ",(0,r.jsx)(t.code,{children:"DELETE"}),") to determine the action performed on the resource."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Params"})}),(0,r.jsxs)(t.td,{children:["Query parameters included in the request URL, usually used for filtering, sorting, or pagination (e.g., ",(0,r.jsx)(t.code,{children:"page=2&limit=10"}),")."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Body"})}),(0,r.jsxs)(t.td,{children:["The payload sent with ",(0,r.jsx)(t.code,{children:"POST"}),", ",(0,r.jsx)(t.code,{children:"PUT"}),", or ",(0,r.jsx)(t.code,{children:"PATCH"})," requests, typically in JSON format, containing the data to be processed by the API."]})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["You can populate these parameters with hard-coded values or reference columns. If you use a column to dynamically populate the RestAPI, Prophecy will ",(0,r.jsx)(t.strong,{children:"generate one API call per row"})," in that column. For example, if you reference a column with ",(0,r.jsx)(t.code,{children:"100"})," rows, this gem will make ",(0,r.jsx)(t.code,{children:"100"})," API calls."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);