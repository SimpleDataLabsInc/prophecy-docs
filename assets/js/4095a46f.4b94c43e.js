"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[58354],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var i=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=a,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||r;return n?i.createElement(m,o(o({ref:t},u),{},{components:n})):i.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},35587:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=n(58168),a=(n(96540),n(15680));const r={sidebar_position:6,id:"July_2023",description:"Release notes for July",title:"July 2023",tags:["release notes","changelog"]},o=void 0,s={unversionedId:"release_notes/2023/July_2023",id:"release_notes/2023/July_2023",title:"July 2023",description:"Release notes for July",source:"@site/docs/release_notes/2023/july2023.md",sourceDirName:"release_notes/2023",slug:"/release_notes/2023/July_2023",permalink:"/release_notes/2023/July_2023",draft:!1,tags:[{label:"release notes",permalink:"/tags/release-notes"},{label:"changelog",permalink:"/tags/changelog"}],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,id:"July_2023",description:"Release notes for July",title:"July 2023",tags:["release notes","changelog"]},sidebar:"mySidebar",previous:{title:"August 2023",permalink:"/release_notes/2023/August_2023"},next:{title:"June 2023",permalink:"/release_notes/2023/June_2023"}},l={},c=[{value:"3.1.2.* (July 26, 2023)",id:"312-july-26-2023",level:2},{value:"Features",id:"FeaturesRelease312",level:3},{value:"Livy Fabric Users can now enable Execution Metrics",id:"livy-fabric-users-can-now-enable-execution-metrics",level:4},{value:"Users can now select all-purpose Databricks clusters for testing their Jobs",id:"users-can-now-select-all-purpose-databricks-clusters-for-testing-their-jobs",level:4},{value:"Minor Improvements",id:"MinorImprovements312",level:3},{value:"Low code Airflow Enhancements",id:"low-code-airflow-enhancements",level:4},{value:"Low code SQL Enhancements",id:"low-code-sql-enhancements",level:4},{value:"Low code Spark Enhancements",id:"low-code-spark-enhancements",level:4},{value:"3.1.1.* (July 6, 2023)",id:"311-july-6-2023",level:2},{value:"Features",id:"UpdatesRelease311",level:3},{value:"Conditional Execution In Spark Pipelines",id:"conditional-execution-in-spark-pipelines",level:4},{value:"Revamped Prophecy Fabrics UI",id:"revamped-prophecy-fabrics-ui",level:4},{value:"New Features in Low Code Airflow",id:"new-features-in-low-code-airflow",level:4},{value:"Minor Improvements",id:"UXImprovements311",level:3},{value:"Ability to Attach Cluster to multiple Pipelines for Interactive Run",id:"ability-to-attach-cluster-to-multiple-pipelines-for-interactive-run",level:4},{value:"Alert and warning diagnostics for Users passing plain-text Username password in gems",id:"alert-and-warning-diagnostics-for-users-passing-plain-text-username-password-in-gems",level:4},{value:"Improved Entity Discovery on Info Pages",id:"improved-entity-discovery-on-info-pages",level:4}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,i.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"312-july-26-2023"},"3.1.2.","*"," (July 26, 2023)"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Prophecy Python libs version: 1.5.9"),(0,a.yg)("li",{parentName:"ul"},"Prophecy Scala libs version: 7.1.3")),(0,a.yg)("h3",{id:"FeaturesRelease312"},"Features"),(0,a.yg)("h4",{id:"livy-fabric-users-can-now-enable-execution-metrics"},"Livy Fabric Users can now enable Execution Metrics"),(0,a.yg)("p",null,"Livy Fabric users can now enable Execution Metrics and historical runs to track the performance of their Spark pipelines. To enable Execution Metrics, users need to create the following tables:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Pipeline Metrics Table"),(0,a.yg)("li",{parentName:"ul"},"Component (Dataset) Metrics Table"),(0,a.yg)("li",{parentName:"ul"},"Interim Table")),(0,a.yg)("p",null,"The instructions for creating these tables can be found ",(0,a.yg)("a",{parentName:"p",href:"/Spark/execution/execution-metrics"},"here")),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Note: Existing Livy users who had Execution Metrics enabled before this release may experience failures in their pipelines if the above tables are not created. To mitigate this issue, users can either:"),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"Set the ",(0,a.yg)("inlineCode",{parentName:"li"},"EXECUTION_METRICS_DISABLED")," flag to true in their deployment."),(0,a.yg)("li",{parentName:"ul"},"Create the above-mentioned tables.")),(0,a.yg)("p",{parentName:"admonition"},"If you have any questions, please contact us at ",(0,a.yg)("a",{parentName:"p",href:"mailto:success@Prophecy.io"},"contact us"),".")),(0,a.yg)("h4",{id:"users-can-now-select-all-purpose-databricks-clusters-for-testing-their-jobs"},"Users can now select all-purpose Databricks clusters for testing their Jobs"),(0,a.yg)("p",null,"Users can now select all-purpose Databricks clusters for testing their Jobs. This can be useful for quickly testing changes to a Job without affecting the production environment."),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Note: Selecting an all-purpose Databricks cluster for testing will not change the Fabric/Job size configured in the Job settings for release and scheduling. This means that the Job will still run on the specified Fabric/Job-size when it is released or scheduled.")),(0,a.yg)("h3",{id:"MinorImprovements312"},"Minor Improvements"),(0,a.yg)("h4",{id:"low-code-airflow-enhancements"},"Low code Airflow Enhancements"),(0,a.yg)("p",null,"We have made a few minor enhancements to our low-code Airflow support. These enhancements include:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Support for DAG level params/configs at Job level: Users can now add configs for Airflow Jobs similar to Spark pipelines and use Jinja templating to refer them in their gems."),(0,a.yg)("li",{parentName:"ul"},"Support for ",(0,a.yg)("a",{parentName:"li",href:"https://airflow.apache.org/docs/apache-airflow/2.4.3/_api/airflow/operators/python/index.html#airflow.operators.python.BranchPythonOperator"},"BranchPythonOperator"),": This allows a User to \u201cbranch\u201d or follow a path following the execution of this task.")),(0,a.yg)("h4",{id:"low-code-sql-enhancements"},"Low code SQL Enhancements"),(0,a.yg)("p",null,"We have made a few minor enhancements to our low-code SQL support. These enhancements include:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"SetOperations gem: This gem will allow users to add Union, Intersection or Exception functionality while modifying their Target models."),(0,a.yg)("li",{parentName:"ul"},"Adding Trino as a SQL Provider in our Low Code SQL product as Beta. Stay tuned for more comprehensive documentation")),(0,a.yg)("h4",{id:"low-code-spark-enhancements"},"Low code Spark Enhancements"),(0,a.yg)("p",null,"We have made a few minor enhancements to our low-code Spark support. These enhancements include:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Moved Salesforce Type under Application section in Source and Target gems: The Salesforce type has been moved from the Warehouse tab to the Application tab in both source and target gems. This change makes it easier for users to find the Salesforce type and to understand its purpose."),(0,a.yg)("li",{parentName:"ul"},"Added Information type diagnostic in Script gem: In script gem, output Schema cannot be inferred automatically. If you need an output schema, you will need to infer the schema from a cluster. Without doing this, the output schema is empty. We have now added an Information Diagnostics message to guide Users about inferring Schema manually if they need an output schema."),(0,a.yg)("li",{parentName:"ul"},"Added keyboard Shortcut: We have added a keyboard shortcut to select all gems in the low-code platform. The shortcut is Ctrl+A.")),(0,a.yg)("h2",{id:"311-july-6-2023"},"3.1.1.","*"," (July 6, 2023)"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Prophecy Python libs version: 1.5.6"),(0,a.yg)("li",{parentName:"ul"},"Prophecy Scala libs version: 7.0.50")),(0,a.yg)("h3",{id:"UpdatesRelease311"},"Features"),(0,a.yg)("h4",{id:"conditional-execution-in-spark-pipelines"},"Conditional Execution In Spark Pipelines"),(0,a.yg)("p",null,"We are thrilled to announce the addition of support for conditional execution in Spark gems within our pipeline framework. This highly anticipated feature provides users with the ability to effortlessly build conditional transformation scenarios directly on our user interface (UI)."),(0,a.yg)("p",null,"Conditional execution allows users to define specific criteria or rules that determine whether a particular transformation should be applied or skipped during pipeline execution.\nBy leveraging conditional execution, users can easily implement complex data processing logic and dynamically adapt their pipelines based on varying conditions. This empowers users to efficiently handle different scenarios, such as filtering out irrelevant data, applying specific transformations based on business rules, or performing conditional aggregations.\nMore details on this feature can be found ",(0,a.yg)("a",{parentName:"p",href:"/Spark/execution/conditional-execution"},"here"),"."),(0,a.yg)("h4",{id:"revamped-prophecy-fabrics-ui"},"Revamped Prophecy Fabrics UI"),(0,a.yg)("p",null,"We are excited to announce the revamped Prophecy Fabrics user interface (UI), designed to achieve feature parity with the Databricks cluster creation flow. This significant update ensures that users have a seamless experience and consistent options when creating clusters within Prophecy.\nThe new UI introduces an enhanced Job sizes interface that captures all the options and flexibility provided by Databricks for cluster creation. These Job sizes can be leveraged to create clusters when executing pipelines through Prophecy or scheduling Jobs through Prophecy.\nWith this improvement, users can easily configure and customize clusters to meet their specific requirements, ensuring optimal performance and resource allocation for their data processing tasks.\nPlease read more about this feature ",(0,a.yg)("a",{parentName:"p",href:"/administration/Spark-fabrics/databricks/"},"here"),"."),(0,a.yg)("h4",{id:"new-features-in-low-code-airflow"},"New Features in Low Code Airflow"),(0,a.yg)("p",null,"Following our recent General Availability Announcement for Low Code Airflow, we are excited to introduce additional features that further enhance the capabilities of the platform."),(0,a.yg)("p",null,"In this release, we have introduced new gems in Low Code Airflow Jobs, enabling users to incorporate more functionality into their Airflow DAGs.\nUsers can now easily add the following operators to their DAGs: Slack Operator, Email Operator, HTTP Sensor, and File Sensors. These operators expand the range of actions and triggers available, providing users with more flexibility in designing their data workflows.\nFurthermore, we are pleased to announce that we have extended support for scheduling DBT projects from private Git repositories. This enhancement allows users to seamlessly integrate and schedule DBT projects hosted in private repositories, providing greater security and control over their data transformation processes."),(0,a.yg)("h3",{id:"UXImprovements311"},"Minor Improvements"),(0,a.yg)("h4",{id:"ability-to-attach-cluster-to-multiple-pipelines-for-interactive-run"},"Ability to Attach Cluster to multiple Pipelines for Interactive Run"),(0,a.yg)("p",null,"Previously, users could only connect a cluster to a single pipeline, limiting their ability to use Prophecy in multiple tabs.\nWith this enhancement, users can now attach clusters to different pipelines in different tabs, enabling concurrent connections without interference.\nThis improvement offers increased flexibility and productivity, allowing users to seamlessly switch between pipeline configurations, perform parallel analyses, and efficiently manage data workflows."),(0,a.yg)("h4",{id:"alert-and-warning-diagnostics-for-users-passing-plain-text-username-password-in-gems"},"Alert and warning diagnostics for Users passing plain-text Username password in gems"),(0,a.yg)("p",null,"Using hardcoded usernames and passwords is not recommended when working with gems.\nThis approach can result in unsafe code, as the credentials may be exposed in your configured Git repository for the Project.\nWe have added Warnings and Diagnostics if Users are using plain text Passwords in gems. Read about the recommended usage ",(0,a.yg)("a",{parentName:"p",href:"/Spark/best-practices/use-dbx-secrets"},"here")),(0,a.yg)("h4",{id:"improved-entity-discovery-on-info-pages"},"Improved Entity Discovery on Info Pages"),(0,a.yg)("p",null,"To enhance the discoverability of our entities, we try to provide comprehensive information on related entities directly on the info page.\nWhen viewing a Project's info page, users can now see all associated pipelines, jobs, datasets, and subgraphs contained within the project.\nLikewise, when accessing a pipeline's info page, users can easily identify the Jobs utilizing the pipeline, as well as all Published Subgraphs that are used within the pipeline.\nFor datasets, users can quickly discover all pipelines that utilize the dataset."))}d.isMDXComponent=!0}}]);