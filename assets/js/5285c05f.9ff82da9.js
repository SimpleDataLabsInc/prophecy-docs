"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[46815],{778:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/config-subgraph-66b629a002167541c9fd2b382b1a61b1.png"},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(96540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},35762:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/config-new-instance-25eee4ea90a0335fe72d73e3bf71838d.png"},49827:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/config-scala-code-0e5454c19dcf034f3a2c18b7fadbbeeb.png"},51590:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"Spark/pipelines/configuration","title":"Configurations","description":"Control how a pipeline behaves during execution","source":"@site/docs/Spark/pipelines/configuration.md","sourceDirName":"Spark/pipelines","slug":"/engineers/configurations","permalink":"/engineers/configurations","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"spark","permalink":"/tags/spark"},{"inline":true,"label":"development","permalink":"/tags/development"},{"inline":true,"label":"config","permalink":"/tags/config"},{"inline":true,"label":"variable","permalink":"/tags/variable"}],"version":"current","frontMatter":{"title":"Configurations","id":"configuration","slug":"/engineers/configurations","description":"Control how a pipeline behaves during execution","tags":["spark","development","config","variable"]},"sidebar":"mySidebar","previous":{"title":"Pipelines","permalink":"/Spark/pipelines/"},"next":{"title":"Secrets in configurations","permalink":"/Spark/pipelines/secrets-configs"}}');var a=i(74848),r=i(28453),s=i(65537),o=i(79329);const l={title:"Configurations",id:"configuration",slug:"/engineers/configurations",description:"Control how a pipeline behaves during execution",tags:["spark","development","config","variable"]},c=void 0,d={},u=[{value:"Pipeline configurations",id:"pipeline-configurations",level:2},{value:"Schema tab",id:"schema-tab",level:3},{value:"Config tab",id:"config-tab",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Runtime configuration",id:"runtime-configuration",level:2},{value:"Interactive execution",id:"interactive-execution",level:3},{value:"Jobs",id:"jobs",level:3},{value:"Subgraph configurations",id:"subgraph-configurations",level:2},{value:"Code",id:"code",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"A configuration is a set of predefined variables and values that control how a data pipeline behaves during execution. By using configurations, you can dynamically adapt a pipeline to different environments (e.g., development, testing, production) without modifying the pipeline itself."}),"\n",(0,a.jsx)(n.h2,{id:"pipeline-configurations",children:"Pipeline configurations"}),"\n",(0,a.jsxs)(n.p,{children:["For each pipeline in the project editor, you'll see a ",(0,a.jsx)(n.strong,{children:"Config"})," option in the pipeline header. When you open it, you'll see two tabs: Schema and Config."]}),"\n",(0,a.jsx)(n.h3,{id:"schema-tab",children:"Schema tab"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.strong,{children:"Schema"})," tab is where you declare your variables. These variables will be accessible to any component in the respective pipeline."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Schema tab",src:i(74381).A+"",width:"2620",height:"826"})}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Name"}),(0,a.jsx)(n.td,{children:"The name of the variable."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Type"}),(0,a.jsx)(n.td,{children:"The data type of the variable."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Optional"}),(0,a.jsxs)(n.td,{children:["A checkbox to define if the variable is optional. When the checkbox is ",(0,a.jsx)(n.strong,{children:"not"})," selected, you ",(0,a.jsx)(n.strong,{children:"must"})," set a default value for the variable."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Description"}),(0,a.jsx)(n.td,{children:"An optional field where you can describe your variable."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"config-tab",children:"Config tab"}),"\n",(0,a.jsx)(n.p,{children:"The Config tab lets you set default values for your variables. You can create multiple configurations with different default values, which is useful when running your pipeline in different environments (like production and development)."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Multiple configurations",src:i(35762).A+"",width:"2812",height:"900"})}),"\n",(0,a.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsxs)(n.p,{children:["When you want to call configuration variables in your pipeline, you can reference them using Jinja syntax. Jinja variable syntax looks like: ",(0,a.jsx)(n.code,{children:"{{config_name}}"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"You can use the following syntax examples for accessing elements of array and record fields:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["For an array: ",(0,a.jsx)(n.code,{children:"{{ config1.array_config[23] }}"})]}),"\n",(0,a.jsxs)(n.li,{children:["For a record: ",(0,a.jsx)(n.code,{children:"{{ record1.record2.field1 }}"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Jinja is enabled by default in new pipelines. To disable this setting, open the Pipeline Settings and turn off the ",(0,a.jsx)(n.strong,{children:"Enable jinja based configuration"})," toggle."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["Depending on the Visual Language configured in your ",(0,a.jsx)(n.a,{href:"/Spark/pipelines/pipeline-settings",children:"Pipeline Settings"}),", you can also use that language's syntax to call variables."]}),(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Visual Language"}),(0,a.jsx)(n.th,{children:"Syntax"}),(0,a.jsx)(n.th,{children:"Expression usage"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"SQL"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"'$config_name'"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"expr('$config_name')"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Scala"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Config.config_name"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"expr(Config.config_name)"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Python"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Config.config_name"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"expr(Config.config_name)"})})]})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"runtime-configuration",children:"Runtime configuration"}),"\n",(0,a.jsx)(n.p,{children:"Once you have set up your configurations, you have to choose which configuration to use at runtime."}),"\n",(0,a.jsx)(n.h3,{id:"interactive-execution",children:"Interactive execution"}),"\n",(0,a.jsx)(n.p,{children:"To choose the configuration for interactive runs, open the Pipeline Settings and scroll to the Run Settings section. There, you can change the selected configuration."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Choose config for interactive run",src:i(70098).A+"",width:"2620",height:"1162"})}),"\n",(0,a.jsx)(n.h3,{id:"jobs",children:"Jobs"}),"\n",(0,a.jsx)(n.p,{children:"When you add a pipeline to your job, you can choose the configuration to use during the job. The configuration defaults can also be overridden here."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Choose config for job execution",src:i(83975).A+"",width:"2812",height:"900"})}),"\n",(0,a.jsx)(n.h2,{id:"subgraph-configurations",children:"Subgraph configurations"}),"\n",(0,a.jsxs)(n.p,{children:["Configurations can also be set inside ",(0,a.jsx)(n.a,{href:"/engineers/subgraph",children:"subgraphs"}),". These configurations will apply to execution that happens inside of the subgraph. While each type of subgraph might look different, the configuration settings should include:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"An area to define configurations. It should have a similar appearance to the pipeline configuration UI."}),"\n",(0,a.jsx)(n.li,{children:"An option to copy pipeline configurations."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Upon creation, subgraph configurations will also be included in the pipeline configurations."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Subgraph configuration",src:i(778).A+"",width:"2812",height:"900"})}),"\n",(0,a.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,a.jsx)(n.p,{children:"All configuration instances and values are automatically converted to code."}),"\n","\n",(0,a.jsxs)(s.A,{children:[(0,a.jsxs)(o.A,{value:"scala",label:"Scala configuration code",children:[(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Open ",(0,a.jsx)(n.code,{children:"Config.scala"})," in the ",(0,a.jsx)(n.code,{children:"<pipeline-path>/config"})," folder."]}),"\n",(0,a.jsx)(n.li,{children:"View the default configuration code."}),"\n",(0,a.jsxs)(n.li,{children:["Find additional configurations that are packaged as JSON files in the ",(0,a.jsx)(n.code,{children:"resources/config"})," folder."]}),"\n"]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Config scala code",src:i(49827).A+"",width:"2620",height:"1508"})})]}),(0,a.jsxs)(o.A,{value:"py",label:"Python configuration code",children:[(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Open ",(0,a.jsx)(n.code,{children:"Config.py"})," in the ",(0,a.jsx)(n.code,{children:"<pipeline>/config"})," folder."]}),"\n",(0,a.jsx)(n.li,{children:"View the default configuration code."}),"\n",(0,a.jsxs)(n.li,{children:["Find additional configurations that are packaged as JSON files in the ",(0,a.jsx)(n.code,{children:"configs/resources/config"})," folder."]}),"\n"]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Config python code",src:i(55974).A+"",width:"2620",height:"1508"})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},55974:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/config-python-code-6afc0cd2451bb2f1d1dc8cb45de9380a.png"},65537:(e,n,i)=>{i.d(n,{A:()=>w});var t=i(96540),a=i(18215),r=i(65627),s=i(56347),o=i(50372),l=i(30604),c=i(11861),d=i(78749);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:a}}=e;return{value:n,label:i,attributes:t,default:a}}))}(i);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:i}=e;const a=(0,s.W6)(),r=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function g(e){const{defaultValue:n,queryString:i=!1,groupId:a}=e,r=h(e),[s,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[c,u]=f({queryString:i,groupId:a}),[g,b]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,d.Dv)(i);return[a,(0,t.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:a}),x=(()=>{const e=c??g;return p({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{x&&l(x)}),[x]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var b=i(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=i(74848);function m(e){let{className:n,block:i,selectedValue:t,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,i=l.indexOf(n),a=o[i].value;a!==t&&(c(n),s(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":i},n),children:o.map((e=>{let{value:n,label:i,attributes:r}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...r,className:(0,a.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function v(e){let{lazy:n,children:i,selectedValue:r}=e;const s=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=g(e);return(0,j.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,j.jsx)(m,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function w(e){const n=(0,b.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(n))}},70098:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/configuration-interactive-run-cb13245d8c276389669142b85f0fb18a.png"},74381:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/config-schema-390b791723e2e55ece5c3f07f9d82b3d.png"},79329:(e,n,i)=>{i.d(n,{A:()=>s});i(96540);var t=i(18215);const a={tabItem:"tabItem_Ymn6"};var r=i(74848);function s(e){let{children:n,hidden:i,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,s),hidden:i,children:n})}},83975:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/configuration-job-f899f2af1bbbeb3699b03e7178a46d5e.png"}}]);