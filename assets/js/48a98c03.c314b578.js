"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[5484],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},72360:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const i={tabItem:"tabItem_OmH5"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,l),hidden:n},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(83117),r=n(67294),i=n(72389),l=n(67392),o=n(7094),s=n(12466),c=n(86010);const u={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function d(e){const{lazy:t,block:n,defaultValue:i,values:d,groupId:p,className:f}=e,m=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??m.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,l.l)(b,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===i?i:i??m.find((e=>e.props.default))?.props.value??m[0]?.props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:k}=(0,o.U)(),[v,x]=(0,r.useState)(y),D=[],{blockElementScrollPositionUntilNextRender:N}=(0,s.o5)();if(null!=p){const e=h[p];null!=e&&e!==v&&b.some((t=>t.value===e))&&x(e)}const w=e=>{const t=e.currentTarget,n=D.indexOf(t),a=b[n].value;a!==v&&(N(t),x(a),null!=p&&k(p,a))},E=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=D.indexOf(e.currentTarget)+1;t=D[n]||D[0];break}case"ArrowLeft":{const n=D.indexOf(e.currentTarget)-1;t=D[n]||D[D.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,c.Z)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":n},f)},b.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>D.push(e),onKeyDown:E,onFocus:w,onClick:w},i,{className:(0,c.Z)("tabs__item",u.tabItem,i?.className,{"tabs__item--active":v===t})}),n??t)}))),t?(0,r.cloneElement)(m.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},m.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function p(e){const t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},1217:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(44996);const i=e=>{let{children:t}=e;return a.createElement("div",{style:{position:"relative",display:"flex","justify-content":"center","align-items":"center"}},t)},l=e=>{let{source:t,children:n}=e;return a.createElement("img",{src:(0,r.Z)(t),style:{"object-fit":"cover"}})},o=e=>{let{slides:t}=e;const[n,r]=(0,a.useState)(0);return a.createElement(i,null,a.createElement("i",{class:"fa fa-chevron-left",onClick:()=>{r(0===n?t.length-1:n-1)},style:{position:"absolute",top:"50%",left:"0px","font-size":"2rem"}}),a.createElement("i",{class:"fa fa-chevron-right",onClick:()=>{r(n===t.length-1?0:n+1)},style:{position:"absolute",top:"50%",right:"0px","font-size":"2rem"}}),a.createElement("div",{style:{padding:"30px"}},a.createElement(l,{source:t[n].image}),t[n].description))};function s(e){let{ImageData:t}=e;return a.createElement(o,{slides:t,style:{"font-family":" sans-serif","text-align":"center"}})}},88619:(e,t,n)=>{n.r(t),n.d(t,{ImageData:()=>p,assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>f});var a=n(83117),r=(n(67294),n(3905)),i=n(1217),l=n(9877),o=n(72360);const s={sidebar_position:2,title:"User-defined functions",id:"udfs",description:"User-defined functions",tags:["extensibility","udfs","udafs"]},c=void 0,u={unversionedId:"low-code-spark/extensibility/udfs",id:"low-code-spark/extensibility/udfs",title:"User-defined functions",description:"User-defined functions",source:"@site/docs/low-code-spark/extensibility/user-defined-functions.md",sourceDirName:"low-code-spark/extensibility",slug:"/low-code-spark/extensibility/udfs",permalink:"/low-code-spark/extensibility/udfs",draft:!1,tags:[{label:"extensibility",permalink:"/tags/extensibility"},{label:"udfs",permalink:"/tags/udfs"},{label:"udafs",permalink:"/tags/udafs"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"User-defined functions",id:"udfs",description:"User-defined functions",tags:["extensibility","udfs","udafs"]},sidebar:"defaultSidebar",previous:{title:"Dependencies",permalink:"/low-code-spark/extensibility/dependencies"},next:{title:"Gem builder",permalink:"/low-code-spark/extensibility/gem-builder"}},d={},p=[{image:"/img/udf/1.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 1 - Open UDF definition window")},{image:"/img/udf/2.1.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 2 (Python)- Define Python UDF")},{image:"/img/udf/2.2.png",description:(0,r.kt)("h3",{style:{padding:"10px"}}," Step 2 (Scala) - Define Scala UDf")},{image:"/img/udf/3.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 3 - UDFs can now be called by their defined names")}],f=[{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3},{value:"Defining and Using UDF",id:"defining-and-using-udf",level:4}],m={ImageData:p,toc:f},b="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(b,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Allows you to create user defined functions (UDF) which are then usable anywhere in the Pipeline"),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UDF Name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the UDF to be used to register it. All calls to the UDF will use this name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Definition"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Definition of the UDF function. ",(0,r.kt)("br",null)," Eg: ",(0,r.kt)("inlineCode",{parentName:"td"},"udf((value:Int)=>value*value)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UDF initialization code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Code block that contains initialization of entities used by UDFs. This could for example contain any static mapping that a UDF might use"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False")))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"defining-and-using-udf"},"Defining and Using UDF"),(0,r.kt)(i.Z,{ImageData:p,mdxType:"App"}),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'country_code_map = {"Mexico" : "MX", "USA" : "US", "India" : "IN"}\n\ndef registerUDFs(spark: SparkSession):\n    spark.udf.register("get_country_code", get_country_code)\n\n@udf(returnType = StringType())\ndef get_country_code(country: str):\n    return country_code_map.get(country, "Not Found")\n'))),(0,r.kt)(o.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object UDFs extends Serializable {\n  val country_code_map = Map("Mexico" -> "MX", "USA" -> "US", "India" -> "IN")\n\n  def registerUDFs(spark: SparkSession) =\n    spark.udf.register("get_country_code", get_country_code)\n\n  def get_country_code =\n    udf { (country: String) =>\n      country_code_map.getOrElse(country, "Not Found")\n    }\n\n}\n')))))}g.isMDXComponent=!0}}]);