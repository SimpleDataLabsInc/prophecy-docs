"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[4483],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},52991:(e,t,n)=>{n.d(t,{Z:()=>f});var r=n(67294),a=n(86010),i=n(53438),o=n(39960),c=n(13919),l=n(95999);const s={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:t,children:n}=e;return r.createElement(o.Z,{href:t,className:(0,a.Z)("card padding--lg",s.cardContainer)},n)}function m(e){let{href:t,icon:n,title:i,description:o}=e;return r.createElement(p,{href:t},r.createElement("h2",{className:(0,a.Z)("text--truncate",s.cardTitle),title:i},n," ",i),o&&r.createElement("p",{className:(0,a.Z)("text--truncate",s.cardDescription),title:o},o))}function d(e){let{item:t}=e;const n=(0,i.Wl)(t);return n?r.createElement(m,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function u(e){let{item:t}=e;const n=(0,c.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.xz)(t.docId??void 0);return r.createElement(m,{href:t.href,icon:n,title:t.label,description:a?.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return r.createElement(u,{item:t});case"category":return r.createElement(d,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function h(e){let{className:t}=e;const n=(0,i.jA)();return r.createElement(f,{items:n.items,className:t})}function f(e){const{items:t,className:n}=e;if(!t)return r.createElement(h,e);const o=(0,i.MN)(t);return r.createElement("section",{className:(0,a.Z)("row",n)},o.map(((e,t)=>r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(g,{item:e})))))}},9364:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>c,metadata:()=>s,toc:()=>m});var r=n(87462),a=(n(67294),n(3905)),i=n(52991),o=n(53438);const c={title:"Machine Learning",id:"Machine Learning",description:"Preparing and Using Data for Machine Learning",tags:["generative-ai","machine-learning","llm","pinecone","openai"]},l=void 0,s={unversionedId:"low-code-spark/gems/machine-learning/Machine Learning",id:"low-code-spark/gems/machine-learning/Machine Learning",title:"Machine Learning",description:"Preparing and Using Data for Machine Learning",source:"@site/docs/low-code-spark/gems/machine-learning/machine-learning.md",sourceDirName:"low-code-spark/gems/machine-learning",slug:"/low-code-spark/gems/machine-learning/",permalink:"/low-code-spark/gems/machine-learning/",draft:!1,tags:[{label:"generative-ai",permalink:"/tags/generative-ai"},{label:"machine-learning",permalink:"/tags/machine-learning"},{label:"llm",permalink:"/tags/llm"},{label:"pinecone",permalink:"/tags/pinecone"},{label:"openai",permalink:"/tags/openai"}],version:"current",frontMatter:{title:"Machine Learning",id:"Machine Learning",description:"Preparing and Using Data for Machine Learning",tags:["generative-ai","machine-learning","llm","pinecone","openai"]},sidebar:"defaultSidebar",previous:{title:"Rest API Enrich",permalink:"/low-code-spark/gems/custom/rest-api-enrich"},next:{title:"Text Processing",permalink:"/low-code-spark/gems/machine-learning/ml-text-processing"}},p={},m=[{value:"Cluster library dependencies",id:"cluster-library-dependencies",level:3}],d={toc:m},u="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Each page below describes one of the set of Gems that prepare or use data for Machine Learning. These Gems have a required ",(0,a.kt)("a",{parentName:"p",href:"/low-code-spark/gems/machine-learning/#cluster-library-dependencies"},"Cluster library dependency"),". For an example set of Pipelines that use these Gems to create a Generative AI Chatbot, see this ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/gen-ai-chatbot"},"guide.")),(0,a.kt)(i.Z,{items:(0,o.jA)().items,mdxType:"DocCardList"}),(0,a.kt)("h3",{id:"cluster-library-dependencies"},"Cluster library dependencies"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/prophecy-io/spark-ai/tree/main"},(0,a.kt)("strong",{parentName:"a"},"Spark-AI"))," - Toolbox for building Generative AI applications on top of Apache Spark. This library dependency is required for the Machine Learning Gem functionality. Setup this dependency in one of two ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Option a. Import a project with the spark-ai dependency preconfigured, as in this ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/gen-ai-chatbot#1c-load-the-git-repository"},"guide."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Option b. Alternatively, add ",(0,a.kt)("inlineCode",{parentName:"p"},"prophecy-spark-ai==0.1.8")," as a Python library, and ",(0,a.kt)("inlineCode",{parentName:"p"},"io.prophecy:spark-ai_2.12:0.1.8")," as a Maven library to the Pipeline ",(0,a.kt)("a",{parentName:"p",href:"/low-code-spark/extensibility/dependencies#add-dependency"},"dependencies.")))),(0,a.kt)("p",null,"Click ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/prophecy-io/spark-ai/tree/main#roadmap"},"here")," to see the roadmap for what's coming in the future with the Spark-AI toolbox."))}g.isMDXComponent=!0}}]);