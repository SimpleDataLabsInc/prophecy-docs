"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[35449],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>c});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,c=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?r.createElement(c,o(o({ref:t},g),{},{components:a})):r.createElement(c,o({ref:t},g))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6902:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=a(58168),n=(a(96540),a(15680));const l={title:"JSON",id:"json",description:"JSON",sidebar_position:7,tags:["gems","file","json"]},o=void 0,i={unversionedId:"Spark/gems/source-target/file/json",id:"Spark/gems/source-target/file/json",title:"JSON",description:"JSON",source:"@site/docs/Spark/gems/source-target/file/json.md",sourceDirName:"Spark/gems/source-target/file",slug:"/Spark/gems/source-target/file/json",permalink:"/Spark/gems/source-target/file/json",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"file",permalink:"/tags/file"},{label:"json",permalink:"/tags/json"}],version:"current",sidebarPosition:7,frontMatter:{title:"JSON",id:"json",description:"JSON",sidebar_position:7,tags:["gems","file","json"]},sidebar:"defaultSidebar",previous:{title:"Iceberg",permalink:"/Spark/gems/source-target/file/iceberg"},next:{title:"Kafka",permalink:"/Spark/gems/source-target/file/kafka"}},s={},p=[{value:"Source",id:"source",level:2},{value:"Source Parameters",id:"source-parameters",level:3},{value:"Example",id:"source-example",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target",id:"target",level:2},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Example",id:"target-example",level:3},{value:"Generated Code",id:"target-code",level:3},{value:"Producing a single output file",id:"producing-a-single-output-file",level:3}],g=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.yg)("div",t)},d=g("Tabs"),u=g("TabItem"),m={toc:p},c="wrapper";function y(e){let{components:t,...a}=e;return(0,n.yg)(c,(0,r.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Read and write JSON formatted files"),(0,n.yg)("h2",{id:"source"},"Source"),(0,n.yg)("h3",{id:"source-parameters"},"Source Parameters"),(0,n.yg)("p",null,"JSON ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("em",{parentName:"strong"},"Source"))," supports all the available ",(0,n.yg)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-json.html"},"Spark read options for JSON"),"."),(0,n.yg)("p",null,"The below list contains the additional parameters to read a JSON file:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dataset Name"),(0,n.yg)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,n.yg)("td",{parentName:"tr",align:null},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Location"),(0,n.yg)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,n.yg)("br",null)," E.g.: ",(0,n.yg)("inlineCode",{parentName:"td"},"dbfs:/data/test.json")),(0,n.yg)("td",{parentName:"tr",align:null},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Schema"),(0,n.yg)("td",{parentName:"tr",align:null},"Schema to applied on the loaded data. Can be defined/edited as JSON or inferred using ",(0,n.yg)("inlineCode",{parentName:"td"},"Infer Schema")," button."),(0,n.yg)("td",{parentName:"tr",align:null},"True")))),(0,n.yg)("h3",{id:"source-example"},"Example"),(0,n.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.yg)("iframe",{src:"https://user-images.githubusercontent.com/130362885/234556861-d5b82f1a-883e-4b49-bebe-0ac47511583e.mp4",title:"Json Source",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.yg)("h3",{id:"source-code"},"Generated Code"),(0,n.yg)(d,{mdxType:"Tabs"},(0,n.yg)(u,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},'def ReadDelta(spark: SparkSession) -> DataFrame:\n    return spark.read.format("json").load("dbfs:/FileStore/data/example.json")\n'))),(0,n.yg)(u,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},'object ReadJson {\n\ndef apply(spark: SparkSession): DataFrame =\nspark.read\n.format("json")\n.load("dbfs:/FileStore/data/example.json")\n\n}\n')))),(0,n.yg)("h2",{id:"target"},"Target"),(0,n.yg)("h3",{id:"target-parameters"},"Target Parameters"),(0,n.yg)("p",null,"JSON ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("em",{parentName:"strong"},"Target"))," supports all the available ",(0,n.yg)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-json.html"},"Spark write options for JSON"),"."),(0,n.yg)("p",null,"The below list contains the additional parameters to write a JSON file:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dataset Name"),(0,n.yg)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,n.yg)("td",{parentName:"tr",align:null},"True")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Location"),(0,n.yg)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,n.yg)("br",null)," E.g.: ",(0,n.yg)("inlineCode",{parentName:"td"},"dbfs:/data/output.json")),(0,n.yg)("td",{parentName:"tr",align:null},"True")))),(0,n.yg)("h3",{id:"target-example"},"Example"),(0,n.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.yg)("iframe",{src:"https://user-images.githubusercontent.com/130362885/234556999-72c22d9b-c99e-4e6c-8887-b54b8d5d94f1.mp4",title:"Json Target",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.yg)("h3",{id:"target-code"},"Generated Code"),(0,n.yg)(d,{mdxType:"Tabs"},(0,n.yg)(u,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},'def write_json(spark: SparkSession, in0: DataFrame):\n    in0.write\\\n        .format("json")\\\n        .mode("overwrite")\\\n        .save("dbfs:/data/test_output.json")\n'))),(0,n.yg)(u,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-scala"},'object write_json {\n  def apply(spark: SparkSession, in: DataFrame): Unit =\n    in.write\n        .format("json")\n        .mode("overwrite")\n        .save("dbfs:/data/test_output.json")\n}\n')))),(0,n.yg)("h3",{id:"producing-a-single-output-file"},"Producing a single output file"),(0,n.yg)("p",null,"Because of Spark's distributed nature, output files are written as multiple separate partition files. If you need a single output file for some reason (such as reporting or exporting to an external system), use a ",(0,n.yg)("inlineCode",{parentName:"p"},"Repartition")," Gem in ",(0,n.yg)("inlineCode",{parentName:"p"},"Coalesce")," mode with 1 output partition:"),(0,n.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.yg)("iframe",{src:"https://user-images.githubusercontent.com/130362885/234560215-5f85e164-638c-4cb9-abc6-dbd9cefb0e05.mp4",title:"Single Output file",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.yg)("br",null),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"Note: This is not recommended for extremely large data sets as it may overwhelm the worker node writing the file.")))}y.isMDXComponent=!0}}]);