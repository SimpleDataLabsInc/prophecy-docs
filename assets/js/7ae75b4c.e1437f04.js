"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[972],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),u=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,g=c["".concat(d,".").concat(m)]||c[m]||p[m]||o;return t?a.createElement(g,i(i({ref:n},s),{},{components:t})):a.createElement(g,i({ref:n},s))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(86010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>v});var a=t(87462),r=t(67294),o=t(86010),i=t(12466),l=t(16550),d=t(91980),u=t(67392),s=t(50012);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??c(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function w(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[d,u]=g({queryString:t,groupId:a}),[c,w]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,s.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),f=(()=>{const e=d??c;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),w(e)}),[u,w,o]),tabValues:o}}var f=t(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:l,selectValue:d,tabValues:u}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=s.indexOf(n),a=u[t].value;a!==l&&(c(n),d(a))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>s.push(e),onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",k.tabItem,i?.className,{"tabs__item--active":l===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;if(t=Array.isArray(t)?t:[t],n){const e=t.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function h(e){const n=w(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},r.createElement(b,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function v(e){const n=(0,f.Z)();return r.createElement(h,(0,a.Z)({key:String(n)},e))}},45281:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var a=t(87462),r=(t(67294),t(3905)),o=t(74866),i=t(85162);const l={sidebar_position:9,title:"Window Function",id:"window-function",description:"Aggregate and transform Windowed data",tags:["gems","window","aggregate"]},d=void 0,u={unversionedId:"low-code-spark/gems/transform/window-function",id:"low-code-spark/gems/transform/window-function",title:"Window Function",description:"Aggregate and transform Windowed data",source:"@site/docs/low-code-spark/gems/transform/window-function.md",sourceDirName:"low-code-spark/gems/transform",slug:"/low-code-spark/gems/transform/window-function",permalink:"/low-code-spark/gems/transform/window-function",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"window",permalink:"/tags/window"},{label:"aggregate",permalink:"/tags/aggregate"}],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Window Function",id:"window-function",description:"Aggregate and transform Windowed data",tags:["gems","window","aggregate"]},sidebar:"defaultSidebar",previous:{title:"Set Operation",permalink:"/low-code-spark/gems/transform/set-operation"},next:{title:"Join & Split",permalink:"/low-code-spark/gems/join-split/"}},s={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3},{value:"Ranking Functions with Window",id:"ranking-functions-with-window",level:4},{value:"Analytical Functions with Window",id:"analytical-functions-with-window",level:4},{value:"Aggregate Functions with Window",id:"aggregate-functions-with-window",level:4}],p={toc:c},m="wrapper";function g(e){let{components:n,...l}=e;return(0,r.kt)(m,(0,a.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Allows you to define a ",(0,r.kt)("strong",{parentName:"p"},"WindowSpec")," and apply Window functions on a DataFrame"),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DataFrame"),(0,r.kt)("td",{parentName:"tr",align:null},"Input DataFrame"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Target column"),(0,r.kt)("td",{parentName:"tr",align:null},"Output Column name"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Source expression"),(0,r.kt)("td",{parentName:"tr",align:null},"Window function expression to perform over the created Window"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Order columns"),(0,r.kt)("td",{parentName:"tr",align:null},"Columns to order by in Window. Must be a numeric type column if a ",(0,r.kt)("inlineCode",{parentName:"td"},"Range Frame")," is selected"),(0,r.kt)("td",{parentName:"tr",align:null},"Required when ",(0,r.kt)("inlineCode",{parentName:"td"},"Source expression")," has a Ranking/Analytical function ",(0,r.kt)("strong",{parentName:"td"},"OR")," when ",(0,r.kt)("inlineCode",{parentName:"td"},"Range Frame")," is selected")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Partition column"),(0,r.kt)("td",{parentName:"tr",align:null},"Column to partition by in Window"),(0,r.kt)("td",{parentName:"tr",align:null},"False")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Row frame"),(0,r.kt)("td",{parentName:"tr",align:null},"Row based frame boundary to apply on Window"),(0,r.kt)("td",{parentName:"tr",align:null},"False")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Range frame"),(0,r.kt)("td",{parentName:"tr",align:null},"Range based frame boundary to apply on Window"),(0,r.kt)("td",{parentName:"tr",align:null},"False")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"When ",(0,r.kt)("inlineCode",{parentName:"p"},"Order Columns")," are not defined, an unbounded window frame ",(0,r.kt)("inlineCode",{parentName:"p"},"(rowFrame, unboundedPreceding, unboundedFollowing)")," is used by default.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"When ",(0,r.kt)("inlineCode",{parentName:"p"},"Order Columns")," are defined, a growing window frame ",(0,r.kt)("inlineCode",{parentName:"p"},"(rangeFrame, unboundedPreceding, currentRow)")," is used by default.")),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"ranking-functions-with-window"},"Ranking Functions with Window"),(0,r.kt)("p",null,"Examples of ranking functions are: ",(0,r.kt)("inlineCode",{parentName:"p"},"row_number()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rank()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dense_rank()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ntile()")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Only the default window frame ",(0,r.kt)("inlineCode",{parentName:"p"},"(rowFrame, unboundedPreceding, currentRow)")," can be used with Ranking functions")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example usage of Window - Ranking",src:t(58706).Z,width:"1920",height:"1080"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def rank_cust_orders(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn(\n            "order_number",\n            row_number().over(\n                Window.partitionBy(col("customer_id")).orderBy(col("order_date").asc())\n            )\n        )\\\n        .withColumn(\n            "order_recency",\n             ntile(2).over(\n                 Window.partitionBy(col("customer_id")).orderBy(col("order_date").asc())\n             )\n         )\n'))),(0,r.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object rank_cust_orders {\n\n  def apply(spark: SparkSession, in1: DataFrame): DataFrame = {\n    import org.apache.spark.sql.expressions.{Window, WindowSpec}\n    in1\n      .withColumn(\n        "order_number",\n        row_number().over(\n          Window.partitionBy(col("customer_id")).orderBy(col("order_date").asc)\n        )\n      )\n      .withColumn(\n        "order_recency",\n        ntile(2).over(\n          Window.partitionBy(col("customer_id")).orderBy(col("order_date").asc)\n        )\n      )\n  }\n}\n')))),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"analytical-functions-with-window"},"Analytical Functions with Window"),(0,r.kt)("p",null,"Examples of analytical functions are: ",(0,r.kt)("inlineCode",{parentName:"p"},"lead()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"lag()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cume_dist()"),", etc."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Window frame for ",(0,r.kt)("inlineCode",{parentName:"p"},"lead()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"lag()")," can not be specified.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Only the default window frame ",(0,r.kt)("inlineCode",{parentName:"p"},"(rangeFrame, unboundedPreceding, currentRow)")," can be used with ",(0,r.kt)("inlineCode",{parentName:"p"},"cume_dist()"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example usage of Window - Analytical",src:t(31388).Z,width:"1920",height:"1080"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def analyse_orders(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn(\n          "previous_order_date",\n          lag(col("order_date")).over(\n            Window.partitionBy(col("customer_id")).orderBy(col("order_id").asc())\n          )\n        )\\\n        .withColumn(\n            "next_order_date",\n            lead(col("order_date")).over(\n                Window.partitionBy(col("customer_id")).orderBy(col("order_id").asc())\n            )\n        )\n'))),(0,r.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object analyse_orders {\n  def apply(spark: SparkSession, in1: DataFrame): DataFrame = {\n    import org.apache.spark.sql.expressions.{Window, WindowSpec}\n    in1\n      .withColumn(\n        "previous_order_date",\n        lag(col("order_date")).over(\n          Window.partitionBy(col("customer_id")).orderBy(col("order_date").asc)\n        )\n      )\n      .withColumn(\n        "next_order_date",\n        lead(col("order_date")).over(\n          Window.partitionBy(col("customer_id")).orderBy(col("order_date").asc)\n        )\n      )\n  }\n}\n')))),(0,r.kt)("h4",{id:"aggregate-functions-with-window"},"Aggregate Functions with Window"),(0,r.kt)("p",null,"Examples of analytical functions are: ",(0,r.kt)("inlineCode",{parentName:"p"},"min()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"max()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"avg()"),", etc.\n",(0,r.kt)("img",{alt:"Example usage of Window - Aggregate",src:t(55131).Z,width:"1847",height:"1016"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def agg_orders(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn(\n          "running_avg_spend",\n          avg(col("amount"))\\\n            .over(Window.partitionBy(col("customer_id"))\\\n                    .rowsBetween(Window.unboundedPreceding, Window.currentRow))\n        )\\\n        .withColumn("running_max_spend", max(col("amount"))\\\n        .over(Window.partitionBy(col("customer_id"))\\\n                .rowsBetween(Window.unboundedPreceding, Window.currentRow)))\n'))),(0,r.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object agg_orders {\n  def apply(spark: SparkSession, in1: DataFrame): DataFrame = {\n    import org.apache.spark.sql.expressions.{Window, WindowSpec}\n    in1\n      .withColumn("running_avg_spend",\n                  avg(col("amount")).over(\n                    Window\n                      .partitionBy(col("customer_id"))\n                      .rowsBetween(Window.unboundedPreceding, Window.currentRow)\n                  )\n      )\n      .withColumn("running_max_spend",\n                  max(col("amount")).over(\n                    Window\n                      .partitionBy(col("customer_id"))\n                      .rowsBetween(Window.unboundedPreceding, Window.currentRow)\n                  )\n      )\n  }\n}\n')))))}g.isMDXComponent=!0},55131:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/window_eg_agg-8a34b6829ab9ac882ccba44db524a903.png"},31388:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/window_eg_analytical-f61582f4e18249a8c33cf5a3210326e4.png"},58706:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/window_eg_ranking-50daead83be3eaf26cb68c15845a722b.png"}}]);