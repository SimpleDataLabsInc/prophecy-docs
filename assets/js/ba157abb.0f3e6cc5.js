"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[34910],{28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var r=a(96540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}},37244:(e,n,a)=>{a.d(n,{A:()=>_});var r=a(96540),t=a(18215),s=a(44319),i=a(56347),l=a(94280),c=a(73024),o=a(58417),d=a(44031);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:a,default:r}})=>({value:e,label:n,attributes:a,default:r}))}(a);return function(e){const n=(0,o.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,a])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const a=(0,i.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(t),(0,r.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(a.location.search);n.set(t,e),a.replace({...a.location,search:n.toString()})},[t,a])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,s=h(e),[i,c]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find(e=>e.default)??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s})),[o,u]=m({queryString:a,groupId:t}),[x,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,t]=(0,d.Dv)(n);return[a,(0,r.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),g=(()=>{const e=o??x;return p({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{g&&c(g)},[g]);return{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)},[u,f,s]),tabValues:s}}var f=a(46916);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=a(74848);function b({className:e,block:n,selectedValue:a,selectValue:r,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),o=e=>{const n=e.currentTarget,t=l.indexOf(n),s=i[t].value;s!==a&&(c(n),r(s))},d=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:r})=>(0,j.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:o,...r,className:(0,t.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:a}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===a);return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function v(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,j.jsx)(b,{...n,...e}),(0,j.jsx)(y,{...n,...e})]})}function _(e){const n=(0,f.A)();return(0,j.jsx)(v,{...e,children:u(e.children)},String(n))}},56778:(e,n,a)=>{a.d(n,{A:()=>i});a(96540);var r=a(18215);const t={tabItem:"tabItem_Ymn6"};var s=a(74848);function i({children:e,hidden:n,className:a}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,a),hidden:n,children:e})}},86059:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"Spark/gems/transform/dynamic-replace","title":"DynamicReplace gem","description":"Dynamically generate values depending on certain conditions","source":"@site/docs/Spark/gems/transform/dynamic-replace.md","sourceDirName":"Spark/gems/transform","slug":"/engineers/dynamic-replace","permalink":"/engineers/dynamic-replace","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"transform","permalink":"/tags/transform"}],"version":"current","frontMatter":{"title":"DynamicReplace gem","sidebar_label":"DynamicReplace","id":"dynamic-replace","slug":"/engineers/dynamic-replace","description":"Dynamically generate values depending on certain conditions","tags":["gems","transform"]},"sidebar":"mySidebar","previous":{"title":"Deduplicate","permalink":"/engineers/deduplicate"},"next":{"title":"DynamicSelect","permalink":"/engineers/dynamic-select"}}');var t=a(74848),s=a(28453),i=a(97071),l=a(37244),c=a(56778);const o={title:"DynamicReplace gem",sidebar_label:"DynamicReplace",id:"dynamic-replace",slug:"/engineers/dynamic-replace",description:"Dynamically generate values depending on certain conditions",tags:["gems","transform"]},d=void 0,u={},h=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Define datasets",id:"define-datasets",level:3},{value:"Configure the gem",id:"configure-the-gem",level:3},{value:"Example code",id:"example-code",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.A,{python_package_name:"ProphecySparkAlteryxPython",python_package_version:"0.0.7",scala_package_name:"",scala_package_version:"",scala_lib:"",python_lib:"",uc_single:"Not Supported",uc_shared:"Not Supported",livy:"Not Supported"}),"\n",(0,t.jsx)(n.p,{children:"Use the DynamicReplace gem to replace a set of values with dynamically generated values depending on certain conditions."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If you want to create new columns based on a set of conditions (rather than perform in-place replacement), you can use ",(0,t.jsx)(n.a,{href:"/engineers/business-rules",children:"business rules"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Field Name Field"}),(0,t.jsxs)(n.td,{children:["Column from ",(0,t.jsx)(n.strong,{children:"in1"})," that contains field names from ",(0,t.jsx)(n.strong,{children:"in0"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Boolean Expression Field"}),(0,t.jsxs)(n.td,{children:["Column from ",(0,t.jsx)(n.strong,{children:"in1"})," that contains an expression that is used to evaluate the data from ",(0,t.jsx)(n.strong,{children:"in0"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Output Value Field"}),(0,t.jsxs)(n.td,{children:["Column from ",(0,t.jsx)(n.strong,{children:"in1"})," that contains replacement data. It can contain static values or expressions that act on the data from ",(0,t.jsx)(n.strong,{children:"in0"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Values are Expressions"}),(0,t.jsx)(n.td,{children:"Checkbox to enable if the Output Value column contains expressions to define the replacement value."})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["If a value does not meet a condition, then it will be replaced with a ",(0,t.jsx)(n.strong,{children:"null"})," value."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Expressions must be in Spark SQL format."})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"If you have a dataset with a numeric column and need to apply an upper limit to its values dynamically, you can use the DynamicReplace gem. In this example, any value in a certain column over 200,000 (like 250,000) will be replaced with the value 200,000."}),"\n",(0,t.jsx)(n.h3,{id:"define-datasets",children:"Define datasets"}),"\n",(0,t.jsx)(n.p,{children:"The DynamicReplace gem requires two inputs. These are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.strong,{children:"original dataset"}),". This contains the target column(s) for replacement and is the ",(0,t.jsx)(n.strong,{children:"in0"})," of the DynamicReplace gem."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.strong,{children:"parameters dataset"}),". This contains the dynamic replacement parameters and is the ",(0,t.jsx)(n.strong,{children:"in1"})," of the DynamicReplace gem."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The parameters dataset must follow a specific format to define how values should be replaced. Below is an example parameters table:"}),"\n",(0,t.jsx)("div",{class:"table-example",children:(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"original_column"}),(0,t.jsx)(n.th,{children:"condition"}),(0,t.jsx)(n.th,{children:"output_value"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"sales"}),(0,t.jsxs)(n.td,{children:["sales ",(0,t.jsx)(n.code,{children:">"})," 200000"]}),(0,t.jsx)(n.td,{children:"200000"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"sales"}),(0,t.jsxs)(n.td,{children:["sales ",(0,t.jsx)(n.code,{children:"<="})," 200000"]}),(0,t.jsx)(n.td,{children:"sales"})]})]})]})}),"\n",(0,t.jsx)(n.p,{children:"Each row represents a condition that will be applied to a certain column. In this case, these conditions are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If the value of a sale is more than 200,000, it is replaced with 200,000."}),"\n",(0,t.jsx)(n.li,{children:"If the value of a sale is less than or equal to 200,000, it remains unchanged."}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"You can also add conditions for multiple columns in this parameters dataset if required by your use case."})}),"\n",(0,t.jsx)(n.h3,{id:"configure-the-gem",children:"Configure the gem"}),"\n",(0,t.jsx)(n.p,{children:"Once you have both datasets in your pipeline:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add a DynamicReplace gem to the pipeline canvas."}),"\n",(0,t.jsx)(n.li,{children:"Connect the inputs to the DynamicReplace gem."}),"\n",(0,t.jsx)(n.li,{children:"Configure the DynamicReplace gem."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For this example, you would configure the gem using the following values:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Value"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Field Name Field"}),(0,t.jsx)(n.td,{children:"original_column"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Boolean Expression Field"}),(0,t.jsx)(n.td,{children:"condition"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Output Value Field"}),(0,t.jsx)(n.td,{children:"output_value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Values are Expressions"}),(0,t.jsx)(n.td,{children:"enabled"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"example-code",children:"Example code"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["To see the compiled code of your project, ",(0,t.jsx)(n.a,{href:"/engineers/pipelines#project-editor",children:"switch to the Code view"})," in the project header."]})}),"\n","\n",(0,t.jsx)(l.A,{children:(0,t.jsx)(c.A,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'def dynamic_replace_expression(spark: SparkSession, in0: DataFrame, in1: DataFrame) -> DataFrame:\n    from prophecy.utils import ProphecyDataFrame\n\n    return ProphecyDataFrame(in0, spark)\\\n        .dynamicReplaceExpr(in1.withColumn("__rowId", monotonically_increasing_id().cast("integer"))._jdf, "__rowId", "source_column", "condition", "output_value", spark)\n'})})})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},97071:(e,n,a)=>{a.d(n,{A:()=>t});a(96540);var r=a(74848);function t(e){return(0,r.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:[e.python_package_name," ",e.python_package_version]})}),e.scala_package_name&&e.scala_package_version&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:[e.scala_package_name," ",e.scala_package_version]})}),e.python_lib&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsPython ",e.python_lib]})}),e.scala_lib&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsScala ",e.scala_lib]})}),e.uc_single&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["UC Dedicated Cluster ",e.uc_single]})}),e.uc_shared&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["UC Standard Cluster ",e.uc_shared]})}),e.livy&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["Livy ",e.livy]})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{})]})}}}]);