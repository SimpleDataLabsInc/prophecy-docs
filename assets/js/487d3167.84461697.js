"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[2223],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),o=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=o(a),g=n,y=m["".concat(p,".").concat(g)]||m[g]||d[g]||l;return a?r.createElement(y,s(s({ref:t},c),{},{components:a})):r.createElement(y,s({ref:t},c))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:n,s[1]=i;for(var o=2;o<l;o++)s[o]=a[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},50728:(e,t,a)=>{a.d(t,{A:()=>n});var r=a(96540);function n(e){return r.createElement("div",null,e.python_package_name&&e.python_package_version&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},e.python_package_name),r.createElement("span",{className:"right"},e.python_package_version))),e.scala_package_name&&e.scala_package_version&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},e.scala_package_name),r.createElement("span",{className:"right"},e.scala_package_version))),e.python_lib&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},"ProphecyLibsPython"),r.createElement("span",{className:"right"},e.python_lib))),e.scala_lib&&r.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},r.createElement("span",{className:"badge-dependency"},r.createElement("span",{className:"left"},"ProphecyLibsScala"),r.createElement("span",{className:"right"},e.scala_lib))),e.uc_single&&r.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/"},r.createElement("span",{className:"badge-spark"},r.createElement("span",{className:"left"},"Databricks UC Single Cluster"),r.createElement("span",{className:"right"},e.uc_single))),e.uc_shared&&r.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/ucshared"},r.createElement("span",{className:"badge-spark"},r.createElement("span",{className:"left"},"Databricks UC Shared"),r.createElement("span",{className:"right"},e.uc_shared))),e.livy&&r.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/livy"},r.createElement("span",{className:"badge-spark"},r.createElement("span",{className:"left"},"Livy"),r.createElement("span",{className:"right"},e.livy))),r.createElement("br",null),r.createElement("br",null))}},99505:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=a(58168),n=(a(96540),a(15680)),l=a(50728);const s={title:"Seed",id:"seed",description:"Parameters and properties to read from Seed files",tags:["gems","file","seed"]},i=void 0,p={unversionedId:"Spark/gems/source-target/file/seed",id:"Spark/gems/source-target/file/seed",title:"Seed",description:"Parameters and properties to read from Seed files",source:"@site/docs/Spark/gems/source-target/file/seed.md",sourceDirName:"Spark/gems/source-target/file",slug:"/Spark/gems/source-target/file/seed",permalink:"/Spark/gems/source-target/file/seed",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"file",permalink:"/tags/file"},{label:"seed",permalink:"/tags/seed"}],version:"current",frontMatter:{title:"Seed",id:"seed",description:"Parameters and properties to read from Seed files",tags:["gems","file","seed"]},sidebar:"mySidebar",previous:{title:"Parquet",permalink:"/Spark/gems/source-target/file/parquet"},next:{title:"Text",permalink:"/Spark/gems/source-target/file/text"}},o={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Source",id:"source",level:2},{value:"Source properties",id:"source-properties",level:3},{value:"Target",id:"target",level:2}],m={toc:c},d="wrapper";function g(e){let{components:t,...a}=e;return(0,n.yg)(d,(0,r.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)(l.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.2.31+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.2.5.6",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"Not Supported",livy:"3.2.0+",mdxType:"Requirements"}),(0,n.yg)("p",null,"The Seed file type:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Is a configuration file that provides initial data or settings for an application."),(0,n.yg)("li",{parentName:"ul"},"Allows you to manually write small CSV files into your Prophecy pipelines.")),(0,n.yg)("p",null,"You can only read data from Seed files in Prophecy."),(0,n.yg)("h2",{id:"parameters"},"Parameters"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:null},"Tab"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Data"),(0,n.yg)("td",{parentName:"tr",align:null},"Data"),(0,n.yg)("td",{parentName:"tr",align:null},"Data you provide in the Seed format.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Schema"),(0,n.yg)("td",{parentName:"tr",align:null},"Properties"),(0,n.yg)("td",{parentName:"tr",align:null},"Schema to apply on the data. You can define or edit the schema as a JSON, or infer it with the ",(0,n.yg)("inlineCode",{parentName:"td"},"Infer Schema")," button.")))),(0,n.yg)("h2",{id:"source"},"Source"),(0,n.yg)("p",null,"The Source gem reads data from Seed files and allows you to optionally specify the following additional properties."),(0,n.yg)("h3",{id:"source-properties"},"Source properties"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Property name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Default"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Select an appropriate delimiter for entered data"),(0,n.yg)("td",{parentName:"tr",align:null},"Character to separate data you enter."),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},","))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"First row is header"),(0,n.yg)("td",{parentName:"tr",align:null},"Whether the first row is the table header."),(0,n.yg)("td",{parentName:"tr",align:null},"true")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Enforce specified or inferred schema"),(0,n.yg)("td",{parentName:"tr",align:null},"Whether the output schema must match what you define in this tab."),(0,n.yg)("td",{parentName:"tr",align:null},"false")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Auto Infer schema from the data"),(0,n.yg)("td",{parentName:"tr",align:null},"Whether you want to automatically enter the schema."),(0,n.yg)("td",{parentName:"tr",align:null},"false")))),(0,n.yg)("h2",{id:"target"},"Target"),(0,n.yg)("p",null,"The Target gem does not support writing to Seed files."))}g.isMDXComponent=!0}}]);