"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[31902],{15680:(e,a,t)=>{t.d(a,{xA:()=>p,yg:()=>g});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),c=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},p=function(e){var a=c(e.components);return n.createElement(o.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,g=u["".concat(o,".").concat(d)]||u[d]||m[d]||l;return t?n.createElement(g,s(s({ref:a},p),{},{components:t})):n.createElement(g,s({ref:a},p))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=d;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<l;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},19365:(e,a,t)=>{t.d(a,{A:()=>s});var n=t(96540),r=t(20053);const l={tabItem:"tabItem_Ymn6"};function s(e){let{children:a,hidden:t,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,s),hidden:t},a)}},11470:(e,a,t)=>{t.d(a,{A:()=>E});var n=t(58168),r=t(96540),l=t(20053),s=t(23104),i=t(56347),o=t(57485),c=t(31682),p=t(89466);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function m(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??u(t);return function(e){const a=(0,c.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function d(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function g(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.W6)(),l=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,o.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(n.location.search);a.set(l,e),n.replace({...n.location,search:a.toString()})}),[l,n])]}function y(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,l=m(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!d({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:l}))),[o,c]=g({queryString:t,groupId:n}),[u,y]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,l]=(0,p.Dv)(t);return[n,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:n}),f=(()=>{const e=o??u;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),y(e)}),[c,y,l]),tabValues:l}}var f=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:a,block:t,selectedValue:i,selectValue:o,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),m=e=>{const a=e.currentTarget,t=p.indexOf(a),n=c[t].value;n!==i&&(u(a),o(n))},d=e=>{let a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;a=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;a=p[t]??p[p.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},a)},c.map((e=>{let{value:a,label:t,attributes:s}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>p.push(e),onKeyDown:d,onClick:m},s,{className:(0,l.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":i===a})}),t??a)})))}function v(e){let{lazy:a,children:t,selectedValue:n}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function k(e){const a=y(e);return r.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},r.createElement(h,(0,n.A)({},e,a)),r.createElement(v,(0,n.A)({},e,a)))}function E(e){const a=(0,f.A)();return r.createElement(k,(0,n.A)({key:String(a)},e))}},50728:(e,a,t)=>{t.d(a,{A:()=>r});var n=t(96540);function r(e){return n.createElement("div",null,e.python_package_name&&e.python_package_version&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},e.python_package_name),n.createElement("span",{className:"right"},e.python_package_version))),e.scala_package_name&&e.scala_package_version&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},e.scala_package_name),n.createElement("span",{className:"right"},e.scala_package_version))),e.python_lib&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},"ProphecyLibsPython"),n.createElement("span",{className:"right"},e.python_lib))),e.scala_lib&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},"ProphecyLibsScala"),n.createElement("span",{className:"right"},e.scala_lib))),e.uc_single&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Databricks UC Single Cluster"),n.createElement("span",{className:"right"},e.uc_single))),e.uc_shared&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/ucshared"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Databricks UC Shared"),n.createElement("span",{className:"right"},e.uc_shared))),e.livy&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/livy"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Livy"),n.createElement("span",{className:"right"},e.livy))),n.createElement("br",null),n.createElement("br",null))}},73330:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>c,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var n=t(58168),r=(t(96540),t(15680)),l=t(50728),s=t(11470),i=t(19365);const o={title:"SetOperation",id:"set-operation",description:"Union, Intersect and Difference",tags:["gems","set","union","intersect","difference"]},c=void 0,p={unversionedId:"Spark/gems/transform/set-operation",id:"Spark/gems/transform/set-operation",title:"SetOperation",description:"Union, Intersect and Difference",source:"@site/docs/Spark/gems/transform/set-operation.md",sourceDirName:"Spark/gems/transform",slug:"/Spark/gems/transform/set-operation",permalink:"/Spark/gems/transform/set-operation",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"set",permalink:"/tags/set"},{label:"union",permalink:"/tags/union"},{label:"intersect",permalink:"/tags/intersect"},{label:"difference",permalink:"/tags/difference"}],version:"current",frontMatter:{title:"SetOperation",id:"set-operation",description:"Union, Intersect and Difference",tags:["gems","set","union","intersect","difference"]},sidebar:"mySidebar",previous:{title:"SchemaTransform",permalink:"/Spark/gems/transform/schema-transform"},next:{title:"Unpivot",permalink:"/Spark/gems/transform/unpivot"}},u={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Operation Type: <code>Union</code>",id:"operation-type-union",level:3},{value:"Operation Type: <code>Intersect All</code>",id:"operation-type-intersect-all",level:3},{value:"Operation Type: <code>Except All</code>",id:"operation-type-except-all",level:3}],d={toc:m},g="wrapper";function y(e){let{components:a,...o}=e;return(0,r.yg)(g,(0,n.A)({},d,o,{components:a,mdxType:"MDXLayout"}),(0,r.yg)(l.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+",mdxType:"Requirements"}),(0,r.yg)("p",null,"Use the SetOperation gem to perform addition or subtraction of rows from DataFrames with identical schemas and different data."),(0,r.yg)("h2",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame 1"),(0,r.yg)("td",{parentName:"tr",align:"left"},"First input DataFrame")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame 2"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Second input DataFrame")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame N"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Nth input DataFrame")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Operation type"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("ul",{style:{margin:0,padding:"0 1rem"}},(0,r.yg)("li",null," Union: Returns a DataFrame containing rows in any one of the input DataFrames, while preserving duplicates."),(0,r.yg)("li",null,"Intersect All: Returns a DataFrame containing rows in all of the input DataFrames, while preserving duplicates."),(0,r.yg)("li",null,"Except All: Returns a DataFrames containing rows in the first DataFrame, but not in the other DataFrames, while preserving duplicates.")))))),(0,r.yg)("p",null,"To add more input DataFrames, you can click the ",(0,r.yg)("inlineCode",{parentName:"p"},"+")," icon on the left sidebar."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Set Operation - Add input dataframe",src:t(45740).A,width:"556",height:"136"})),(0,r.yg)("h2",{id:"examples"},"Examples"),(0,r.yg)("h3",{id:"operation-type-union"},"Operation Type: ",(0,r.yg)("inlineCode",{parentName:"h3"},"Union")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of Set Operation - Union",src:t(43483).A,width:"1798",height:"904"})),(0,r.yg)(s.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"def union(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0.unionAll(in1)\n"))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"object union {\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0.unionAll(in1)\n}\n")))),(0,r.yg)("h3",{id:"operation-type-intersect-all"},"Operation Type: ",(0,r.yg)("inlineCode",{parentName:"h3"},"Intersect All")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of Set Operation - Intersect All",src:t(62272).A,width:"1822",height:"868"})),(0,r.yg)(s.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"def intersectAll(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0.intersectAll(in1)\n"))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"object intersectAll {\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0.intersectAll(in1)\n}\n")))),(0,r.yg)("h3",{id:"operation-type-except-all"},"Operation Type: ",(0,r.yg)("inlineCode",{parentName:"h3"},"Except All")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of Set Operation - Except All",src:t(86473).A,width:"1812",height:"783"})),(0,r.yg)(s.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"def exceptAll(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0.exceptAll(in1)\n"))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"object exceptAll {\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0.exceptAll(in1)\n}\n")))))}y.isMDXComponent=!0},45740:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/set_add_inputs-bdf7b6691fc473ea1eee60161a5b9786.png"},43483:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/set_eg_1-46701e21c8cebc491888db3d556e8345.png"},62272:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/set_eg_2-fe430fbd13a44d729c0c0ef00e7ca2d9.png"},86473:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/set_eg_3-5ad43a57037f0e1ada3b964fcf2934a7.png"}}]);