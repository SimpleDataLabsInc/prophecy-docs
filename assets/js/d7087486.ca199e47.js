"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[18755],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var a=s(96540);const t={},r=a.createContext(t);function l(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(r.Provider,{value:n},e.children)}},37244:(e,n,s)=>{s.d(n,{A:()=>k});var a=s(96540),t=s(18215),r=s(44319),l=s(56347),o=s(94280),i=s(73024),c=s(58417),u=s(44031);function d(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:s}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return d(e).map(({props:{value:e,label:n,attributes:s,default:a}})=>({value:e,label:n,attributes:s,default:a}))}(s);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const s=(0,l.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,i.aZ)(t),(0,a.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})},[t,s])]}function b(e){const{defaultValue:n,queryString:s=!1,groupId:t}=e,r=p(e),[l,i]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r})),[c,d]=m({queryString:s,groupId:t}),[b,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,t]=(0,u.Dv)(n);return[s,(0,a.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),g=(()=>{const e=c??b;return h({value:e,tabValues:r})?e:null})();(0,o.A)(()=>{g&&i(g)},[g]);return{selectedValue:l,selectValue:(0,a.useCallback)(e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),x(e)},[d,x,r]),tabValues:r}}var x=s(46916);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(74848);function y({className:e,block:n,selectedValue:s,selectValue:a,tabValues:l}){const o=[],{blockElementScrollPositionUntilNextRender:i}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),r=l[t].value;r!==s&&(i(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:a})=>(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:c,...a,className:(0,t.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:s}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===s);return e?(0,a.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function v(e){const n=b(e);return(0,f.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(j,{...n,...e})]})}function k(e){const n=(0,x.A)();return(0,f.jsx)(v,{...e,children:d(e.children)},String(n))}},56778:(e,n,s)=>{s.d(n,{A:()=>l});s(96540);var a=s(18215);const t={tabItem:"tabItem_Ymn6"};var r=s(74848);function l({children:e,hidden:n,className:s}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,s),hidden:n,children:e})}},85877:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>c,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"Spark/gems/transform/bulk-column-expressions","title":"BulkColumnExpressions gem","description":"Change the data type of multiple columns at once","source":"@site/docs/Spark/gems/transform/bulk-column-expressions.md","sourceDirName":"Spark/gems/transform","slug":"/engineers/bulk-column-expressions","permalink":"/engineers/bulk-column-expressions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"type","permalink":"/tags/type"},{"inline":true,"label":"columns","permalink":"/tags/columns"}],"version":"current","frontMatter":{"title":"BulkColumnExpressions gem","sidebar_label":"BulkColumnExpressions","id":"bulk-column-expressions","slug":"/engineers/bulk-column-expressions","description":"Change the data type of multiple columns at once","tags":["gems","type","columns"]},"sidebar":"platformSidebar","previous":{"title":"Aggregate","permalink":"/engineers/aggregate"},"next":{"title":"BulkColumnRename","permalink":"/engineers/bulk-column-rename"}}');var t=s(74848),r=s(28453),l=s(97071),o=s(37244),i=s(56778);const c={title:"BulkColumnExpressions gem",sidebar_label:"BulkColumnExpressions",id:"bulk-column-expressions",slug:"/engineers/bulk-column-expressions",description:"Change the data type of multiple columns at once",tags:["gems","type","columns"]},u=void 0,d={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Example code",id:"example-code",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.A,{python_package_name:"",python_package_version:"",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.1.9+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,t.jsx)(n.p,{children:"The BulkColumnExpressions gem primarily lets you cast or change the data type of multiple columns at once. It provides additional functionality, including:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adding a prefix or suffix to selected columns."}),"\n",(0,t.jsx)(n.li,{children:"Applying a custom expression to selected columns."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Data Type of the columns to do operations on"}),(0,t.jsx)(n.td,{children:"The data type of columns to select."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Selected Columns"}),(0,t.jsx)(n.td,{children:"The columns on which to apply transformations."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Change output column name"}),(0,t.jsx)(n.td,{children:"An option to add a prefix or suffix to the selected column names."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Change output column type"}),(0,t.jsx)(n.td,{children:"The data type that the columns will be transformed into."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Output Expression"}),(0,t.jsxs)(n.td,{children:["A Spark SQL expression that can be applied to the selected columns. This field is required. If you only want to select the column, use ",(0,t.jsx)(n.code,{children:"column_value"})," as the expression."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"Assume you have some columns in a table that represent zero-based indices and are stored as long data types. You want them to represent one-based indices and be stored as integers to optimize memory use."}),"\n",(0,t.jsx)(n.p,{children:"Using the BulkColumnExpressions gem, you can:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Filter your columns by long data types."}),"\n",(0,t.jsx)(n.li,{children:"Select the columns you wish to transform."}),"\n",(0,t.jsx)(n.li,{children:"Cast the output column(s) to be integers."}),"\n",(0,t.jsxs)(n.li,{children:["Include ",(0,t.jsx)(n.code,{children:"column_value + 1"})," in the expression field to shift the indices."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-code",children:"Example code"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["To see the compiled code of your project, ",(0,t.jsx)(n.a,{href:"/engineers/pipelines#project-editor",children:"switch to the Code view"})," in the project header."]})}),"\n","\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'def bulk_column_casting(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.select(\n        *(\n          [expr("`customer_id`").alias("str_customer_id").cast(StringType())]\n          + [col("`" + colName + "`") for colName in sorted(set(in0.columns) - {"customer_id"})]\n          + []\n        )\n    )\n'})})}),(0,t.jsx)(i.A,{value:"scala",label:"Scala",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'object bulk_column_expressions {\n  def apply(context: Context, in: DataFrame): DataFrame = {\n    var allExpressions = List(\n      expr(\n        "column_value"\n          .replace("column_value", "`status`")\n          .replace("column_name",  "\'status\'")\n      ).as("status").cast(StringType)\n    ) ++ (in.columns.toSet -- List("status").toSet).map(columnName =>\n      col("`" + columnName + "`")\n    )\n    in.select(allExpressions: _*)\n  }\n}\n'})})})]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},97071:(e,n,s)=>{s.d(n,{A:()=>t});s(96540);var a=s(74848);function t(e){return(0,a.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,a.jsxs)("span",{className:"badge badge-dependency",children:[e.python_package_name," ",e.python_package_version]})}),e.scala_package_name&&e.scala_package_version&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub",children:(0,a.jsxs)("span",{className:"badge badge-dependency",children:[e.scala_package_name," ",e.scala_package_version]})}),e.python_lib&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,a.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsPython ",e.python_lib]})}),e.scala_lib&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,a.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsScala ",e.scala_lib]})}),e.uc_single&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,a.jsxs)("span",{className:"badge badge-spark",children:["UC Dedicated Cluster ",e.uc_single]})}),e.uc_shared&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,a.jsxs)("span",{className:"badge badge-spark",children:["UC Standard Cluster ",e.uc_shared]})}),e.livy&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,a.jsxs)("span",{className:"badge badge-spark",children:["Livy ",e.livy]})}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{})]})}}}]);