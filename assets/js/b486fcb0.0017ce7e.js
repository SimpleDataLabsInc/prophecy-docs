"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[54228],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=o,d=u["".concat(c,".").concat(f)]||u[f]||g[f]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},77423:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(58168),o=(n(96540),n(15680));const i={title:"Use a notebook to collect Spark cluster configuration",id:"config-sparknotebook",sidebar_position:3,description:"How to access the Spark Cluster configuration using a notebook",sidebar_label:"Use a notebook to collect Spark cluster configuration",tags:["help","connectivity"]},a=void 0,s={unversionedId:"getting-started/getting-help/logs/config-sparknotebook",id:"getting-started/getting-help/logs/config-sparknotebook",title:"Use a notebook to collect Spark cluster configuration",description:"How to access the Spark Cluster configuration using a notebook",source:"@site/docs/getting-started/getting-help/logs/cluster-config-notebook.md",sourceDirName:"getting-started/getting-help/logs",slug:"/getting-started/getting-help/logs/config-sparknotebook",permalink:"/getting-started/getting-help/logs/config-sparknotebook",draft:!1,tags:[{label:"help",permalink:"/tags/help"},{label:"connectivity",permalink:"/tags/connectivity"}],version:"current",sidebarPosition:3,frontMatter:{title:"Use a notebook to collect Spark cluster configuration",id:"config-sparknotebook",sidebar_position:3,description:"How to access the Spark Cluster configuration using a notebook",sidebar_label:"Use a notebook to collect Spark cluster configuration",tags:["help","connectivity"]},sidebar:"defaultSidebar",previous:{title:"Use the SparkUI to collect Spark cluster configuration",permalink:"/getting-started/getting-help/logs/config-sparkui"},next:{title:"Prophecy Concepts",permalink:"/concepts/"}},c={},l=[],p={toc:l},u="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Create a notebook as follows and send the output via the Prophecy ",(0,o.yg)("a",{parentName:"p",href:"https://prophecy.zendesk.com/"},"Support Portal"),"."),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Replace the workspace URL, personal access token, clusterID, and API token as appropriate.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},'# Databricks notebook source\nimport requests\n\n#Get Databricks runtime of cluster\n# Get the notebook context using dbutils\ncontext = dbutils.notebook.entry_point.getDbutils().notebook().getContext()\n\n# Retrieve the Databricks runtime version from the context tags\nruntime_version = context.tags().get("sparkVersion").get()\n\n# Print the runtime version\nprint(f"Databricks Runtime Version: {runtime_version}")\n\n# Get Spark version\nspark_version = spark.version\nprint(f"Spark Version: {spark_version}")\n\n\n#Get the installed libraries and access mode details of the cluster\n# Replace with your Databricks workspace URL and token\nworkspace_url = "replace_with_workspace_url"\ntoken = "replace_with_token"\ncluster_id = "replace_with_cluster_id"\n\n\n# API endpoint to get info of installed libraries\nurl = f"{workspace_url}/api/2.0/libraries/cluster-status"\n\n# Make the API request\nresponse = requests.get(url, headers={"Authorization": f"Bearer {token}"}, params={"cluster_id": cluster_id})\n\nlibrary_info=response.json()\nprint("Libraries:")\nfor i in library_info[\'library_statuses\']:\n    print(i)\n\n# API endpoint to get access mode details\nurl = f"{workspace_url}/api/2.1/clusters/get"\n\n# Make the API request\nresponse = requests.get(url, headers={"Authorization": f"Bearer {token}"}, params={"cluster_id": cluster_id})\n\ncluster_access_info=response.json()\nprint(f"Cluster Access Mode: {cluster_access_info[\'data_security_mode\']}")\n')))}g.isMDXComponent=!0}}]);