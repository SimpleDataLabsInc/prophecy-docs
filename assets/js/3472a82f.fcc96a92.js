"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[4006],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),s=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),h=a,u=m["".concat(o,".").concat(h)]||m[h]||d[h]||r;return n?i.createElement(u,l(l({ref:t},c),{},{components:n})):i.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=h;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<r;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},42567:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var i=n(83117),a=(n(67294),n(3905));const r={title:"Pipelines",id:"pipeline",description:"The recipes of the Prophecy world",sidebar_position:1,tags:["concepts","pipelines"]},l=void 0,p={unversionedId:"concepts/pipeline",id:"concepts/pipeline",title:"Pipelines",description:"The recipes of the Prophecy world",source:"@site/docs/concepts/pipelines.md",sourceDirName:"concepts",slug:"/concepts/pipeline",permalink:"/concepts/pipeline",draft:!1,tags:[{label:"concepts",permalink:"/tags/concepts"},{label:"pipelines",permalink:"/tags/pipelines"}],version:"current",sidebarPosition:1,frontMatter:{title:"Pipelines",id:"pipeline",description:"The recipes of the Prophecy world",sidebar_position:1,tags:["concepts","pipelines"]},sidebar:"defaultSidebar",previous:{title:"How to create a Fabric",permalink:"/concepts/fabrics/create-a-fabric"},next:{title:"Datasets",permalink:"/concepts/dataset"}},o={},s=[{value:"Pipeline list",id:"pipeline-list",level:2},{value:"Creating a Pipeline",id:"creating-a-pipeline",level:2},{value:"Editing a Pipeline",id:"editing-a-pipeline",level:2}],c={toc:s},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"Pipeline")," (formerly known as a ",(0,a.kt)("em",{parentName:"p"},"Workflow"),") is a type of entity within Prophecy that is used to represent the flow of data. They are similar to a map you might use on a road trip: You have a ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Start"))," and ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Finish"))," (Datasets) and the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"stops"))," to make along the way (",(0,a.kt)("a",{parentName:"p",href:"/concepts/gems"},"Gems"),")."),(0,a.kt)("h2",{id:"pipeline-list"},"Pipeline list"),(0,a.kt)("p",null,"In the Metadata view of the UI you'll find the ",(0,a.kt)("a",{parentName:"p",href:"https://app.prophecy.io/metadata/entity/user/pipelines"},"Pipeline list")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Pipeline list",src:n(97765).Z,width:"2367",height:"426"})),(0,a.kt)("p",null,"Follow the instructions below to create a new one"),(0,a.kt)("h2",{id:"creating-a-pipeline"},"Creating a Pipeline"),(0,a.kt)("p",null,"Pipelines can be created using the ",(0,a.kt)("a",{parentName:"p",href:"https://app.prophecy.io/metadata/create"},"Create Entity")," view."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Create entity",src:n(67284).Z,width:"1302",height:"481"})),(0,a.kt)("p",null,"Clicking the ",(0,a.kt)("inlineCode",{parentName:"p"},"Pipeline")," button will pop up the ",(0,a.kt)("strong",{parentName:"p"},"Pipeline Creation")," UI."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Pipeline Creation",src:n(4369).Z,width:"1263",height:"1334"})),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Project"),(0,a.kt)("td",{parentName:"tr",align:null},"Which project to create the ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline")," in. This controls who has access to the ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline"),", groups ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline"),"s together for lineage, and allows you to use Datasets already published within that project.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Branch"),(0,a.kt)("td",{parentName:"tr",align:null},"Which Git branch to use when developing this ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Name"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline")," name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Mode"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether the ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline")," will be Batch mode or Streaming")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Description"),(0,a.kt)("td",{parentName:"tr",align:null},"Description for the ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline"),". Put whatever you want here that will help others (or yourself) understand the purpose of the ",(0,a.kt)("inlineCode",{parentName:"td"},"Pipeline"),".")))),(0,a.kt)("h2",{id:"editing-a-pipeline"},"Editing a Pipeline"),(0,a.kt)("p",null,"When editing a ",(0,a.kt)("inlineCode",{parentName:"p"},"Pipeline"),", you'll be using the editor shown below."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Editing a Pipeline",src:n(35440).Z,width:"2510",height:"1334"})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Pipeline Config")," : Buttons that bring up views related to the configuration of your ",(0,a.kt)("inlineCode",{parentName:"li"},"Pipeline"),":",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/low-code-spark/configuration"},"Config")),(0,a.kt)("li",{parentName:"ol"},"Scheduling"),(0,a.kt)("li",{parentName:"ol"},"Unit Tests"),(0,a.kt)("li",{parentName:"ol"},"UDFs/UDAFs"),(0,a.kt)("li",{parentName:"ol"},"Dependencies"),(0,a.kt)("li",{parentName:"ol"},"Spark Version"),(0,a.kt)("li",{parentName:"ol"},"Visual Language"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"View switch")," : Switch between the Visual development and the Generated Code. ",(0,a.kt)("strong",{parentName:"li"},"Note:")," The generated Code will only update if there are no errors detected in the Visual view."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Fabric Switch")," : Select the ",(0,a.kt)("a",{parentName:"li",href:"/concepts/fabrics/"},"Fabric")," to use during development, start a new cluster or connect to an existing one"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Gem drawer")," : Click to select a category, then click on the Gem you wish to insert into the editor. See ",(0,a.kt)("a",{parentName:"li",href:"/concepts/gems"},"here")," for more information on the Gems"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Workspace")," : Everything in the middle of the view is the ",(0,a.kt)("em",{parentName:"li"},"Workspace"),". This is where you'll create and manipulate the Gems that make up this ",(0,a.kt)("inlineCode",{parentName:"li"},"Pipeline"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Git Status")," : In Prophecy almost everything is stored in Git, and this is where you can interact with the version control for your Pipeline. See ",(0,a.kt)("a",{parentName:"li",href:"/concepts/project"},"Projects & Git")," for more information"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"Run")," : If you just want to run your ",(0,a.kt)("inlineCode",{parentName:"li"},"Pipeline")," from start to finish, click this button")))}d.isMDXComponent=!0},67284:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/create-fc6ef73ccb1fd2da71b6e8fba3ba4436.png"},4369:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/create_pipeline-bee12e89ddcefd01b5510912abe2ec31.png"},35440:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/edit_pipeline-00a21663cd90bb2bed6cd7cfd3aeb2c3.png"},97765:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/metadata_pipeline_list-48d65bad97870ef0c147ee7350ac4d0a.png"}}]);