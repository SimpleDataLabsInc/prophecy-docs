"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[62829],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(96540);const i={},d=s.createContext(i);function r(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(d.Provider,{value:n},e.children)}},73095:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"analysts/development/gems/spatial/create-point","title":"CreatePoint gem","description":"Create geographic points with longitude and latitude coordinates","source":"@site/docs/analysts/development/gems/spatial/create-point.md","sourceDirName":"analysts/development/gems/spatial","slug":"/analysts/create-point","permalink":"/analysts/create-point","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"spatial","permalink":"/tags/spatial"}],"version":"current","frontMatter":{"title":"CreatePoint gem","sidebar_label":"CreatePoint","id":"create-point","slug":"/analysts/create-point","description":"Create geographic points with longitude and latitude coordinates","tags":["gems","analyst","spatial"]},"sidebar":"mySidebar","previous":{"title":"Buffer","permalink":"/analysts/buffer"},"next":{"title":"Distance","permalink":"/analysts/distance"}}');var i=t(74848),d=t(28453),r=t(77956);const l={title:"CreatePoint gem",sidebar_label:"CreatePoint",id:"create-point",slug:"/analysts/create-point",description:"Create geographic points with longitude and latitude coordinates",tags:["gems","analyst","spatial"]},c=void 0,a={},o=[{value:"Input and Output",id:"input-and-output",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Result",id:"result",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{execution_engine:"SQL Warehouse",sql_package_name:"ProphecyDatabricksSqlSpatial",sql_package_version:"0.0.1+"}),"\n",(0,i.jsx)(n.p,{children:"Use the CreatePoint gem to convert longitude and latitude coordinates into geographic points."}),"\n",(0,i.jsx)(n.h2,{id:"input-and-output",children:"Input and Output"}),"\n",(0,i.jsx)(n.p,{children:"The CreatePoint gem accepts the following input and output."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Port"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"in0"})}),(0,i.jsx)(n.td,{children:"Source dataset containing pairs of columns with longitude and latitude coordinates."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"out"})}),(0,i.jsxs)(n.td,{children:["Output dataset containing one or more new columns with points in Well-known Text (",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry",children:"WKT"}),") geometric format."]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.p,{children:"The CreatePoint gem accepts longitude and latitude columns as parameters."}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.strong,{children:"Create Spatial Points"})," section, you need to ",(0,i.jsx)(n.strong,{children:"Click to Add a Point"}),". For each point you add, fill in the following information."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Longitude Column Name"}),(0,i.jsx)(n.td,{children:"Input column that contains longitude values."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Latitude Column Name"}),(0,i.jsx)(n.td,{children:"Input column that contains latitude values."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Target Column Name"}),(0,i.jsx)(n.td,{children:"Column in the gem output that will contain resulting geo points."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Assume you have the following airline route table."}),"\n",(0,i.jsx)("div",{class:"table-example",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"start_city"}),(0,i.jsx)(n.th,{children:"start_lat"}),(0,i.jsx)(n.th,{children:"start_long"}),(0,i.jsx)(n.th,{children:"destination_city"}),(0,i.jsx)(n.th,{children:"destination_lat"}),(0,i.jsx)(n.th,{children:"destination_long"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"New York"}),(0,i.jsx)(n.td,{children:"40.7128"}),(0,i.jsx)(n.td,{children:"-74.0060"}),(0,i.jsx)(n.td,{children:"Los Angeles"}),(0,i.jsx)(n.td,{children:"34.0522"}),(0,i.jsx)(n.td,{children:"-118.2437"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"London"}),(0,i.jsx)(n.td,{children:"51.5074"}),(0,i.jsx)(n.td,{children:"-0.1278"}),(0,i.jsx)(n.td,{children:"Paris"}),(0,i.jsx)(n.td,{children:"48.8566"}),(0,i.jsx)(n.td,{children:"2.3522"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Tokyo"}),(0,i.jsx)(n.td,{children:"35.6895"}),(0,i.jsx)(n.td,{children:"139.6917"}),(0,i.jsx)(n.td,{children:"Sydney"}),(0,i.jsx)(n.td,{children:"-33.8688"}),(0,i.jsx)(n.td,{children:"151.2093"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Toronto"}),(0,i.jsx)(n.td,{children:"43.6511"}),(0,i.jsx)(n.td,{children:"-79.3470"}),(0,i.jsx)(n.td,{children:"Chicago"}),(0,i.jsx)(n.td,{children:"41.8781"}),(0,i.jsx)(n.td,{children:"-87.6298"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Dubai"}),(0,i.jsx)(n.td,{children:"25.2760"}),(0,i.jsx)(n.td,{children:"55.2962"}),(0,i.jsx)(n.td,{children:"Mumbai"}),(0,i.jsx)(n.td,{children:"19.0760"}),(0,i.jsx)(n.td,{children:"72.8777"})]})]})]})}),"\n",(0,i.jsx)(n.p,{children:"To convert the start and destination coordinates into geographic points:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create the first column pairing:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Add a Point"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.strong,{children:"Longitude Column Name"}),", select the ",(0,i.jsx)(n.code,{children:"start_long"})," column."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.strong,{children:"Latitude Column Name"}),", select the ",(0,i.jsx)(n.code,{children:"start_lat"})," column."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For the ",(0,i.jsx)(n.strong,{children:"Target Column Name"}),", type ",(0,i.jsx)(n.code,{children:"source_point"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create another column pairing:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Add a Point"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.strong,{children:"Longitude Column Name"}),", select the ",(0,i.jsx)(n.code,{children:"destination_long"})," column."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.strong,{children:"Latitude Column Name"}),", select the ",(0,i.jsx)(n.code,{children:"destination_lat"})," column."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For the ",(0,i.jsx)(n.strong,{children:"Target Column Name"}),", type ",(0,i.jsx)(n.code,{children:"dest_point"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"result",children:"Result"}),"\n",(0,i.jsxs)(n.p,{children:["The CreatePoint gem will produce the following output with two new columns: ",(0,i.jsx)(n.code,{children:"source_point"})," and ",(0,i.jsx)(n.code,{children:"dest_point"}),"."]}),"\n",(0,i.jsx)("div",{class:"table-example",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"start_city"}),(0,i.jsx)(n.th,{children:"start_lat"}),(0,i.jsx)(n.th,{children:"start_long"}),(0,i.jsx)(n.th,{children:"destination_city"}),(0,i.jsx)(n.th,{children:"destination_lat"}),(0,i.jsx)(n.th,{children:"destination_long"}),(0,i.jsx)(n.th,{children:"source_point"}),(0,i.jsx)(n.th,{children:"dest_point"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"New York"}),(0,i.jsx)(n.td,{children:"40.7128"}),(0,i.jsx)(n.td,{children:"-74.0060"}),(0,i.jsx)(n.td,{children:"Los Angeles"}),(0,i.jsx)(n.td,{children:"34.0522"}),(0,i.jsx)(n.td,{children:"-118.2437"}),(0,i.jsx)(n.td,{children:"POINT (-74.0060 40.7128)"}),(0,i.jsx)(n.td,{children:"POINT (-118.2437 34.0522)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"London"}),(0,i.jsx)(n.td,{children:"51.5074"}),(0,i.jsx)(n.td,{children:"-0.1278"}),(0,i.jsx)(n.td,{children:"Paris"}),(0,i.jsx)(n.td,{children:"48.8566"}),(0,i.jsx)(n.td,{children:"2.3522"}),(0,i.jsx)(n.td,{children:"POINT (-0.1278 51.5074)"}),(0,i.jsx)(n.td,{children:"POINT (2.3522 48.8566)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Tokyo"}),(0,i.jsx)(n.td,{children:"35.6895"}),(0,i.jsx)(n.td,{children:"139.6917"}),(0,i.jsx)(n.td,{children:"Sydney"}),(0,i.jsx)(n.td,{children:"-33.8688"}),(0,i.jsx)(n.td,{children:"151.2093"}),(0,i.jsx)(n.td,{children:"POINT (139.6917 35.6895)"}),(0,i.jsx)(n.td,{children:"POINT (151.2093 -33.8688)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Toronto"}),(0,i.jsx)(n.td,{children:"43.6511"}),(0,i.jsx)(n.td,{children:"-79.3470"}),(0,i.jsx)(n.td,{children:"Chicago"}),(0,i.jsx)(n.td,{children:"41.8781"}),(0,i.jsx)(n.td,{children:"-87.6298"}),(0,i.jsx)(n.td,{children:"POINT (-79.3470 43.6511)"}),(0,i.jsx)(n.td,{children:"POINT (-87.6298 41.8781)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Dubai"}),(0,i.jsx)(n.td,{children:"25.2760"}),(0,i.jsx)(n.td,{children:"55.2962"}),(0,i.jsx)(n.td,{children:"Mumbai"}),(0,i.jsx)(n.td,{children:"19.0760"}),(0,i.jsx)(n.td,{children:"72.8777"}),(0,i.jsx)(n.td,{children:"POINT (55.2962 25.2760)"}),(0,i.jsx)(n.td,{children:"POINT (72.8777 19.0760)"})]})]})]})})]})}function x(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},77956:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var s=t(74848);function i(e){return(0,s.jsxs)("div",{children:[e.execution_engine&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,s.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,s.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})}}}]);