"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[2602],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),b=n,m=d["".concat(l,".").concat(b)]||d[b]||u[b]||o;return a?r.createElement(m,s(s({ref:t},c),{},{components:a})):r.createElement(m,s({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},53703:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=a(87462),n=(a(67294),a(3905));const o={sidebar_position:4,title:"Shareable Datasets",id:"shareable-datasets",description:"Shareable Datasets within the project and to other projects",tags:[]},s=void 0,i={unversionedId:"low-code-spark/pubsub/shareable-datasets",id:"low-code-spark/pubsub/shareable-datasets",title:"Shareable Datasets",description:"Shareable Datasets within the project and to other projects",source:"@site/docs/low-code-spark/pubsub/ShareableDatasets.md",sourceDirName:"low-code-spark/pubsub",slug:"/low-code-spark/pubsub/shareable-datasets",permalink:"/low-code-spark/pubsub/shareable-datasets",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Shareable Datasets",id:"shareable-datasets",description:"Shareable Datasets within the project and to other projects",tags:[]},sidebar:"defaultSidebar",previous:{title:"Shareable Pipelines",permalink:"/low-code-spark/pubsub/shareable-pipelines"},next:{title:"Spark Structured Streaming",permalink:"/low-code-spark/spark-streaming/"}},l={},p=[{value:"Across Pipelines",id:"across-pipelines",level:2},{value:"Across Projects",id:"across-projects",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Users can share a ",(0,n.kt)("a",{parentName:"p",href:"/concepts/dataset"},"Dataset")," across their Pipelines and Projects."),(0,n.kt)("h2",{id:"across-pipelines"},"Across Pipelines"),(0,n.kt)("p",null,"Once a User adds a new Dataset as a Source or Target in their Pipeline, that Dataset is immediately available to be used in all Pipelines of that project. A User can use that Dataset as a Source or Target in other pipelines.\nOnce a Dataset is modified in one Pipeline, it gets modified in all the Pipelines using it (in that Project) automatically."),(0,n.kt)("p",null,"For example:"),(0,n.kt)("div",{style:{position:"relative","padding-bottom":"56.25%",height:0}},(0,n.kt)("iframe",{src:"https://www.loom.com/embed/2359ead915f5459381bcdf345ed76993",frameborder:"0",webkitallowfullscreen:!0,mozallowfullscreen:!0,allowfullscreen:!0,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}})),(0,n.kt)("h2",{id:"across-projects"},"Across Projects"),(0,n.kt)("p",null,"Once a Project (let's call it ",(0,n.kt)("em",{parentName:"p"},"BaseProject"),") is Released and added as a ",(0,n.kt)("a",{parentName:"p",href:"/low-code-spark/pubsub#project-dependency"},"Dependency")," to another Project (let's call it ",(0,n.kt)("em",{parentName:"p"},"AppProject"),"), all Datasets from ",(0,n.kt)("em",{parentName:"p"},"BaseProject")," are available in all Pipelines of ",(0,n.kt)("em",{parentName:"p"},"AppProject"),"."),(0,n.kt)("p",null,"Any Modification to existing Datasets or new Datasets will be updated in ",(0,n.kt)("em",{parentName:"p"},"AppProject"),", only after a new Release in ",(0,n.kt)("em",{parentName:"p"},"BaseProject"),", and updating the same in ",(0,n.kt)("em",{parentName:"p"},"AppProject"),"."),(0,n.kt)("p",null,"Please see the below video for an example:"),(0,n.kt)("div",{style:{position:"relative","padding-bottom":"56.25%",height:0}},(0,n.kt)("iframe",{src:"https://www.loom.com/embed/0b631a754ea247d0ae7e35310aa0515c",frameborder:"0",webkitallowfullscreen:!0,mozallowfullscreen:!0,allowfullscreen:!0,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}})))}u.isMDXComponent=!0}}]);