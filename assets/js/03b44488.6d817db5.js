"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[92950],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var d=s(96540);const c={},t=d.createContext(c);function r(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),d.createElement(t.Provider,{value:n},e.children)}},51453:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>x,frontMatter:()=>o,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"analysts/development/gems/transform/encode-decode","title":"DataEncoderDecoder","description":"Encode and decode data using different techniques","source":"@site/docs/analysts/development/gems/transform/encoder-decoder.md","sourceDirName":"analysts/development/gems/transform","slug":"/analysts/encode-decode","permalink":"/analysts/encode-decode","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"transform","permalink":"/tags/transform"}],"version":"current","frontMatter":{"title":"DataEncoderDecoder","id":"encode-decode","slug":"/analysts/encode-decode","description":"Encode and decode data using different techniques","tags":["gems","analyst","transform"]},"sidebar":"mySidebar","previous":{"title":"FuzzyMatch","permalink":"/analysts/fuzzy-match"},"next":{"title":"Pivot","permalink":"/analysts/pivot"}}');var c=s(74848),t=s(28453),r=s(77956);const o={title:"DataEncoderDecoder",id:"encode-decode",slug:"/analysts/encode-decode",description:"Encode and decode data using different techniques",tags:["gems","analyst","transform"]},i=void 0,l={},a=[{value:"Input and Output",id:"input-and-output",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Encode/Decode methods",id:"encodedecode-methods",level:3},{value:"<code>base64</code>",id:"base64",level:4},{value:"<code>unbase64</code>",id:"unbase64",level:4},{value:"<code>hex</code>",id:"hex",level:4},{value:"<code>unhex</code>",id:"unhex",level:4},{value:"<code>encode</code>",id:"encode",level:4},{value:"<code>decode</code>",id:"decode",level:4},{value:"<code>aes_encrypt</code>",id:"aes_encrypt",level:4},{value:"Transformed column options",id:"transformed-column-options",level:3},{value:"Example",id:"example",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.A,{execution_engine:"SQL Warehouse",sql_package_name:"ProphecyDatabricksSqlBasics",sql_package_version:"0.0.12+"}),"\n",(0,c.jsx)(n.p,{children:"The DataEncoderDecoder gem allows you to encode or decode data in selected columns using a variety of standard techniques, including Base64, Hex, and AES encryption. You can transform values in-place or create new output columns with a prefix or suffix."}),"\n",(0,c.jsx)(n.h2,{id:"input-and-output",children:"Input and Output"}),"\n",(0,c.jsx)(n.p,{children:"The DataEncoderDecoder gem accepts the following input and output."}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Port"}),(0,c.jsx)(n.th,{children:"Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.strong,{children:"in0"})}),(0,c.jsx)(n.td,{children:"Input dataset containing one or more string or binary columns to encode or decode."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.strong,{children:"out"})}),(0,c.jsxs)(n.td,{children:["Output dataset with transformed values. Output columns depend on the ",(0,c.jsx)(n.a,{href:"#transformed-column-options",children:"transformed column option"}),"."]})]})]})]}),"\n",(0,c.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,c.jsx)(n.p,{children:"Configure the DataEncoderDecoder gem using the following parameters."}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Parameter"}),(0,c.jsx)(n.th,{children:"Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"Select columns to encode/decode"}),(0,c.jsx)(n.td,{children:"One or more columns to apply the transformation to."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"Select encode/decode option"}),(0,c.jsxs)(n.td,{children:["The encoding or decoding method to apply. See ",(0,c.jsx)(n.a,{href:"#encodedecode-methods",children:"Encode/Decode methods"}),"."]})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"Transformed column options"}),(0,c.jsxs)(n.td,{children:["Choose how the output should be written. See ",(0,c.jsx)(n.a,{href:"#transformed-column-options",children:"Transformed column options"}),"."]})]})]})]}),"\n",(0,c.jsx)(n.h3,{id:"encodedecode-methods",children:"Encode/Decode methods"}),"\n",(0,c.jsx)(n.p,{children:"Choose from the following methods:"}),"\n",(0,c.jsx)(n.h4,{id:"base64",children:(0,c.jsx)(n.code,{children:"base64"})}),"\n",(0,c.jsx)(n.p,{children:"Encodes the selected column(s) using Base64."}),"\n",(0,c.jsx)(n.h4,{id:"unbase64",children:(0,c.jsx)(n.code,{children:"unbase64"})}),"\n",(0,c.jsx)(n.p,{children:"Decodes Base64-encoded column values."}),"\n",(0,c.jsx)(n.h4,{id:"hex",children:(0,c.jsx)(n.code,{children:"hex"})}),"\n",(0,c.jsx)(n.p,{children:"Encodes the selected column(s) into hexadecimal format."}),"\n",(0,c.jsx)(n.h4,{id:"unhex",children:(0,c.jsx)(n.code,{children:"unhex"})}),"\n",(0,c.jsx)(n.p,{children:"Decodes hexadecimal-encoded values."}),"\n",(0,c.jsx)(n.h4,{id:"encode",children:(0,c.jsx)(n.code,{children:"encode"})}),"\n",(0,c.jsx)(n.p,{children:"Encodes the string column(s) using a specified character set."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Charset"}),": Character set to use, such as ",(0,c.jsx)(n.code,{children:"UTF-8"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.h4,{id:"decode",children:(0,c.jsx)(n.code,{children:"decode"})}),"\n",(0,c.jsx)(n.p,{children:"Decodes the string column(s) using a specified character set."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Charset"}),": Character set to use, such as ",(0,c.jsx)(n.code,{children:"UTF-8"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.h4,{id:"aes_encrypt",children:(0,c.jsx)(n.code,{children:"aes_encrypt"})}),"\n",(0,c.jsx)(n.p,{children:"Encrypts the selected column(s) using AES encryption."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Secret scope"}),": The name of the Databricks secret scope."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Secret key"}),": The key name within the scope that stores the encryption key."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Mode"}),": AES encryption mode to use.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"GCM"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"CBC"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"EBC"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"(Optional) AAD scope and key"}),": For GCM mode, you can specify Databricks scope and key for the AAD."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"(Optional) Initialization vector scope and key"}),": For CBC mode, specify a Databricks secret scope and key for the IV."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"transformed-column-options",children:"Transformed column options"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Substitute the new columns in place"}),": Replaces the original column(s) with the transformed values."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Add new columns with a prefix/suffix attached"}),": Adds a new column for each transformed input column, appending a prefix or suffix to the name."]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,c.jsx)(n.p,{children:"Assume you have the following dataset:"}),"\n",(0,c.jsx)("div",{class:"table-example",children:(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"ID"}),(0,c.jsx)(n.th,{children:"Message"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"1"}),(0,c.jsx)(n.td,{children:"Hello world!"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"2"}),(0,c.jsx)(n.td,{children:"Prophecy"})]})]})]})}),"\n",(0,c.jsxs)(n.p,{children:["Using the ",(0,c.jsx)(n.code,{children:"base64"})," method, adding new columns with the suffix ",(0,c.jsx)(n.code,{children:"_encoded"}),", the output would be:"]}),"\n",(0,c.jsx)("div",{class:"table-example",children:(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"ID"}),(0,c.jsx)(n.th,{children:"Message"}),(0,c.jsx)(n.th,{children:"Message_encoded"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"1"}),(0,c.jsx)(n.td,{children:"Hello world!"}),(0,c.jsx)(n.td,{children:"SGVsbG8gd29ybGQh"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"2"}),(0,c.jsx)(n.td,{children:"Prophecy"}),(0,c.jsx)(n.td,{children:"UHJvcGhlY3k="})]})]})]})})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},77956:(e,n,s)=>{s.d(n,{A:()=>c});s(96540);var d=s(74848);function c(e){return(0,d.jsxs)("div",{children:[e.execution_engine&&(0,d.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,d.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,d.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,d.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,d.jsx)("br",{}),(0,d.jsx)("br",{})]})}}}]);