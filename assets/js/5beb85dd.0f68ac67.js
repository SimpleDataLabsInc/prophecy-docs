"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[14334],{28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>l});var r=a(96540);const n={},i=r.createContext(n);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},49235:(e,t,a)=>{a.d(t,{A:()=>n});a(96540);var r=a(74848);function n(e){return(0,r.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:[e.python_package_name," ",e.python_package_version]})}),e.scala_package_name&&e.scala_package_version&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:[e.scala_package_name," ",e.scala_package_version]})}),e.python_lib&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsPython ",e.python_lib]})}),e.scala_lib&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsScala ",e.scala_lib]})}),e.uc_single&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["UC Dedicated Cluster ",e.uc_single]})}),e.uc_shared&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["UC Standard Cluster ",e.uc_shared]})}),e.livy&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["Livy ",e.livy]})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{})]})}},65537:(e,t,a)=>{a.d(t,{A:()=>k});var r=a(96540),n=a(18215),i=a(65627),s=a(56347),l=a(50372),o=a(30604),c=a(11861),d=a(78749);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return p(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}(a);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function u(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function x(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=h(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[c,p]=m({queryString:a,groupId:n}),[x,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,d.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),j=(()=>{const e=c??x;return u({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{j&&o(j)}),[j]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),g(e)}),[p,g,i]),tabValues:i}}var g=a(9136);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(74848);function f(e){let{className:t,block:a,selectedValue:r,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const t=e.currentTarget,a=o.indexOf(t),n=l[a].value;n!==r&&(c(t),s(n))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;t=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;t=o[a]??o[o.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":a},t),children:l.map((e=>{let{value:t,label:a,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>{o.push(e)},onKeyDown:p,onClick:d,...i,className:(0,n.A)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":r===t}),children:a??t},t)}))})}function y(e){let{lazy:t,children:a,selectedValue:i}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function v(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,n.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...t,...e}),(0,b.jsx)(y,{...t,...e})]})}function k(e){const t=(0,g.A)();return(0,b.jsx)(v,{...e,children:p(e.children)},String(t))}},79329:(e,t,a)=>{a.d(t,{A:()=>s});a(96540);var r=a(18215);const n={tabItem:"tabItem_Ymn6"};var i=a(74848);function s(e){let{children:t,hidden:a,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(n.tabItem,s),hidden:a,children:t})}},97963:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"Spark/gems/join-split/Repartition","title":"Repartition gem","description":"Repartition or coalesce a DataFrame","source":"@site/docs/Spark/gems/join-split/repartition.md","sourceDirName":"Spark/gems/join-split","slug":"/engineers/repartition","permalink":"/engineers/repartition","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"join-split","permalink":"/tags/join-split"},{"inline":true,"label":"partition","permalink":"/tags/partition"},{"inline":true,"label":"repartition","permalink":"/tags/repartition"},{"inline":true,"label":"coalesce","permalink":"/tags/coalesce"}],"version":"current","frontMatter":{"title":"Repartition gem","id":"Repartition","slug":"/engineers/repartition","description":"Repartition or coalesce a DataFrame","tags":["gems","join-split","partition","repartition","coalesce"]},"sidebar":"mySidebar","previous":{"title":"Join gem","permalink":"/engineers/join"},"next":{"title":"RowDistributor gem","permalink":"/engineers/row-distributor"}}');var n=a(74848),i=a(28453),s=a(49235),l=a(65537),o=a(79329);const c={title:"Repartition gem",id:"Repartition",slug:"/engineers/repartition",description:"Repartition or coalesce a DataFrame",tags:["gems","join-split","partition","repartition","coalesce"]},d=void 0,p={},h=[{value:"Hash Repartitoning",id:"hash-repartitoning",level:2},{value:"Parameters",id:"hash-repartitoning",level:3},{value:"Compiled code",id:"hash-repartitoning",level:3},{value:"Random Repartitioning",id:"random-repartitioning",level:2},{value:"Parameters",id:"random-repartitioning",level:3},{value:"Compiled code",id:"random-repartitioning",level:3},{value:"Range Repartitoning",id:"range-repartitoning",level:2},{value:"Parameters",id:"range-repartitoning",level:3},{value:"Compiled code",id:"range-repartitoning",level:3},{value:"Coalesce",id:"coalesce",level:2},{value:"Parameters",id:"coalesce",level:3},{value:"Compiled code",id:"coalesce",level:3},{value:"Video demo",id:"video-demo",level:2}];function u(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,n.jsx)(t.p,{children:"This will repartition or coalesce the input DataFrame based on the specified configuration. There are four different repartitioning options:"}),"\n",(0,n.jsx)(t.h2,{id:"hash-repartitoning",children:"Hash Repartitoning"}),"\n",(0,n.jsx)(t.p,{children:"Repartitions the data evenly across various partitions based on the hash value of the specified key."}),"\n",(0,n.jsx)(t.h3,{id:"hash-repartitoning",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Required"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DataFrame"}),(0,n.jsx)(t.td,{children:"Input DataFrame"}),(0,n.jsx)(t.td,{children:"True"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Overwrite default partitions"}),(0,n.jsx)(t.td,{children:"Flag to overwrite default partitions"}),(0,n.jsx)(t.td,{children:"False"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Number of partitions"}),(0,n.jsx)(t.td,{children:"Integer value specifying number of partitions"}),(0,n.jsx)(t.td,{children:"False"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Repartition expression(s)"}),(0,n.jsx)(t.td,{children:"List of expressions to repartition by"}),(0,n.jsx)(t.td,{children:"True"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"hash-repartitoning",children:"Compiled code"}),"\n","\n",(0,n.jsxs)(l.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:'def hashRepartition(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.repartition(5, col("customer_id"))\n'})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'object hashRepartition {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.repartition(5, col("customer_id"))\n\n}\n'})})})]}),"\n",(0,n.jsx)(t.h2,{id:"random-repartitioning",children:"Random Repartitioning"}),"\n",(0,n.jsx)(t.p,{children:"Repartitions without data distribution defined."}),"\n",(0,n.jsx)(t.h3,{id:"random-repartitioning",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"DataFrame"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Input DataFrame"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Number of partitions"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Integer value specifying number of partitions"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"random-repartitioning",children:"Compiled code"}),"\n",(0,n.jsxs)(l.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:"def randomRepartition(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.repartition(5)\n"})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:"object randomRepartition {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.repartition(5)\n\n}\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"range-repartitoning",children:"Range Repartitoning"}),"\n",(0,n.jsx)(t.p,{children:"Repartitions the data with tuples having keys within the same range on the same worker."}),"\n",(0,n.jsx)(t.h3,{id:"range-repartitoning",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Required"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DataFrame"}),(0,n.jsx)(t.td,{children:"Input DataFrame"}),(0,n.jsx)(t.td,{children:"True"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Overwrite default partitions"}),(0,n.jsx)(t.td,{children:"Flag to overwrite default partitions"}),(0,n.jsx)(t.td,{children:"False"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Number of partitions"}),(0,n.jsx)(t.td,{children:"Integer value specifying number of partitions"}),(0,n.jsx)(t.td,{children:"False"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Repartition expression(s) with sorting"}),(0,n.jsx)(t.td,{children:"List of expressions to repartition by with corresponding sorting order"}),(0,n.jsx)(t.td,{children:"True"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"range-repartitoning",children:"Compiled code"}),"\n",(0,n.jsxs)(l.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:'def RepartitionByRange(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.repartitionByRange(5, col("customer_id").asc())\n'})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:'object RepartitionByRange {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.repartitionByRange(5, col("customer_id").asc())\n\n}\n'})})})]}),"\n",(0,n.jsx)(t.h2,{id:"coalesce",children:"Coalesce"}),"\n",(0,n.jsx)(t.p,{children:"Reduces the number of partitions without shuffling the dataset."}),"\n",(0,n.jsx)(t.h3,{id:"coalesce",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"DataFrame"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Input DataFrame"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Number of partitions"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Integer value specifying number of partitions"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"coalesce",children:"Compiled code"}),"\n",(0,n.jsxs)(l.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:"def Coalesce(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.coalesce(5)\n"})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-scala",children:"object Coalesce {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.coalesce(5)\n\n}\n"})})})]}),"\n",(0,n.jsx)(t.h2,{id:"video-demo",children:"Video demo"}),"\n",(0,n.jsx)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"},children:(0,n.jsx)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"},children:(0,n.jsx)("iframe",{src:"https://user-images.githubusercontent.com/103921419/174014498-277e1037-8634-4752-a4f1-e0e1aae66659.mp4",title:"Repartition",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"})})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);