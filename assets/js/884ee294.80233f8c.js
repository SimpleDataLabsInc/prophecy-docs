"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[6425],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||l;return a?r.createElement(g,i(i({ref:t},d),{},{components:a})):r.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},72360:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(67294),n=a(86010);const l={tabItem:"tabItem_OmH5"};function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l.tabItem,i),hidden:a},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>c});var r=a(83117),n=a(67294),l=a(72389),i=a(67392),o=a(7094),s=a(12466),p=a(86010);const d={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function u(e){const{lazy:t,block:a,defaultValue:l,values:u,groupId:c,className:m}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=u??g.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),h=(0,i.l)(k,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===l?l:l??g.find((e=>e.props.default))?.props.value??g[0]?.props.value;if(null!==f&&!k.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:b}=(0,o.U)(),[y,N]=(0,n.useState)(f),S=[],{blockElementScrollPositionUntilNextRender:T}=(0,s.o5)();if(null!=c){const e=v[c];null!=e&&e!==y&&k.some((t=>t.value===e))&&N(e)}const w=e=>{const t=e.currentTarget,a=S.indexOf(t),r=k[a].value;r!==y&&(T(t),N(r),null!=c&&b(c,r))},x=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=S.indexOf(e.currentTarget)+1;t=S[a]||S[0];break}case"ArrowLeft":{const a=S.indexOf(e.currentTarget)-1;t=S[a]||S[S.length-1];break}}t?.focus()};return n.createElement("div",{className:(0,p.Z)("tabs-container",d.tabList)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":a},m)},k.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>S.push(e),onKeyDown:x,onFocus:w,onClick:w},l,{className:(0,p.Z)("tabs__item",d.tabItem,l?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,n.cloneElement)(g.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function c(e){const t=(0,l.Z)();return n.createElement(u,(0,r.Z)({key:String(t)},e))}},1217:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(67294),n=a(44996);const l=e=>{let{children:t}=e;return r.createElement("div",{style:{position:"relative",display:"flex","justify-content":"center","align-items":"center"}},t)},i=e=>{let{source:t,children:a}=e;return r.createElement("img",{src:(0,n.Z)(t),style:{"object-fit":"cover"}})},o=e=>{let{slides:t}=e;const[a,n]=(0,r.useState)(0);return r.createElement(l,null,r.createElement("i",{class:"fa fa-chevron-left",onClick:()=>{n(0===a?t.length-1:a-1)},style:{position:"absolute",top:"50%",left:"0px","font-size":"2rem"}}),r.createElement("i",{class:"fa fa-chevron-right",onClick:()=>{n(a===t.length-1?0:a+1)},style:{position:"absolute",top:"50%",right:"0px","font-size":"2rem"}}),r.createElement("div",{style:{padding:"30px"}},r.createElement(i,{source:t[a].image}),t[a].description))};function s(e){let{ImageData:t}=e;return r.createElement(o,{slides:t,style:{"font-family":" sans-serif","text-align":"center"}})}},7777:(e,t,a)=>{a.r(t),a.d(t,{ImageData:()=>c,ImageData2:()=>g,assets:()=>u,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var r=a(83117),n=(a(67294),a(3905)),l=a(1217),i=a(9877),o=a(72360);const s={title:"CSV",id:"csv",description:"CSV",sidebar_position:1,tags:["gems","file","csv"]},p=void 0,d={unversionedId:"low-code-spark/gems/source-target/file/csv",id:"low-code-spark/gems/source-target/file/csv",title:"CSV",description:"CSV",source:"@site/docs/low-code-spark/gems/source-target/file/csv.md",sourceDirName:"low-code-spark/gems/source-target/file",slug:"/low-code-spark/gems/source-target/file/csv",permalink:"/low-code-spark/gems/source-target/file/csv",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"file",permalink:"/tags/file"},{label:"csv",permalink:"/tags/csv"}],version:"current",sidebarPosition:1,frontMatter:{title:"CSV",id:"csv",description:"CSV",sidebar_position:1,tags:["gems","file","csv"]},sidebar:"defaultSidebar",previous:{title:"Source & Target",permalink:"/low-code-spark/gems/source-target/"},next:{title:"FTP",permalink:"/low-code-spark/gems/source-target/file/ftp"}},u={},c=[{image:"/img/csv/load/1.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Source Component")},{image:"/img/csv/load/2.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"/img/csv/load/3.png",description:(0,n.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the CSV format")},{image:"/img/csv/load/4.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 4 - Navigate to the desired CSV source file")},{image:"/img/csv/load/5.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 5 - Customize the properties and update schema as per your needs")},{image:"/img/csv/load/6.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 6 - Hit 'Refresh' to preview data ")}],m=[{value:"Source",id:"source",level:2},{value:"Source Parameters",id:"source-parameters",level:3},{value:"Example",id:"source-example",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target",id:"target",level:2},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Supported Write Modes",id:"supported-write-modes",level:3},{value:"Example",id:"target-example",level:3},{value:"Generated Code",id:"target-code",level:3},{value:"Producing a single output file",id:"producing-a-single-output-file",level:3}],g=[{image:"/img/csv/write/1.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Target Component")},{image:"/img/csv/write/2.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"/img/csv/write/3.png",description:(0,n.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the CSV format")},{image:"/img/csv/write/4.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 4 - Navigate to the desired CSV target location")},{image:"/img/csv/write/5.png",description:(0,n.kt)("h3",{style:{padding:"10px"}},"Step 5 - Customize the properties as per your needs")}],k={ImageData:c,toc:m,ImageData2:g},h="wrapper";function f(e){let{components:t,...s}=e;return(0,n.kt)(h,(0,r.Z)({},k,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Allows you to read or write delimited files such as CSV (Comma-separated Values) or TSV (Tab-separated Values)"),(0,n.kt)("h2",{id:"source"},"Source"),(0,n.kt)("h3",{id:"source-parameters"},"Source Parameters"),(0,n.kt)("p",null,"CSV ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Source"))," supports all the available ",(0,n.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-csv.html"},"Spark read options for CSV"),"."),(0,n.kt)("p",null,"The below list contains the additional parameters to read a CSV file:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,n.kt)("td",{parentName:"tr",align:null},"True")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Location"),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,n.kt)("br",null)," Eg: ",(0,n.kt)("inlineCode",{parentName:"td"},"dbfs:/data/test.csv")),(0,n.kt)("td",{parentName:"tr",align:null},"True")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Schema"),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Schema to applied on the loaded data. Can be defined/edited as JSON or inferred using ",(0,n.kt)("inlineCode",{parentName:"td"},"Infer Schema")," button"),(0,n.kt)("td",{parentName:"tr",align:null},"True")))),(0,n.kt)("h3",{id:"source-example"},"Example"),(0,n.kt)(l.Z,{ImageData:c,mdxType:"App"}),(0,n.kt)("h3",{id:"source-code"},"Generated Code"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},'def load_csv(spark: SparkSession) -> DataFrame:\n    return spark.read\\\n        .schema(\n          StructType([\n            StructField("order_id", IntegerType(), True),\n            StructField("customer_id", IntegerType(), True),\n            StructField("order_status", StringType(), True),\n            StructField("order_category", StringType(), True),\n            StructField("order_date", DateType(), True),\n            StructField("amount", DoubleType(), True)\n        ])\n        )\\\n        .option("header", True)\\\n        .option("quote", "\\"")\\\n        .option("sep", ",")\\\n        .csv("dbfs:/Prophecy/anshuman@simpledatalabs.com/OrdersDatasetInput.csv")\n\n'))),(0,n.kt)(o.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'object load_csv {\n\n  def apply(spark: SparkSession): DataFrame =\n    spark.read\n      .format("csv")\n      .option("header", true)\n      .option("quote",  "\\"")\n      .option("sep",    ",")\n      .schema(\n        StructType(\n          Array(\n            StructField("order_id",       IntegerType, true),\n            StructField("customer_id",    IntegerType, true),\n            StructField("order_status",   StringType,  true),\n            StructField("order_category", StringType,  true),\n            StructField("order_date",     DateType,    true),\n            StructField("amount",         DoubleType,  true)\n          )\n        )\n      )\n      .load("dbfs:/Prophecy/anshuman@simpledatalabs.com/OrdersDatasetInput.csv")\n\n}\n')))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"target"},"Target"),(0,n.kt)("h3",{id:"target-parameters"},"Target Parameters"),(0,n.kt)("p",null,"CSV ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Target"))," supports all the available ",(0,n.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-csv.html"},"Spark write options for CSV"),"."),(0,n.kt)("p",null,"The below list contains the additional parameters to write a CSV file:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,n.kt)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,n.kt)("td",{parentName:"tr",align:null},"True")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Location"),(0,n.kt)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,n.kt)("br",null)," Eg: ",(0,n.kt)("inlineCode",{parentName:"td"},"dbfs:/data/output.csv")),(0,n.kt)("td",{parentName:"tr",align:null},"True")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Write Mode"),(0,n.kt)("td",{parentName:"tr",align:null},"How to handle existing data. See ",(0,n.kt)("a",{parentName:"td",href:"#supported-write-modes"},"this table")," for a list of available options."),(0,n.kt)("td",{parentName:"tr",align:null},"False")))),(0,n.kt)("h3",{id:"supported-write-modes"},"Supported Write Modes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Write Mode"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"overwrite"),(0,n.kt)("td",{parentName:"tr",align:null},"If data already exists, overwrite with the contents of the DataFrame")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"append"),(0,n.kt)("td",{parentName:"tr",align:null},"If data already exists, append the contents of the DataFrame")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ignore"),(0,n.kt)("td",{parentName:"tr",align:null},"If data already exists, do nothing with the contents of the DataFrame. This is similar to a ",(0,n.kt)("inlineCode",{parentName:"td"},"CREATE TABLE IF NOT EXISTS")," in SQL.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"If data already exists, throw an exception.")))),(0,n.kt)("h3",{id:"target-example"},"Example"),(0,n.kt)(l.Z,{ImageData:g,mdxType:"App"}),(0,n.kt)("h3",{id:"target-code"},"Generated Code"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},'def write_as_csv(spark: SparkSession, in0: DataFrame):\n    in0.write\\\n        .option("header", True)\\\n        .option("sep", ",")\\\n        .mode("error")\\\n        .option("separator", ",")\\\n        .option("header", True)\\\n        .csv("dbfs:/Prophecy/anshuman@simpledatalabs.com/output.csv")\n'))),(0,n.kt)(o.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'object write_as_csv {\n  def apply(spark: SparkSession, in: DataFrame): Unit =\n    in.write\n      .format("csv")\n      .option("header", true)\n      .option("sep",    ",")\n      .mode("error")\n      .save("dbfs:/Prophecy/anshuman@simpledatalabs.com/output.csv")\n}\n')))),(0,n.kt)("h3",{id:"producing-a-single-output-file"},"Producing a single output file"),(0,n.kt)("p",null,"Because of Spark's distributed nature, output files are written as multiple separate partition files. If you need a single output file for some reason (such as reporting or exporting to an external system), use a ",(0,n.kt)("inlineCode",{parentName:"p"},"Repartition")," Gem in ",(0,n.kt)("inlineCode",{parentName:"p"},"Coalesce")," mode with 1 output partition:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Coalesce example",src:a(56183).Z,width:"1172",height:"582"})),(0,n.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"Note: This is not recommended for extremely large data sets as it may overwhelm the worker node writing the file."))))}f.isMDXComponent=!0},56183:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/coalesce-d33a29eb3a5d7288134b79aea66bf549.gif"}}]);