"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[3256],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return g}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(a),g=r,c=m["".concat(u,".").concat(g)]||m[g]||d[g]||o;return a?n.createElement(c,l(l({ref:t},p),{},{components:a})):n.createElement(c,l({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2360:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(7294),r=a(6010),o="tabItem_OmH5";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return g}});var n=a(7462),r=a(7294),o=a(2389),l=a(7392),i=a(7094),u=a(2466),s=a(6010),p="tabList_uSqn",d="tabItem_LplD";function m(e){var t,a,o,m=e.lazy,g=e.block,c=e.defaultValue,f=e.values,k=e.groupId,v=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,l.l)(h,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===c?c:null!=(t=null!=c?c:null==(a=b.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=b[0])?void 0:o.props.value;if(null!==N&&!h.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var _=(0,i.U)(),w=_.tabGroupChoices,T=_.setTabGroupChoices,x=(0,r.useState)(N),O=x[0],E=x[1],P=[],D=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var C=w[k];null!=C&&C!==O&&h.some((function(e){return e.value===C}))&&E(C)}var S=function(e){var t=e.currentTarget,a=P.indexOf(t),n=h[a].value;n!==O&&(D(t),E(n),null!=k&&T(k,n))},Z=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=P.indexOf(e.currentTarget)+1;a=P[n]||P[0];break;case"ArrowLeft":var r=P.indexOf(e.currentTarget)-1;a=P[r]||P[P.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":g},v)},h.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return P.push(e)},onKeyDown:Z,onFocus:S,onClick:S},o,{className:(0,s.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":O===t})}),null!=a?a:t)}))),m?(0,r.cloneElement)(b.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function g(e){var t=(0,o.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},6581:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return g}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=a(9877),i=a(2360),u=["components"],s={sidebar_position:4,title:"Aggregate",id:"aggregate",description:"Group data and apply aggregation methods or pivot operations",tags:["gems","aggregate","group by","sum","count"]},p=void 0,d={unversionedId:"low-code-spark/gems/transform/aggregate",id:"low-code-spark/gems/transform/aggregate",title:"Aggregate",description:"Group data and apply aggregation methods or pivot operations",source:"@site/docs/low-code-spark/gems/transform/aggregate.md",sourceDirName:"low-code-spark/gems/transform",slug:"/low-code-spark/gems/transform/aggregate",permalink:"/low-code-spark/gems/transform/aggregate",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"aggregate",permalink:"/tags/aggregate"},{label:"group by",permalink:"/tags/group-by"},{label:"sum",permalink:"/tags/sum"},{label:"count",permalink:"/tags/count"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Aggregate",id:"aggregate",description:"Group data and apply aggregation methods or pivot operations",tags:["gems","aggregate","group by","sum","count"]},sidebar:"defaultSidebar",previous:{title:"Order By",permalink:"/low-code-spark/gems/transform/order-by"},next:{title:"Schema Transform",permalink:"/low-code-spark/gems/transform/schema-transform"}},m={},g=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Aggregation without Grouping",id:"aggregation-without-grouping",level:3},{value:"Aggregation with Grouping",id:"aggregation-with-grouping",level:3},{value:"Pivot",id:"pivot",level:3}],c={toc:g};function f(e){var t=e.components,s=(0,r.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Allows you to group the data and apply aggregation methods and pivot operation."),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"DataFrame"),(0,o.kt)("td",{parentName:"tr",align:null},"Input DataFrame"),(0,o.kt)("td",{parentName:"tr",align:null},"True")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Target column (Aggregate Tab)"),(0,o.kt)("td",{parentName:"tr",align:null},"Output column name of aggregated column"),(0,o.kt)("td",{parentName:"tr",align:null},"True")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Expression (Aggregate Tab)"),(0,o.kt)("td",{parentName:"tr",align:null},"Aggregate function expression",(0,o.kt)("br",null)," Eg: ",(0,o.kt)("inlineCode",{parentName:"td"},'sum("amount")'),", ",(0,o.kt)("inlineCode",{parentName:"td"},"count(*)"),", ",(0,o.kt)("inlineCode",{parentName:"td"},'avg("amount")')),(0,o.kt)("td",{parentName:"tr",align:null},"True")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Target column (Group By Tab)"),(0,o.kt)("td",{parentName:"tr",align:null},"Output column name of grouped column"),(0,o.kt)("td",{parentName:"tr",align:null},"Required if ",(0,o.kt)("inlineCode",{parentName:"td"},"Pivot Column")," is present")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Expression (Group By Tab)"),(0,o.kt)("td",{parentName:"tr",align:null},"Column expression to group on ",(0,o.kt)("br",null)," Eg: ",(0,o.kt)("inlineCode",{parentName:"td"},'col("id")'),", ",(0,o.kt)("inlineCode",{parentName:"td"},'month(col("order_date"))')),(0,o.kt)("td",{parentName:"tr",align:null},"Required if a ",(0,o.kt)("inlineCode",{parentName:"td"},"Target Column"),"(Group By) is present")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Pivot column"),(0,o.kt)("td",{parentName:"tr",align:null},"Column name to pivot"),(0,o.kt)("td",{parentName:"tr",align:null},"False")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Unique values"),(0,o.kt)("td",{parentName:"tr",align:null},"List of values in ",(0,o.kt)("inlineCode",{parentName:"td"},"Pivot Column")," that will be translated to columns in the output DataFrame"),(0,o.kt)("td",{parentName:"tr",align:null},"False")))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Providing ",(0,o.kt)("inlineCode",{parentName:"p"},"Unique values")," while performing pivot operation improves the performance of the operation since Spark does not have to first compute the list of distinct values of ",(0,o.kt)("inlineCode",{parentName:"p"},"Pivot Column")," internally."))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"aggregation-without-grouping"},"Aggregation without Grouping"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example usage of Aggregate - Aggregation without Grouping",src:a(1220).Z,width:"1691",height:"629"})),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'def total_orders(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.agg(count(lit(1)).alias("number_of_orders"))\n'))),(0,o.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'object total_orders {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.agg(count(lit(1)).as("number_of_orders"))\n}\n')))),(0,o.kt)("h3",{id:"aggregation-with-grouping"},"Aggregation with Grouping"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example usage of Aggregate - Aggregation with Grouping",src:a(8100).Z,width:"1851",height:"796"})),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'def orders_by_date(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    df1 = in0.groupBy(concat(month(col("order_date")), lit("/"), year(col("order_date")))\n                      .alias("order_month(MM/YYYY)"))\n    return df1.agg(count(lit(1)).alias("number_of_orders"))\n'))),(0,o.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'object orders_by_date {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.groupBy(\n        concat(month(col("order_date")), lit("/"), year(col("order_date")))\n          .as("order_month(MM/YYYY)")\n      )\n      .agg(count(lit(1)).as("number_of_orders"))\n}\n')))),(0,o.kt)("h3",{id:"pivot"},"Pivot"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example usage of Aggregate - Pivoting",src:a(1359).Z,width:"1920",height:"1080"})),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'def orders_by_date_N_status(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    df1 = in0.groupBy(concat(month(col("order_date")), lit("/"), year(col("order_date"))).alias("order_month(MM/YYYY)"))\n    df2 = df1.pivot("order_status", ["Approved", "Finished", "Pending", "Started"])\n    return df2.agg(count(lit(1)).alias("number_of_orders"))\n'))),(0,o.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'object orders_by_date_N_status {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.groupBy(\n        concat(month(col("order_date")), lit("/"), year(col("order_date")))\n          .as("order_month(MM/YYYY)")\n      )\n      .pivot(col("order_status"),\n             List("Approved", "Finished", "Pending", "Started")\n      )\n      .agg(count(lit(1)).as("number_of_orders"))\n}\n')))))}f.isMDXComponent=!0},1220:function(e,t,a){t.Z=a.p+"assets/images/agg_eg_1-40497a04aacf57cef089dc04e8968b62.png"},8100:function(e,t,a){t.Z=a.p+"assets/images/agg_eg_2-8f09b2a49e553ed7489fa41295f6f74e.png"},1359:function(e,t,a){t.Z=a.p+"assets/images/agg_eg_3-60109ae121ceafd6b5b2dbf9cdb855d7.png"}}]);