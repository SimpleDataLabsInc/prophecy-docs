"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[3757],{28453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>d});var s=t(96540);const n={},i=s.createContext(n);function l(e){const r=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(i.Provider,{value:r},e.children)}},59758:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"analysts/development/gems/source-target/file/file-types/excel","title":"Excel","description":"Read and write Excel files","source":"@site/docs/analysts/development/gems/source-target/file/file-types/excel.md","sourceDirName":"analysts/development/gems/source-target/file/file-types","slug":"/analysts/excel","permalink":"/analysts/excel","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Excel","id":"excel","slug":"/analysts/excel","description":"Read and write Excel files","tags":[]},"sidebar":"mySidebar","previous":{"title":"CSV","permalink":"/analysts/csv"},"next":{"title":"Fixed-width","permalink":"/analysts/fixed-width"}}');var n=t(74848),i=t(28453);const l={title:"Excel",id:"excel",slug:"/analysts/excel",description:"Read and write Excel files",tags:[]},d=void 0,c={},o=[{value:"Properties",id:"properties",level:2},{value:"Source properties",id:"source-properties",level:3},{value:"Target properties",id:"target-properties",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["This page describes the ",(0,n.jsx)(r.strong,{children:"Excel-specific properties"})," that appear in the ",(0,n.jsx)(r.strong,{children:"Properties"})," tab of Source and Target gems. These settings are the same for Excel files regardless of which connection type is configured in the gem (for example, S3, SFTP, or SharePoint)."]}),"\n",(0,n.jsxs)(r.p,{children:["If you need details on configuring a Source or Target gem end to end (including all tabs such as ",(0,n.jsx)(r.strong,{children:"Location"}),"), see the documentation for the specific file storage connection:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/analysts/s3-gem",children:"Amazon S3"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/analysts/databricks-volumes-gem",children:"Databricks"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/analysts/onedrive-gem",children:"Microsoft OneDrive"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/analysts/sftp-gem",children:"SFTP"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/analysts/sharepoint-gem",children:"SharePoint"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/analysts/smartsheet-gem",children:"Smartsheet"})}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["You can also use the ",(0,n.jsx)(r.a,{href:"/analysts/upload-file",children:"upload file"})," feature to use Excel files. These will be stored in the SQL warehouse configured in your fabric."]})}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(r.h3,{id:"source-properties",children:"Source properties"}),"\n",(0,n.jsx)(r.p,{children:"The following properties are available for the Excel Source gem."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Property"}),(0,n.jsx)(r.th,{children:"Description"}),(0,n.jsx)(r.th,{children:"Default"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Description"}),(0,n.jsx)(r.td,{children:"Description of the table."}),(0,n.jsx)(r.td,{children:"None"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Header"}),(0,n.jsx)(r.td,{children:"Whether the first row is the column header."}),(0,n.jsx)(r.td,{children:"True"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Allow Undefined Rows"}),(0,n.jsx)(r.td,{children:"Whether to permit rows with all values undefined (null or empty)."}),(0,n.jsx)(r.td,{children:"True"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Allow Incomplete Rows"}),(0,n.jsx)(r.td,{children:"Whether to permit rows with missing values for some columns."}),(0,n.jsx)(r.td,{children:"True"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Ignore Cell Formatting"}),(0,n.jsx)(r.td,{children:"Whether to apply the number format for the cell value or get the raw value."}),(0,n.jsx)(r.td,{children:"True"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Sheet Name"}),(0,n.jsx)(r.td,{children:"Name of the sheet to read from."}),(0,n.jsx)(r.td,{children:"None"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Skip Undefined Rows"}),(0,n.jsx)(r.td,{children:"Whether to skip rows where all values are undefined."}),(0,n.jsx)(r.td,{children:"False"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Date Format Reference"}),(0,n.jsx)(r.td,{children:"Date format to use when parsing date values."}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"2006-01-02"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Time Format Reference"}),(0,n.jsx)(r.td,{children:"Time format to use when parsing time values."}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"15:04:05"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Timestamp Format Reference"}),(0,n.jsx)(r.td,{children:"Timestamp format to use when parsing date-time values."}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"2006-01-02 15:04:05"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Inference Data Sampling Limit"}),(0,n.jsx)(r.td,{children:"Maximum number of rows to sample for inferring the schema."}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"0"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Password"}),(0,n.jsx)(r.td,{children:"Password for password-protected sheets."}),(0,n.jsx)(r.td,{children:"None"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"target-properties",children:"Target properties"}),"\n",(0,n.jsx)(r.p,{children:"The following properties are available for the Excel Target gem."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Property"}),(0,n.jsx)(r.th,{children:"Description"}),(0,n.jsx)(r.th,{children:"Default"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Description"}),(0,n.jsx)(r.td,{children:"Description of the table."}),(0,n.jsx)(r.td,{children:"None"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Header"}),(0,n.jsx)(r.td,{children:"Whether to make the first row the column header."}),(0,n.jsx)(r.td,{children:"True"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Ignore Cell Formatting"}),(0,n.jsx)(r.td,{children:"Whether to apply the number format for the cell value or get the raw value."}),(0,n.jsx)(r.td,{children:"True"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Password"}),(0,n.jsx)(r.td,{children:"Password for password-protected sheets."}),(0,n.jsx)(r.td,{children:"None"})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);