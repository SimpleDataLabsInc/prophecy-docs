"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[34793],{11055:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"concepts/git/Git","title":"Git","description":"Understand how Prophecy uses Git for version control","source":"@site/docs/concepts/git/git.md","sourceDirName":"concepts/git","slug":"/concepts/git/","permalink":"/concepts/git/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"metadata","permalink":"/tags/metadata"},{"inline":true,"label":"Git","permalink":"/tags/git"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Git","id":"Git","description":"Understand how Prophecy uses Git for version control","sidebar_position":1,"tags":["metadata","Git"]},"sidebar":"mySidebar","previous":{"title":"Concepts","permalink":"/concepts/"},"next":{"title":"Merge conflicts","permalink":"/concepts/git/git-resolve"}}');var i=n(74848),r=n(28453);const s={title:"Git",id:"Git",description:"Understand how Prophecy uses Git for version control",sidebar_position:1,tags:["metadata","Git"]},c=void 0,a={},l=[{value:"Projects and Git repositories",id:"projects-and-git-repositories",level:2},{value:"Add Git credentials to Prophecy",id:"Git-credentials",level:2},{value:"GitHub Oath",id:"github-oath",level:3},{value:"Git workflow",id:"git-workflow",level:2},{value:"Checkout",id:"checkout",level:3},{value:"Commit",id:"commit",level:3},{value:"Pull",id:"pull",level:3},{value:"Merge",id:"merge",level:3},{value:"Release and Deploy",id:"release-and-deploy",level:3},{value:"Fork per User",id:"fork-per-user",level:2},{value:"What&#39;s next",id:"whats-next",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Prophecy utilizes ",(0,i.jsx)(t.a,{href:"https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control",children:"Git"})," to align with DevOps practices. Git lets you:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Store your visual pipelines as code."}),"\n",(0,i.jsx)(t.li,{children:"Track your project metadata, including workflows, schedules, datasets, and computed metadata."}),"\n",(0,i.jsx)(t.li,{children:"Collaborate on your projects and perform code reviews."}),"\n",(0,i.jsx)(t.li,{children:"Track changes across time."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"projects-and-git-repositories",children:"Projects and Git repositories"}),"\n",(0,i.jsx)(t.p,{children:"When you create a project in Prophecy, you must choose an empty Git repository or a path in a repository to host the underlying project code. This way, Prophecy can keep track of any changes to the project (including pipelines, models, datasets, and jobs) in a systematic way."}),"\n",(0,i.jsxs)(t.p,{children:["If you're unfamiliar with Git, or you don't need to connect to an external Git repository, you can connect your projects to ",(0,i.jsx)(t.strong,{children:"Prophecy-managed"})," repositories. To leverage the full functionality of Git, however, you need to connect your projects to external Git repositories. To do so, you need to add external Git credentials to Prophecy."]}),"\n",(0,i.jsx)(t.h2,{id:"Git-credentials",children:"Add Git credentials to Prophecy"}),"\n",(0,i.jsx)(t.p,{children:"When you create a project in Prophecy, You can either choose a Prophecy-managed repository or connect an external repository."}),"\n",(0,i.jsx)(t.p,{children:"To add an external Git account to your Prophecy environment:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Open ",(0,i.jsx)(t.strong,{children:"Settings"})," from the ellipses menu in the left sidebar."]}),"\n",(0,i.jsxs)(t.li,{children:["Select the ",(0,i.jsx)(t.strong,{children:"Git"})," tab. You will see any existing Git credentials here."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Add new"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Choose the relevant ",(0,i.jsx)(t.strong,{children:"Git Provider"})," and provide the following details:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"An alias for your Git credentials."}),"\n",(0,i.jsx)(t.li,{children:"Your Git email."}),"\n",(0,i.jsx)(t.li,{children:"Your Git username."}),"\n",(0,i.jsx)(t.li,{children:"Your Git personal access token (PAT). You should be able to find instructions on accessing your personal access token in each external provider's documentation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Connect"})," to save the credentials."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"You can also enter new Git credentials directly when creating a new project."}),"\n",(0,i.jsx)(t.h3,{id:"github-oath",children:"GitHub Oath"}),"\n",(0,i.jsx)(t.p,{children:"If you choose GitHub as your external Git provider, you can add your Git credentials using GitHub Oauth."}),"\n",(0,i.jsxs)(t.p,{children:["To use GitHub Oauth, a GitHub admin will need to ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/apps/oauth-apps/using-oauth-apps/authorizing-oauth-apps",children:"authorize Prophecy"})," to access the APIs required to access your organization's repositories. Follow the ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/organizations/managing-oauth-access-to-your-organizations-data/approving-oauth-apps-for-your-organization",children:"approval steps"})," to set this up."]}),"\n",(0,i.jsx)(t.h2,{id:"git-workflow",children:"Git workflow"}),"\n",(0,i.jsx)(t.p,{children:"You can interact with a project's Git workflow from the project metadata page or within the project editor."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Git workflow",src:n(80445).A+"",width:"2812",height:"900"})}),"\n",(0,i.jsx)(t.h3,{id:"checkout",children:"Checkout"}),"\n",(0,i.jsxs)(t.p,{children:["In Prophecy, you cannot make edits directly on the ",(0,i.jsx)(t.code,{children:"main"})," branch of your project. Instead, you have to make changes on a development branch and merge those changes into the main branch."]}),"\n",(0,i.jsx)(t.p,{children:"Therefore, the Git workflow begins by creating and checking out a new branch."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Git checkout",src:n(85230).A+"",width:"2620",height:"1508"})}),"\n",(0,i.jsx)(t.p,{children:"When you are selecting a branch to checkout, you might be able to select branches that have been created remotely. Once you checkout a remote branch, it will be cloned locally, and it will no longer show up in the list of remote branches."}),"\n",(0,i.jsx)(t.h3,{id:"commit",children:"Commit"}),"\n",(0,i.jsxs)(t.p,{children:["When you make changes to your pipeline, you need to commit these changes to save them. You can view these changes either visually, or using the ",(0,i.jsx)(t.strong,{children:"Code changes"})," view."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"View Git changes",src:n(49925).A+"",width:"2812",height:"900"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Feature"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"View"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Description"})})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Branch history"}),(0,i.jsx)(t.td,{children:"Visual"}),(0,i.jsx)(t.td,{children:"Shows previous commits on the branch."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Entities changed"}),(0,i.jsx)(t.td,{children:"Visual"}),(0,i.jsx)(t.td,{children:"Explains which entities were modified."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Code changes toggle"}),(0,i.jsx)(t.td,{children:"Code"}),(0,i.jsx)(t.td,{children:"Allows you to view the code differences, with highlighted lines for additions and deletions."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Code changes tab"}),(0,i.jsx)(t.td,{children:"Code"}),(0,i.jsx)(t.td,{children:"Displays all of the files with changes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Metadata changes tab"}),(0,i.jsx)(t.td,{children:"Code"}),(0,i.jsx)(t.td,{children:"Displays all of the Prophecy metadata files with changes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Reset"}),(0,i.jsx)(t.td,{children:"Both"}),(0,i.jsx)(t.td,{children:"Reverts the changes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Commit Message"}),(0,i.jsx)(t.td,{children:"Both"}),(0,i.jsx)(t.td,{children:"Explains the changes that will be saved in this commit."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"pull",children:"Pull"}),"\n",(0,i.jsx)(t.p,{children:"Sometimes, you will be able to go straight from committing your changes to merging your changes. However, there are a few steps you might need to complete before merging your changes:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Pull ",(0,i.jsx)(t.strong,{children:"remote"})," changes into the ",(0,i.jsx)(t.strong,{children:"local"})," current branch."]}),"\n",(0,i.jsxs)(t.li,{children:["Pull ",(0,i.jsx)(t.strong,{children:"remote"})," changes into the ",(0,i.jsx)(t.strong,{children:"local"})," base branch. Note that the base branch will be ",(0,i.jsx)(t.code,{children:"main"})," by default."]}),"\n",(0,i.jsxs)(t.li,{children:["Pull changes from the ",(0,i.jsx)(t.strong,{children:"local"})," base branch into the ",(0,i.jsx)(t.strong,{children:"local"})," current branch. You will not be able to complete this step before pulling remote commits."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Git pull",src:n(26527).A+"",width:"2620",height:"1508"})}),"\n",(0,i.jsxs)(t.p,{children:["Once you complete these steps, you might run into merge conflicts. If that happens, you can ",(0,i.jsx)(t.a,{href:"git-resolve",children:"use the Prophecy interface"})," to resolve them."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Before you pull remote changes into local branches, you will have to commit (or discard) your local changes."})}),"\n",(0,i.jsx)(t.h3,{id:"merge",children:"Merge"}),"\n",(0,i.jsxs)(t.p,{children:["Once you have committed your changes, you have the ability to ",(0,i.jsx)(t.strong,{children:"merge"})," them to a different branch. If you merged your branch in your external repository, you can tell Prophecy that you did so."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Merge branch",src:n(72422).A+"",width:"2620",height:"1511"})}),"\n",(0,i.jsx)(t.h3,{id:"release-and-deploy",children:"Release and Deploy"}),"\n",(0,i.jsxs)(t.p,{children:["Once the changes are merged, you can ",(0,i.jsx)(t.a,{href:"/ci-cd/deployment/",children:"release"})," a branch from the Prophecy user interface."]}),"\n",(0,i.jsx)(t.h2,{id:"fork-per-user",children:"Fork per User"}),"\n",(0,i.jsxs)(t.p,{children:["When you create a project, you have the option to choose a single repository shared among users, or to ",(0,i.jsx)(t.strong,{children:"Fork per User"}),". When you Fork per User, every user gets their own ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo",children:"fork"})," of the repository."]}),"\n",(0,i.jsx)(t.p,{children:"When you fork a repository, you must already have both the upstream repository and a Fork per User repository present."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Changes made in forked repository do not affect the upstream repository."}),"\n",(0,i.jsx)(t.li,{children:"Please follow the normal Git flow for raising pull requests to the original repository from the forked repository."}),"\n"]})}),"\n",(0,i.jsx)(t.h2,{id:"whats-next",children:"What's next"}),"\n",(0,i.jsxs)(t.p,{children:["Learn more about how to integrate Git in your project lifecycle in ",(0,i.jsx)(t.a,{href:"/ci-cd/deployment/",children:"Develop and deploy a project"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},26527:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/git-pull-8c2ebd935b424a2ffe0705d0b1cc66c2.png"},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var o=n(96540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}},49925:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/git-code-changes-28157bfd1f17017c36a36f285eea829e.png"},72422:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/merge-branch-274d2a209d2738a9f5c93371f05f8218.png"},80445:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/git-workflow-4a5e9344f38fff8be6f9ad4f7886f680.png"},85230:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/git-checkout-3e3bfaea47938563c20c3f4aff781bd2.png"}}]);