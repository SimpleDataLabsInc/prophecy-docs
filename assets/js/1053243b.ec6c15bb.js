"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[40565],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(o.Provider,{value:n},e.children)}},82284:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"analysts/development/gems/transform/count-records","title":"CountRecords","description":"Returns one integer that represents the count of records in the input dataset","source":"@site/docs/analysts/development/gems/transform/count-records.md","sourceDirName":"analysts/development/gems/transform","slug":"/analysts/count-records","permalink":"/analysts/count-records","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"transform","permalink":"/tags/transform"}],"version":"current","frontMatter":{"title":"CountRecords","id":"count-records","slug":"/analysts/count-records","description":"Returns one integer that represents the count of records in the input dataset","tags":["gems","analyst","transform"]},"sidebar":"mySidebar","previous":{"title":"Aggregate","permalink":"/analysts/aggregate"},"next":{"title":"DynamicSelect","permalink":"/analysts/dynamic-select"}}');var r=t(74848),o=t(28453),l=t(82824);const c={title:"CountRecords",id:"count-records",slug:"/analysts/count-records",description:"Returns one integer that represents the count of records in the input dataset",tags:["gems","analyst","transform"]},i=void 0,d={},a=[{value:"Input and Output",id:"input-and-output",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Count options",id:"count-options",level:3},{value:"Example",id:"example",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.A,{execution_engine:"SQL Warehouse",sql_package_name:"ProphecyDatabricksSqlBasics",sql_package_version:"0.0.12+"}),"\n",(0,r.jsx)(n.p,{children:"The CountRecords gem allows you to count the number of rows in a dataset in different ways. You can count all rows, count non-null values in selected columns, or count distinct non-null values in selected columns."}),"\n",(0,r.jsx)(n.h2,{id:"input-and-output",children:"Input and Output"}),"\n",(0,r.jsx)(n.p,{children:"The CountRecords gem accepts the following input and output."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Port"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"in0"})}),(0,r.jsx)(n.td,{children:"Input dataset with the columns to count."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"out"})}),(0,r.jsx)(n.td,{children:"Output dataset with the resulting count(s). Output has one row with the selected count(s)."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.p,{children:"Configure the CountRecords gem using the following parameters."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Count option"}),(0,r.jsxs)(n.td,{children:["Choose how the data should be counted. See ",(0,r.jsx)(n.a,{href:"#count-options",children:"Count options"})," below."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Select columns to count"}),(0,r.jsx)(n.td,{children:"One or more columns to count. Required for counting non-null records or distinct records."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"count-options",children:"Count options"}),"\n",(0,r.jsx)(n.p,{children:"Choose one of the following strategies for counting records."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Strategy"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Count number of total records"}),(0,r.jsx)(n.td,{children:"Returns the total number of rows in the input dataset, including null values."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Count non-null records in selected column(s)"}),(0,r.jsx)(n.td,{children:"Returns the number of non-null rows for each selected column."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Count distinct records in selected column(s)"}),(0,r.jsx)(n.td,{children:"Returns the number of distinct, non-null values for each selected column."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"Given a table of patient visits:"}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PatientID"}),(0,r.jsx)(n.th,{children:"VisitDate"}),(0,r.jsx)(n.th,{children:"Department"}),(0,r.jsx)(n.th,{children:"Diagnosis"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"2024-01-01"}),(0,r.jsx)(n.td,{children:"Cardiology"}),(0,r.jsx)(n.td,{children:"Flu"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"2024-01-02"}),(0,r.jsx)(n.td,{children:"Oncology"}),(0,r.jsx)(n.td,{children:"Cancer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"2024-01-03"}),(0,r.jsx)(n.td,{children:"Cardiology"}),(0,r.jsx)(n.td,{children:"Flu"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"4"}),(0,r.jsx)(n.td,{children:"2024-01-04"}),(0,r.jsx)(n.td,{children:"NULL"}),(0,r.jsx)(n.td,{children:"Cold"})]})]})]})}),"\n",(0,r.jsx)(n.p,{children:"If you choose:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Count distinct records"})," on ",(0,r.jsx)(n.code,{children:"Department"}),": the result will be ",(0,r.jsx)(n.code,{children:"2"})," (Cardiology, Oncology)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Count non-null records"})," on ",(0,r.jsx)(n.code,{children:"Department"}),": the result will be ",(0,r.jsx)(n.code,{children:"3"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Count total number of records"}),": the result will be ",(0,r.jsx)(n.code,{children:"4"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},82824:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var s=t(74848);function r(e){return(0,s.jsxs)("div",{children:[e.execution_engine&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,s.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,s.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})}}}]);