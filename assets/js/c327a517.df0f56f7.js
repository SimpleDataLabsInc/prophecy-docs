"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[64738],{28453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>i});var n=a(96540);const r={},s=n.createContext(r);function l(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(s.Provider,{value:t},e.children)}},37281:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"Spark/gems/transform/reformat","title":"Reformat","description":"Select one or more columns or values using expressions and functions","source":"@site/docs/Spark/gems/transform/reformat.md","sourceDirName":"Spark/gems/transform","slug":"/engineers/reformat","permalink":"/engineers/reformat","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"select","permalink":"/tags/select"},{"inline":true,"label":"reformat","permalink":"/tags/reformat"},{"inline":true,"label":"transform","permalink":"/tags/transform"}],"version":"current","frontMatter":{"title":"Reformat","id":"reformat","slug":"/engineers/reformat","description":"Select one or more columns or values using expressions and functions","tags":["gems","select","reformat","transform"]},"sidebar":"mySidebar","previous":{"title":"OrderBy","permalink":"/engineers/order-by"},"next":{"title":"SampleRows","permalink":"/engineers/sample-rows"}}');var r=a(74848),s=a(28453),l=a(49235),i=a(65537),o=a(79329);const c={title:"Reformat",id:"reformat",slug:"/engineers/reformat",description:"Select one or more columns or values using expressions and functions",tags:["gems","select","reformat","transform"]},d=void 0,u={},h=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Spark Code",id:"spark-code",level:2},{value:"Advanced Import",id:"advanced-import",level:2},{value:"Using Advanced Import",id:"using-advanced-import",level:3},{value:"Format",id:"format",level:3}];function p(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,r.jsx)(t.p,{children:"Transforms one or more column names or values by using expressions and/or functions. It's useful when we need to extract only the required columns or make changes column-wise."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"DataFrame"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Input DataFrame on which changes are required"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Target column"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Output column name"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"False"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Expression"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Expression to compute target column"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Required if a ",(0,r.jsx)(t.code,{children:"Target column"})," is present"]})]})]})]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"If no columns are selected, then all columns are passed through to the output"})}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Example usage of Reformat",src:a(51611).A+"",width:"1209",height:"724"})}),"\n",(0,r.jsx)(t.h2,{id:"spark-code",children:"Spark Code"}),"\n",(0,r.jsxs)(t.p,{children:["Reformat converts to a SQL ",(0,r.jsx)(t.code,{children:"Select"})," or in relational terms into a projection, unlike ",(0,r.jsx)(t.code,{children:"SchemaTransform"})," gem which uses underlying ",(0,r.jsx)(t.code,{children:"withColumn"})," construct"]}),"\n","\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"py",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-py",children:'def Reformat(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.select(\n        col("id"),\n        col("email").alias("email_address"),\n        col("name"),\n        col("updated_at"),\n        concat_ws("$$$", col("address_line1"), col("address_line2"), col("postal_code"))\n            .alias("address_string")\n    )\n'})})}),(0,r.jsx)(o.A,{value:"scala",label:"Scala",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'object Reformat {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.select(\n      col("id"),\n      col("email").as("email_address"),\n      col("name"),\n      col("updated_at"),\n      expr("concat_ws(\'$$$\', address_line1, address_line2, postal_code)").as("address_string")\n    )\n }\n\n'})})})]}),"\n",(0,r.jsx)(t.h2,{id:"advanced-import",children:"Advanced Import"}),"\n",(0,r.jsxs)(t.p,{children:["The Advanced Import feature allows you to bulk import statements that are structured similarly to CSV/TSV files. This can be useful if you have your expressions/transformation logic in another format and just want to quickly configure a ",(0,r.jsx)(t.code,{children:"Reformat"})," gem based on this logic."]}),"\n",(0,r.jsx)(t.h3,{id:"using-advanced-import",children:"Using Advanced Import"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Click the ",(0,r.jsx)(t.code,{children:"Advanced"})," button in the `Reformat UI"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Advanced import toggle",src:a(45497).A+"",width:"2090",height:"1395"})}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Enter the expressions into the text area using the format as described below:"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Advanced import mode",src:a(69858).A+"",width:"2618",height:"2026"})}),"\n",(0,r.jsxs)(t.ol,{start:"3",children:["\n",(0,r.jsxs)(t.li,{children:["Use the button at the top (labeled ",(0,r.jsx)(t.code,{children:"Expressions"}),") to switch back to the expressions view. This will translate the expressions from the CSV format to the table format and will show any errors detected."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"format",children:"Format"}),"\n",(0,r.jsxs)(t.p,{children:["The format of these expressions is ",(0,r.jsx)(t.code,{children:"target_name,target_expr"}),", where ",(0,r.jsx)(t.code,{children:"target_name"})," is the desired new column name and ",(0,r.jsx)(t.code,{children:"target_expr"})," is the Spark expression that will be used to generate the new column."]}),"\n",(0,r.jsxs)(t.admonition,{type:"caution",children:[(0,r.jsxs)(t.p,{children:["For ",(0,r.jsx)(t.code,{children:"target_expr"})," values that contain a comma ",(0,r.jsx)(t.code,{children:","})," or span multiple lines, you must surround them by ",(0,r.jsx)(t.code,{children:"``"})," on either side. For example:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"customer_id,customer_id\nfull_name,``concat(first_name, ' ', last_name)``\n"})})]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},45497:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/reformat_advanced-c65c99761ced1311392e26c6c335bf7b.png"},49235:(e,t,a)=>{a.d(t,{A:()=>r});a(96540);var n=a(74848);function r(e){return(0,n.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,n.jsxs)("span",{className:"badge badge-dependency",children:[e.python_package_name," ",e.python_package_version]})}),e.scala_package_name&&e.scala_package_version&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub",children:(0,n.jsxs)("span",{className:"badge badge-dependency",children:[e.scala_package_name," ",e.scala_package_version]})}),e.python_lib&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,n.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsPython ",e.python_lib]})}),e.scala_lib&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,n.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsScala ",e.scala_lib]})}),e.uc_single&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,n.jsxs)("span",{className:"badge badge-spark",children:["UC Dedicated Cluster ",e.uc_single]})}),e.uc_shared&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,n.jsxs)("span",{className:"badge badge-spark",children:["UC Standard Cluster ",e.uc_shared]})}),e.livy&&(0,n.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,n.jsxs)("span",{className:"badge badge-spark",children:["Livy ",e.livy]})}),(0,n.jsx)("br",{}),(0,n.jsx)("br",{})]})}},51611:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/reformat_eg_1-9a9344e1d3174c50427768400047df6c.png"},65537:(e,t,a)=>{a.d(t,{A:()=>_});var n=a(96540),r=a(18215),s=a(65627),l=a(56347),i=a(50372),o=a(30604),c=a(11861),d=a(78749);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,l.W6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=h(e),[l,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[c,u]=m({queryString:a,groupId:r}),[f,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,d.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),x=(()=>{const e=c??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{x&&o(x)}),[x]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=a(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(74848);function j(e){let{className:t,block:a,selectedValue:n,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const t=e.currentTarget,a=o.indexOf(t),r=i[a].value;r!==n&&(c(t),l(r))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;t=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;t=o[a]??o[o.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},t),children:i.map((e=>{let{value:t,label:a,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function v(e){let{lazy:t,children:a,selectedValue:s}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function y(e){const t=f(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...t,...e}),(0,b.jsx)(v,{...t,...e})]})}function _(e){const t=(0,g.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(t))}},69858:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/reformat_advanced_2-c906ca7673c85cf3c013bdd6923d471b.png"},79329:(e,t,a)=>{a.d(t,{A:()=>l});a(96540);var n=a(18215);const r={tabItem:"tabItem_Ymn6"};var s=a(74848);function l(e){let{children:t,hidden:a,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,l),hidden:a,children:t})}}}]);