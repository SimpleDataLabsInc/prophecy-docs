"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[95816],{12618:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"analysts/development/models/sources-target/sources-and-targets","title":"Model sources and targets","description":"Use models to read and write data","source":"@site/docs/analysts/development/models/sources-target/sources-target.md","sourceDirName":"analysts/development/models/sources-target","slug":"/analysts/model-sources-and-targets","permalink":"/analysts/model-sources-and-targets","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"SQL","permalink":"/tags/sql"},{"inline":true,"label":"sources","permalink":"/tags/sources"},{"inline":true,"label":"seeds","permalink":"/tags/seeds"}],"version":"current","frontMatter":{"title":"Model sources and targets","id":"sources-and-targets","slug":"/analysts/model-sources-and-targets","description":"Use models to read and write data","tags":["SQL","sources","seeds"]},"sidebar":"mySidebar","previous":{"title":"Models","permalink":"/engineers/models"},"next":{"title":"Databricks targets","permalink":"/engineers/databricks-target"}}');var r=s(74848),a=s(28453),o=s(99563),l=s(89791);const i={title:"Model sources and targets",id:"sources-and-targets",slug:"/analysts/model-sources-and-targets",description:"Use models to read and write data",tags:["SQL","sources","seeds"]},c=void 0,d={},u=[{value:"Sources",id:"sources",level:2},{value:"Targets",id:"targets",level:2},{value:"What&#39;s next",id:"whats-next",level:2}];function h(e){const t={a:"a",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Model sources and targets vary slightly from those of a pipeline. The primary difference is that all model sources and targets must point to tables in the SQL warehouse."}),"\n",(0,r.jsx)(t.h2,{id:"sources",children:"Sources"}),"\n",(0,r.jsx)(t.p,{children:"When you create a new model, you need to define an input data source. The data source can be:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Another model. You can drag a model from the Project tab of the left sidebar onto your canvas to use it as a source."}),"\n",(0,r.jsxs)(t.li,{children:["A ",(0,r.jsx)(t.a,{href:"/analysts/source-target",children:"Table gem"}),". You can either use pre-configured tables from the Project tab of the left sidebar, or you can browse SQL warehouse tables in the Environment tab of the left sidebar."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"targets",children:"Targets"}),"\n",(0,r.jsx)(t.p,{children:"Target models let you define how you want to materialize your data using write formats. When you open a target model configuration, you'll see the following tabs:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Type & Format"}),": Update the format of the model between different table materialization types."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Location"}),": Update the location by overwriting the database, schema, or alias."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Schema"}),": Make schema changes and set optional dbt properties."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"SQL Query"}),": Enable and create a custom SQL query to include at the end of the target model."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Write Options"}),": Choose a specific write mode such as overwrite, append, and merge."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Target Model tabs",src:s(34310).A+"",width:"2620",height:"1507"})}),"\n",(0,r.jsx)(t.h2,{id:"whats-next",children:"What's next"}),"\n",(0,r.jsx)(t.p,{children:"Explore the following pages for a deep dive on model usage and configuration."}),"\n","\n",(0,r.jsx)(o.A,{items:(0,l.$S)().items})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>l});var n=s(96540);const r={},a=n.createContext(r);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(a.Provider,{value:t},e.children)}},34310:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/type-and-format-eaf38b8366ed98821902c60a9340e372.png"},81430:(e,t,s)=>{s.d(t,{W:()=>c});var n=s(96540),r=s(40797);const a=["zero","one","two","few","many","other"];function o(e){return a.filter((t=>e.includes(t)))}const l={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function i(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,n.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),l}}),[e])}function c(){const e=i();return{selectMessage:(t,s)=>function(e,t,s){const n=e.split("|");if(1===n.length)return n[0];n.length>s.pluralForms.length&&console.error(`For locale=${s.locale}, a maximum of ${s.pluralForms.length} plural forms are expected (${s.pluralForms.join(",")}), but the message contains ${n.length}: ${e}`);const r=s.select(t),a=s.pluralForms.indexOf(r);return n[Math.min(a,n.length-1)]}(s,t,e)}}},89791:(e,t,s)=>{s.d(t,{$S:()=>n});s(40797);function n(){return s(56942).$S(...arguments)}},99563:(e,t,s)=>{s.d(t,{A:()=>j});s(96540);var n=s(18215),r=s(93751),a=s(56289),o=s(81430),l=s(22887),i=s(50539),c=s(9303);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=s(74848);function h(e){let{href:t,children:s}=e;return(0,u.jsx)(a.A,{href:t,className:(0,n.A)("card padding--lg",d.cardContainer),children:s})}function m(e){let{href:t,icon:s,title:r,description:a}=e;return(0,u.jsxs)(h,{href:t,children:[(0,u.jsxs)(c.A,{as:"h2",className:(0,n.A)("text--truncate",d.cardTitle),title:r,children:[s," ",r]}),a&&(0,u.jsx)("p",{className:(0,n.A)("text--truncate",d.cardDescription),title:a,children:a})]})}function g(e){let{item:t}=e;const s=(0,r.Nr)(t),n=function(){const{selectMessage:e}=(0,o.W)();return t=>e(t,(0,i.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return s?(0,u.jsx)(m,{href:s,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??n(t.items.length)}):null}function p(e){let{item:t}=e;const s=(0,l.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,r.cC)(t.docId??void 0);return(0,u.jsx)(m,{href:t.href,icon:s,title:t.label,description:t.description??n?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return(0,u.jsx)(p,{item:t});case"category":return(0,u.jsx)(g,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function x(e){let{className:t}=e;const s=(0,r.$S)();return(0,u.jsx)(j,{items:s.items,className:t})}function j(e){const{items:t,className:s}=e;if(!t)return(0,u.jsx)(x,{...e});const a=(0,r.d1)(t);return(0,u.jsx)("section",{className:(0,n.A)("row",s),children:a.map(((e,t)=>(0,u.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,u.jsx)(f,{item:e})},t)))})}}}]);