"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[34793],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>d});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},g=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,d=c["".concat(s,".").concat(u)]||c[u]||y[u]||o;return a?r.createElement(d,i(i({ref:t},g),{},{components:a})):r.createElement(d,i({ref:t},g))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},70149:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(58168),n=(a(96540),a(15680));const o={title:"Git",id:"Git",description:"Source Control",sidebar_position:1,tags:["metadata","Git"]},i=void 0,l={unversionedId:"concepts/git/Git",id:"concepts/git/Git",title:"Git",description:"Source Control",source:"@site/docs/concepts/git/git.md",sourceDirName:"concepts/git",slug:"/concepts/git/",permalink:"/concepts/git/",draft:!1,tags:[{label:"metadata",permalink:"/tags/metadata"},{label:"Git",permalink:"/tags/git"}],version:"current",sidebarPosition:1,frontMatter:{title:"Git",id:"Git",description:"Source Control",sidebar_position:1,tags:["metadata","Git"]},sidebar:"mySidebar",previous:{title:"Metadata Connections",permalink:"/concepts/fabrics/metadata-connections"},next:{title:"Merge conflicts",permalink:"/concepts/git/git-resolve"}},s={},p=[{value:"Connect a Git repository",id:"connect-a-git-repository",level:2},{value:"Git workflow",id:"git-workflow",level:2},{value:"Commit",id:"commit",level:3},{value:"Merge",id:"merge",level:3},{value:"Release and Deploy",id:"release-and-deploy",level:3},{value:"Fork per User",id:"fork-per-user",level:2},{value:"What&#39;s next",id:"whats-next",level:2}],g={toc:p},c="wrapper";function y(e){let{components:t,...o}=e;return(0,n.yg)(c,(0,r.A)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Prophecy utilizes Git to align with DevOps practices. Git lets you:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Store your visual pipelines as code."),(0,n.yg)("li",{parentName:"ul"},"Track your Project metadata, including workflows, schedules, datasets, and computed metadata."),(0,n.yg)("li",{parentName:"ul"},"Collaborate on your Projects and perform code reviews."),(0,n.yg)("li",{parentName:"ul"},"Track changes across time.")),(0,n.yg)("h2",{id:"connect-a-git-repository"},"Connect a Git repository"),(0,n.yg)("p",null,"When you create a Project in Prophecy, you must choose an empty Git repository or a path in a repository to host the Project code. You can either choose a Prophecy-managed repository, or connect an external repository."),(0,n.yg)("p",null,"To add a Git account to your Prohecy environment:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Open ",(0,n.yg)("strong",{parentName:"li"},"Settings")," from the more options menu in the left sidebar."),(0,n.yg)("li",{parentName:"ol"},"Select the ",(0,n.yg)("strong",{parentName:"li"},"Git")," tab. You will see any existing Git credentials here, including the Prophecy Managed Git Credentials."),(0,n.yg)("li",{parentName:"ol"},"Click ",(0,n.yg)("strong",{parentName:"li"},"Add new"),"."),(0,n.yg)("li",{parentName:"ol"},"Choose the revelant Git Provider and provide your login details.")),(0,n.yg)("p",null,"You can also enter new Git credentials directly in the Project creation page."),(0,n.yg)("admonition",{type:"info"},(0,n.yg)("p",{parentName:"admonition"},"If you are a member of a GitHub Organization, you may need to ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/en/apps/oauth-apps/using-oauth-apps/authorizing-oauth-apps"},"authorize our application")," to access your organization. This authorization step is necessary to ensure that our application can authenticate the APIs required to access the repositories. Follow the ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/en/organizations/managing-oauth-access-to-your-organizations-data/approving-oauth-apps-for-your-organization"},"approval steps")," to do so."),(0,n.yg)("p",{parentName:"admonition"},"If you encounter any issues during the authorization process or have any questions regarding organization access, please reach out to us at ",(0,n.yg)("a",{parentName:"p",href:"mailto:success@Prophecy.io"},"contact us")," for assistance.")),(0,n.yg)("h2",{id:"git-workflow"},"Git workflow"),(0,n.yg)("h3",{id:"commit"},"Commit"),(0,n.yg)("p",null,"When you make changes to your Pipeline, you need to commit these changes to save them. You can view these changes either visually, or using the ",(0,n.yg)("strong",{parentName:"p"},"Code changes")," view."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"View Git changes",src:a(49925).A,width:"2812",height:"900"})),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},(0,n.yg)("strong",{parentName:"th"},"Feature")),(0,n.yg)("th",{parentName:"tr",align:null},(0,n.yg)("strong",{parentName:"th"},"View")),(0,n.yg)("th",{parentName:"tr",align:null},(0,n.yg)("strong",{parentName:"th"},"Description")))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Branch history"),(0,n.yg)("td",{parentName:"tr",align:null},"Visual"),(0,n.yg)("td",{parentName:"tr",align:null},"Shows previous commits on the branch.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Entities changed"),(0,n.yg)("td",{parentName:"tr",align:null},"Visual"),(0,n.yg)("td",{parentName:"tr",align:null},"Explains which entities were modified")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Code changes toggle"),(0,n.yg)("td",{parentName:"tr",align:null},"Code"),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to view the code differences, with highlighted lines for additions and deletions.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Code changes tab"),(0,n.yg)("td",{parentName:"tr",align:null},"Code"),(0,n.yg)("td",{parentName:"tr",align:null},"Displays all of the files with changes.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Metadata changes tab"),(0,n.yg)("td",{parentName:"tr",align:null},"Code"),(0,n.yg)("td",{parentName:"tr",align:null},"Displays all of the Prophecy metadata files with changes.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Reset"),(0,n.yg)("td",{parentName:"tr",align:null},"Both"),(0,n.yg)("td",{parentName:"tr",align:null},"Reverts the changes.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Commit Message"),(0,n.yg)("td",{parentName:"tr",align:null},"Both"),(0,n.yg)("td",{parentName:"tr",align:null},"Explains the changes that will be saved in this commit.")))),(0,n.yg)("h3",{id:"merge"},"Merge"),(0,n.yg)("p",null,"Once you have commited your changes, you have the ability to ",(0,n.yg)("strong",{parentName:"p"},"merge")," them to a different branch. If you merged your branch in your external repository, you can tell Prophecy that you did so."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Merge branch",src:a(72422).A,width:"2620",height:"1511"})),(0,n.yg)("p",null,"Before merging, if your main branch is ahead of your working branch, you can pull changes from main into your working branch."),(0,n.yg)("p",null,"If you run into merge conflicts, you can ",(0,n.yg)("a",{parentName:"p",href:"git-resolve"},"use the Prophecy interface")," to resolve them."),(0,n.yg)("h3",{id:"release-and-deploy"},"Release and Deploy"),(0,n.yg)("p",null,"Once the changes are merged, we can ",(0,n.yg)("inlineCode",{parentName:"p"},"release")," a branch straight from the UI itself."),(0,n.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174550916-7d8beb20-2013-401d-be30-67c02983958f.mp4",title:"How to release a branch",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.yg)("h2",{id:"fork-per-user"},"Fork per User"),(0,n.yg)("p",null,"When you create a project, you have the option to choose a single repository shared among users, or to ",(0,n.yg)("strong",{parentName:"p"},"Fork per User"),". When you Fork per User, every user gets their own ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo"},"fork")," of the repository."),(0,n.yg)("p",null,"When you fork a repository, you must already have both the upstream repository and a Fork per User repository present."),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("ol",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ol"},"Changes made in forked repository do not effect the upstream repository."),(0,n.yg)("li",{parentName:"ol"},"Please follow the normal Git flow for raising pull requests to the original repository from the forked repository."))),(0,n.yg)("h2",{id:"whats-next"},"What's next"),(0,n.yg)("p",null,"Learn more about how to integrate Git in your Project lifecycle in ",(0,n.yg)("a",{parentName:"p",href:"/ci-cd/deployment/"},"Develop and deploy a Project"),"."))}y.isMDXComponent=!0},49925:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/git-code-changes-28157bfd1f17017c36a36f285eea829e.png"},72422:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/merge-branch-274d2a209d2738a9f5c93371f05f8218.png"}}]);