"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[19120],{20997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ci-cd/git/pr-templates","title":"Pull requests","description":"Open Pull Requests from within Prophecy","source":"@site/docs/ci-cd/git/pull-request-templates.md","sourceDirName":"ci-cd/git","slug":"/engineers/git-pull-requests","permalink":"/engineers/git-pull-requests","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"metadata","permalink":"/tags/metadata"},{"inline":true,"label":"pr","permalink":"/tags/pr"},{"inline":true,"label":"pull requests","permalink":"/tags/pull-requests"},{"inline":true,"label":"git","permalink":"/tags/git"},{"inline":true,"label":"ci/cd","permalink":"/tags/ci-cd"}],"version":"current","frontMatter":{"title":"Pull requests","id":"pr-templates","slug":"/engineers/git-pull-requests","description":"Open Pull Requests from within Prophecy","tags":["metadata","pr","pull requests","git","ci/cd"]},"sidebar":"platformSidebar","previous":{"title":"Resolve conflicts","permalink":"/engineers/resolve-git-conflicts"},"next":{"title":"Best practices","permalink":"/engineers/git-best-practices"}}');var l=n(74848),s=n(28453),a=n(37244),i=n(56778);const o={title:"Pull requests",id:"pr-templates",slug:"/engineers/git-pull-requests",description:"Open Pull Requests from within Prophecy",tags:["metadata","pr","pull requests","git","ci/cd"]},c=void 0,u={},d=[{value:"Enable pull request template",id:"enable-pull-request-template",level:2},{value:"Template examples",id:"template-examples",level:3},{value:"Open pull request in Prophecy",id:"open-pull-request-in-prophecy",level:2},{value:"Set Version Before Merge",id:"set-version-before-merge",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.p,{children:"By default, Prophecy lets you merge changes from a development branch directly into the base branch. This is fast and works well for smaller teams or rapid iteration. However, in larger teams or production environments, you may want more control over how code is reviewed, approved, and integrated. Enabling pull requests allows you to:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Review and approve changes before they are merged"}),"\n",(0,l.jsx)(t.li,{children:"Enforce branch protection rules on repositories like GitHub or Bitbucket"}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"When pull requests are enabled for a project, Prophecy generates a merge URL based on your configured template. This lets you open external pull requests directly within Prophecy projects. This page describes how to enable and use pull requests in more detail."}),"\n",(0,l.jsx)(t.admonition,{type:"note",children:(0,l.jsx)(t.p,{children:"Pull request support is only available for projects connected to an external Git provider. It\u2019s not supported for Prophecy-managed Git."})}),"\n",(0,l.jsx)(t.h2,{id:"enable-pull-request-template",children:"Enable pull request template"}),"\n",(0,l.jsx)(t.p,{children:"To use pull requests in a project, you need to enable pull request templates for that project."}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Open your project metadata."}),"\n",(0,l.jsxs)(t.li,{children:["Open the ",(0,l.jsx)(t.strong,{children:"Settings"})," tab."]}),"\n",(0,l.jsxs)(t.li,{children:["Next to ",(0,l.jsx)(t.strong,{children:"Pull Request Template"}),", toggle on the ",(0,l.jsx)(t.strong,{children:"Enabled"})," button."]}),"\n",(0,l.jsx)(t.li,{children:"Review the template URL."}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"PR template settings",src:n(74752).A+"",width:"2620",height:"1511"})}),"\n",(0,l.jsxs)(t.p,{children:["The PR template URL requires two variables which are used to build a URL string. The ",(0,l.jsx)(t.code,{children:"{{source}}"})," variable represents the active development branch, and the ",(0,l.jsx)(t.code,{children:"{{destination}}"})," variable represents the base branch to which the development branches need to be merged to, like ",(0,l.jsx)(t.code,{children:"main"}),"."]}),"\n",(0,l.jsx)(t.h3,{id:"template-examples",children:"Template examples"}),"\n","\n",(0,l.jsxs)(a.A,{children:[(0,l.jsxs)(i.A,{value:"github",label:"GitHub",children:[(0,l.jsx)(t.p,{children:"Using this template:"}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-shell",children:"https://github.com/exampleOrg/exampleRepo/compare/{{destination}}...{{source}}?expand=1\n"})}),(0,l.jsxs)(t.p,{children:["An example pull request URL generated from the above template for merging a branch named ",(0,l.jsx)(t.code,{children:"feature"}),"\nto branch ",(0,l.jsx)(t.code,{children:"main"})," would look like:"]}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-shell",children:"https://github.com/exampleOrg/exampleRepo/compare/main...feature?expand=1\n"})})]}),(0,l.jsxs)(i.A,{value:"bitbucket",label:"Bitbucket",children:[(0,l.jsx)(t.p,{children:"Using this template:"}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-shell",children:"https://bitbucket.org/exampleOrg/exampleRepo/pull-requests/new?source={{source}}/1&dest={{destination}}\n"})}),(0,l.jsxs)(t.p,{children:["An example pull request URL generated from the above template for merging a branch named ",(0,l.jsx)(t.code,{children:"feature"}),"\nto branch ",(0,l.jsx)(t.code,{children:"main"})," would look like:"]}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-shell",children:"https://bitbucket.org/exampleOrg/exampleRepo/pull-requests/new?source=feature/1&dest=main\n"})})]})]}),"\n",(0,l.jsx)(t.h2,{id:"open-pull-request-in-prophecy",children:"Open pull request in Prophecy"}),"\n",(0,l.jsx)(t.p,{children:"After you have enabled pull requests for a project, you will see the option to create pull requests directly in Prophecy."}),"\n",(0,l.jsx)(t.p,{children:"When you open the Git dialog of a project:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["The ",(0,l.jsx)(t.strong,{children:"Merge"})," step will be replaced by an ",(0,l.jsx)(t.strong,{children:"Open Pull Request"})," step."]}),"\n",(0,l.jsxs)(t.li,{children:["The ",(0,l.jsx)(t.strong,{children:"Open Pull Request"})," button on this screen will open an external pull request in a new tab."]}),"\n"]}),"\n",(0,l.jsx)(t.admonition,{type:"note",children:(0,l.jsxs)(t.p,{children:["If you run into issues, ensure that your PR ",(0,l.jsx)(t.a,{href:"#enable-pull-request-template",children:"template"})," is configured correctly."]})}),"\n",(0,l.jsx)(t.p,{children:"Once you merge the branch remotely in the pull request, you need to let Prophecy know that this step is complete."}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsxs)(t.li,{children:["Return to the ",(0,l.jsx)(t.strong,{children:"Open Pull Request"})," step of the Git dialog."]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.strong,{children:"Merged Externally"}),"."]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.strong,{children:"Confirm"}),"."]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"Merged externally",src:n(82671).A+"",width:"2620",height:"1508"})}),"\n",(0,l.jsx)(t.h2,{id:"set-version-before-merge",children:"Set Version Before Merge"}),"\n",(0,l.jsxs)(t.p,{children:["When your base branch (such as ",(0,l.jsx)(t.code,{children:"main"}),") is protected, direct commits are not allowed. This can interfere with release processes that rely on version bumps made directly on the main branch after merging."]}),"\n",(0,l.jsxs)(t.p,{children:["To support these workflows, Prophecy now allows you to set the next version ",(0,l.jsx)(t.strong,{children:"before"})," merging your development branch."]}),"\n",(0,l.jsxs)(t.p,{children:["When ",(0,l.jsx)(t.strong,{children:"Pull Request Template"})," is enabled for a project:"]}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsxs)(t.li,{children:["In the ",(0,l.jsx)(t.strong,{children:"Git"})," dialog, go to the ",(0,l.jsx)(t.strong,{children:"Open Pull Request"})," step."]}),"\n",(0,l.jsxs)(t.li,{children:["Select the ",(0,l.jsx)(t.strong,{children:"Incremental Project Version"})," checkbox."]}),"\n",(0,l.jsx)(t.li,{children:"Select a version or type a new version. This sets the version of your development branch."}),"\n",(0,l.jsx)(t.li,{children:"Open the pull request and merge your changes. The base branch now has the correct version."}),"\n"]}),"\n",(0,l.jsxs)(t.p,{children:["Once merged, Prophecy will auto-fill the release version on the ",(0,l.jsx)(t.strong,{children:"Release"})," screen of the Git dialog based on the version you set. You can directly proceed to release and no additional changes will be committed to the base branch."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const l={},s=r.createContext(l);function a(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},37244:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(96540),l=n(18215),s=n(44319),a=n(56347),i=n(94280),o=n(73024),c=n(58417),u=n(44031);function d(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return d(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function h({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const n=(0,a.W6)(),l=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,o.aZ)(l),(0,r.useCallback)(e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})},[l,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:l}=e,s=p(e),[a,o]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s})),[c,d]=m({queryString:n,groupId:l}),[g,b]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,l]=(0,u.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&l.set(e)},[t,l])]}({groupId:l}),x=(()=>{const e=c??g;return h({value:e,tabValues:s})?e:null})();(0,i.A)(()=>{x&&o(x)},[x]);return{selectedValue:a,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)},[d,b,s]),tabValues:s}}var b=n(46916);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(74848);function j({className:e,block:t,selectedValue:n,selectValue:r,tabValues:a}){const i=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const t=e.currentTarget,l=i.indexOf(t),s=a[l].value;s!==n&&(o(t),r(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},e),children:a.map(({value:e,label:t,attributes:r})=>(0,f.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:u,onClick:c,...r,className:(0,l.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:n}){const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function y(e){const t=g(e);return(0,f.jsxs)("div",{className:(0,l.A)("tabs-container",x.tabList),children:[(0,f.jsx)(j,{...t,...e}),(0,f.jsx)(v,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,f.jsx)(y,{...e,children:d(e.children)},String(t))}},56778:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var r=n(18215);const l={tabItem:"tabItem_Ymn6"};var s=n(74848);function a({children:e,hidden:t,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,n),hidden:t,children:e})}},74752:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/pbt-template-advanced-e304a2e6388a41d05d6cf20f2304b1d7.png"},82671:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/merge-externally-889808cc62d24760e6253f40449f7ab1.png"}}]);