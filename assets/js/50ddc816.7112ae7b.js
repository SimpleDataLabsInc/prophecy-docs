"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[50616],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>m});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,m=p["".concat(s,".").concat(d)]||p[d]||g[d]||l;return a?n.createElement(m,i(i({ref:t},c),{},{components:a})):n.createElement(m,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>i});var n=a(96540),r=a(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,i),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>w});var n=a(58168),r=a(96540),l=a(20053),i=a(23104),o=a(56347),s=a(57485),u=a(31682),c=a(89466);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function g(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.W6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=g(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,u]=m({queryString:a,groupId:n}),[p,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,c.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=s??p;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),y(e)}),[u,y,l]),tabValues:l}}var h=a(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.a_)(),g=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==o&&(p(t),s(n))},d=e=>{let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:g},i,{className:(0,l.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function x(e){const t=y(e);return r.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},r.createElement(f,(0,n.A)({},e,t)),r.createElement(v,(0,n.A)({},e,t)))}function w(e){const t=(0,h.A)();return r.createElement(x,(0,n.A)({key:String(t)},e))}},62363:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var n=a(58168),r=(a(96540),a(15680)),l=a(11470),i=a(19365);const o={title:"TextProcessing",id:"ml-text-processing",description:"Text processing to prepare data to submit to a foundational model API.",tags:["generative-ai","machine-learning","llm","text-processing","web-scraping","chunk","extract"]},s=void 0,u={unversionedId:"Spark/gems/machine-learning/ml-text-processing",id:"Spark/gems/machine-learning/ml-text-processing",title:"TextProcessing",description:"Text processing to prepare data to submit to a foundational model API.",source:"@site/docs/Spark/gems/machine-learning/ml-text-processing.md",sourceDirName:"Spark/gems/machine-learning",slug:"/Spark/gems/machine-learning/ml-text-processing",permalink:"/Spark/gems/machine-learning/ml-text-processing",draft:!1,tags:[{label:"generative-ai",permalink:"/tags/generative-ai"},{label:"machine-learning",permalink:"/tags/machine-learning"},{label:"llm",permalink:"/tags/llm"},{label:"text-processing",permalink:"/tags/text-processing"},{label:"web-scraping",permalink:"/tags/web-scraping"},{label:"chunk",permalink:"/tags/chunk"},{label:"extract",permalink:"/tags/extract"}],version:"current",frontMatter:{title:"TextProcessing",id:"ml-text-processing",description:"Text processing to prepare data to submit to a foundational model API.",tags:["generative-ai","machine-learning","llm","text-processing","web-scraping","chunk","extract"]},sidebar:"mySidebar",previous:{title:"PineconeLookup",permalink:"/Spark/gems/machine-learning/ml-pinecone-lookup"},next:{title:"Custom",permalink:"/Spark/gems/custom/"}},c={},p=[{value:"1. Load web URLs and Extract Text",id:"1-load-web-urls-and-extract-text",level:3},{value:"1a. Configure web scrape",id:"1a-configure-web-scrape",level:4},{value:"1b. Input",id:"1b-input",level:4},{value:"1c. Output",id:"1c-output",level:4},{value:"1d. Generated Code",id:"1d-generated-code",level:4},{value:"2. Split text data into equal chunks",id:"2-split-text-data-into-equal-chunks",level:3},{value:"2a. Configure text splitting",id:"2a-configure-text-splitting",level:4},{value:"2b. Input",id:"2b-input",level:4},{value:"2c. Output",id:"2c-output",level:4},{value:"2d. Generated code",id:"2d-generated-code",level:4},{value:"FAQ",id:"faq",level:3},{value:"Troubleshooting",id:"troubleshooting",level:4}],g={toc:p},d="wrapper";function m(e){let{components:t,...o}=e;return(0,r.yg)(d,(0,n.A)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h3",null,(0,r.yg)("span",{class:"badge"},"Spark Gem")),(0,r.yg)("p",null,"The TextProcessing Gem enables text data preparation for machine learning in two different ways:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("a",{parentName:"li",href:"/Spark/gems/machine-learning/ml-text-processing#1-load-web-urls-and-extract-text"},"Load")," web URLs and extract text."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("a",{parentName:"li",href:"/Spark/gems/machine-learning/ml-text-processing#2-split-text-data-into-equal-chunks"},"Split")," text data into equal chunks.")),(0,r.yg)("p",null,"Follow along to see how to use the TextProcessing Gem. For an example set of Pipelines that uses this Gem to create a Generative AI Chatbot, see this ",(0,r.yg)("a",{parentName:"p",href:"/getting-started/gen-ai-chatbot"},"guide.")),(0,r.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,r.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,r.yg)("iframe",{src:"https://fast.wistia.net/embed/iframe/7v6y4ldt5x?seo=false?videoFoam=true",title:"Getting Started With SQL Video",allow:"autoplay; fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,r.yg)("script",{src:"https://fast.wistia.net/assets/external/E-v1.js",async:!0}),(0,r.yg)("br",null),(0,r.yg)("h3",{id:"1-load-web-urls-and-extract-text"},"1. Load web URLs and Extract Text"),(0,r.yg)("p",null,"Given a column with web URLs, the ",(0,r.yg)("inlineCode",{parentName:"p"},"Load web URLs")," operation will scrape the content from each URL, and output the content as a binary format or as a human readable text format, depending on the operation type selected. The figure below shows the ",(0,r.yg)("inlineCode",{parentName:"p"},"Load web URL and Extract Text")," operation."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Overview web scrape and extract text",src:a(11959).A,width:"2376",height:"934"})),(0,r.yg)("h4",{id:"1a-configure-web-scrape"},"1a. Configure web scrape"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Configure to web scrape",src:a(56144).A,width:"2880",height:"1726"})),(0,r.yg)("p",null,"Configure the ",(0,r.yg)("strong",{parentName:"p"},"(1) Operation Type")," to Load url (web scrape), and optionally extract the text. Specify which input ",(0,r.yg)("strong",{parentName:"p"},"(2) Column name")," contains the web urls. If the ",(0,r.yg)("inlineCode",{parentName:"p"},"extract text")," operation is selected, the text will be converted from binary to human readable format. When would you want to use the binary format? Binary web scraping is useful for downloading content including images or archived documents."),(0,r.yg)("h4",{id:"1b-input"},"1b. Input"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Required"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column name (string with urls)"),(0,r.yg)("td",{parentName:"tr",align:null},"string - the input column which contains the strings of web URLs"),(0,r.yg)("td",{parentName:"tr",align:null},"True")))),(0,r.yg)("h4",{id:"1c-output"},"1c. Output"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Result content ",(0,r.yg)("inlineCode",{parentName:"td"},"Load url (web scrape)")),(0,r.yg)("td",{parentName:"tr",align:null},"binary - the contents of each web page")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Result content ",(0,r.yg)("inlineCode",{parentName:"td"},"Load url (web scrape) and extract text")),(0,r.yg)("td",{parentName:"tr",align:null},"string - the contents of each web page, converted from binary to human readable text")))),(0,r.yg)("h4",{id:"1d-generated-code"},"1d. Generated Code"),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},'def scrape_pages(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    from pyspark.sql.functions import expr, array, struct\n    from spark_ai.webapps import WebUtils\n    WebUtils().register_udfs(spark)\n\n    return in0.withColumn("result_content", expr(f"web_scrape(loc)"))\n'))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"[Not yet supported]\n")))),(0,r.yg)("h3",{id:"2-split-text-data-into-equal-chunks"},"2. Split text data into equal chunks"),(0,r.yg)("p",null,'Sometimes you\'d like to send text data to a foundational model or store in a vector database, but the text is too long. For this case, just split the text into "chunks" of characters.'),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Overview Chunkify",src:a(48382).A,width:"2376",height:"814"})),(0,r.yg)("h4",{id:"2a-configure-text-splitting"},"2a. Configure text splitting"),(0,r.yg)("p",null,"Given a text input, the ",(0,r.yg)("inlineCode",{parentName:"p"},"Split data")," operation will separate the input column entries into chunks of specified ",(0,r.yg)("inlineCode",{parentName:"p"},"size"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Configure to Chunkify",src:a(2125).A,width:"2880",height:"1726"})),(0,r.yg)("p",null,"Select the ",(0,r.yg)("strong",{parentName:"p"},"(1) Operation type")," to split text into equal chunks. Specify which input ",(0,r.yg)("strong",{parentName:"p"},"(2) Column name")," contains the relevant content. Specify an integer chunk ",(0,r.yg)("strong",{parentName:"p"},"(3) Size")," relevant for your generative AI use case."),(0,r.yg)("h4",{id:"2b-input"},"2b. Input"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Required"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column name"),(0,r.yg)("td",{parentName:"tr",align:null},"string - the text content which should be split into equal chunks"),(0,r.yg)("td",{parentName:"tr",align:null},"True")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Size"),(0,r.yg)("td",{parentName:"tr",align:null},"integer - the size of each chunk, number of characters. Example: ",(0,r.yg)("inlineCode",{parentName:"td"},"1000")),(0,r.yg)("td",{parentName:"tr",align:null},"True")))),(0,r.yg)("h4",{id:"2c-output"},"2c. Output"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"result_chunks"),(0,r.yg)("td",{parentName:"tr",align:null},"array(string) - an array of text strings, each string representing one chunk of the larger text content")))),(0,r.yg)("h4",{id:"2d-generated-code"},"2d. Generated code"),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},'def Chunkify(spark: SparkSession, web_bronze_content: DataFrame) -> DataFrame:\n    from pyspark.sql.functions import expr, array, struct\n    from spark_ai.files.text import FileTextUtils\n    FileTextUtils().register_udfs(spark)\n\n    return web_bronze_content.withColumn("result_chunks", expr(f"text_split_into_chunks(content, 1000)"))\n'))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"[Not yet supported]\n")))),(0,r.yg)("h3",{id:"faq"},"FAQ"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"How does this Gem fit into the bigger picture of building a generative AI application?")),(0,r.yg)("p",null,"For an example set of Pipelines that uses this Gem to create a Generative AI Chatbot, see this ",(0,r.yg)("a",{parentName:"p",href:"/getting-started/gen-ai-chatbot"},"guide.")," Feel free to ",(0,r.yg)("a",{parentName:"p",href:"https://www.prophecy.io/request-a-demo"},"reach out")," and explore your use case with us."),(0,r.yg)("h4",{id:"troubleshooting"},"Troubleshooting"),(0,r.yg)("p",null,"Select a chunk size according to the limitations of your vector database index."))}m.isMDXComponent=!0},2125:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/ml-text-proc-configure-chunkify-d99e640e07f1831c369ad80aa09339d2.png"},48382:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/ml-text-proc-overview-chunkify-c7292b08f77cc25d9899ef1c0fc88c4f.png"},56144:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/ml-text-proc-scrape-configure-3fc90ca55df1009a84cc9e5a5752eeb6.png"},11959:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/ml-text-proc-scrape-extract-overview-34f31e4baf8a155a7537eb20431d08ac.png"}}]);