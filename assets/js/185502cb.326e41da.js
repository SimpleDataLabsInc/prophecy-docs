"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[80863],{28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>d});var n=s(96540);const i={},o=n.createContext(i);function l(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(o.Provider,{value:t},e.children)}},30306:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"analysts/development/models/models","title":"Models","description":"SQL models define a single target table or view","source":"@site/docs/analysts/development/models/models.md","sourceDirName":"analysts/development/models","slug":"/engineers/models","permalink":"/engineers/models","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"concepts","permalink":"/tags/concepts"},{"inline":true,"label":"Models","permalink":"/tags/models"},{"inline":true,"label":"sql","permalink":"/tags/sql"},{"inline":true,"label":"target","permalink":"/tags/target"}],"version":"current","frontMatter":{"title":"Models","id":"models","slug":"/engineers/models","description":"SQL models define a single target table or view","tags":["concepts","Models","sql","target"]},"sidebar":"mySidebar","previous":{"title":"Best practices","permalink":"/engineers/project-best-practices"},"next":{"title":"Model sources and targets","permalink":"/engineers/model-sources-and-targets"}}');var i=s(74848),o=s(28453);const l={title:"Models",id:"models",slug:"/engineers/models",description:"SQL models define a single target table or view",tags:["concepts","Models","sql","target"]},d=void 0,r={},a=[{value:"Create models",id:"create-models",level:2},{value:"Compatible gems",id:"compatible-gems",level:2},{value:"Advanced settings",id:"advanced-settings",level:2},{value:"Schedule models",id:"schedule-models",level:2},{value:"Models vs pipelines",id:"models-vs-pipelines",level:2},{value:"Show underlying models",id:"show-underlying-models",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["In Prophecy, a model comprises a set of gems that process data into one output. In other words, each model corresponds to a ",(0,i.jsx)(t.strong,{children:"single table"})," in your database."]}),"\n",(0,i.jsx)(t.p,{children:"Models leverage the dbt build system and can run on either SQL fabrics or Prophecy fabrics. To work with the dbt build, Prophecy saves each visual model as a SQL file in your project repository in Git. Prophecy\u2019s visual interface supports SQL models only; if you\u2019d like to define Python models, you must do so using the code interface."}),"\n",(0,i.jsx)(t.h2,{id:"create-models",children:"Create models"}),"\n",(0,i.jsx)(t.p,{children:"To add a new model to your project:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Open your project in the project editor."}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"+ Add Entity"})," from the bottom of the ",(0,i.jsx)(t.strong,{children:"Project"})," tab in the left sidebar."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Model"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["In the Add Model dialog, add a ",(0,i.jsx)(t.strong,{children:"Model Name"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Review the path where the model will be saved in the project repository. In most cases, the default ",(0,i.jsx)(t.code,{children:"model"})," path is sufficient."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Create"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This opens a new model canvas that is prepopulated with a target model. Note that the dbt framework restricts models to one target output."}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"While you can develop models visually using gems, you can also write models directly in the code view, which is automatically synced with the visual view."})}),"\n",(0,i.jsx)(t.h2,{id:"compatible-gems",children:"Compatible gems"}),"\n",(0,i.jsx)(t.p,{children:"Each gem in a model maps to a SQL statement. As you configure gems on the visual canvas, Prophecy automatically generates the corresponding SQL, determines whether to use a CTE or subquery for each step, and integrates your changes into the overall model."}),"\n",(0,i.jsxs)(t.p,{children:["Models run exclusively in your SQL warehouse and can only use gems supported in that environment. Gems that can run in SQL are marked with the following badge: ",(0,i.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,i.jsx)("span",{className:"badge badge-runtime",children:"SQL Warehouse"})})]}),"\n",(0,i.jsx)(t.h2,{id:"advanced-settings",children:"Advanced settings"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"Advanced Settings"})," dialog lets you set dbt configurations at the project, folder, or model level. Each setting corresponds to standard dbt configurations, typically defined in a dbt project ",(0,i.jsx)(t.a,{href:"https://docs.getdbt.com/docs/build/projects#project-configuration",children:"YAML file"}),". They cover properties such as materialization behavior, physical storage, metadata, and access controls."]}),"\n",(0,i.jsx)(t.p,{children:"Some settings reflect properties found in the target model gem. When you update a setting through the Advanced Settings panel, it automatically syncs with the corresponding target model gem when relevant."}),"\n",(0,i.jsx)(t.p,{children:"To open the Advanced Settings:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"..."})," from the project header."]}),"\n",(0,i.jsxs)(t.li,{children:["Select ",(0,i.jsx)(t.strong,{children:"Advanced Settings"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Choose to edit the Project Settings, Folder Settings, or Model Settings."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Advanced Settings",src:s(70282).A+"",width:"2702",height:"948"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Folder Settings only apply to directories that contain models."})}),"\n",(0,i.jsx)(t.h2,{id:"schedule-models",children:"Schedule models"}),"\n",(0,i.jsxs)(t.p,{children:["To schedule model execution, set up ",(0,i.jsx)(t.a,{href:"/engineers/databricks-jobs",children:"Databricks Jobs"})," or Apache Airflow DAGs directly within Prophecy. Models can only be scheduled on ",(0,i.jsx)(t.a,{href:"/administration/project-types/",children:"Analytics Engineer"})," projects."]}),"\n",(0,i.jsx)(t.h2,{id:"models-vs-pipelines",children:"Models vs pipelines"}),"\n",(0,i.jsx)(t.p,{children:"Models and pipelines are two different SQL project components. The following table describes the key differences between models and pipelines."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Feature"}),(0,i.jsx)(t.th,{children:"Models"}),(0,i.jsx)(t.th,{children:"Pipelines"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Execution Engine"}),(0,i.jsx)(t.td,{children:"Models run entirely on the SQL Warehouse."}),(0,i.jsx)(t.td,{children:"Pipelines run on the SQL Warehouse and can also use Prophecy Automate."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Supported Gems"}),(0,i.jsx)(t.td,{children:"Models support only gems that execute within the SQL Warehouse."}),(0,i.jsx)(t.td,{children:"Pipelines support additional gems that run in Prophecy Automate, such as the Email or REST API gem."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Data Sources"}),(0,i.jsx)(t.td,{children:"Models can only use native tables/models as sources and targets."}),(0,i.jsx)(t.td,{children:"Pipelines can use both native tables/models and external data sources."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Outputs"}),(0,i.jsx)(t.td,{children:"Models are limited to a single output."}),(0,i.jsx)(t.td,{children:"Pipelines can write multiple outputs."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Orchestration"}),(0,i.jsx)(t.td,{children:"Models must be orchestrated using Databricks Jobs or Airflow."}),(0,i.jsx)(t.td,{children:"Pipelines can be orchestrated externally or natively using Prophecy Automate."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Exportability"}),(0,i.jsx)(t.td,{children:"Models generate SQL code that can be run outside of Prophecy."}),(0,i.jsx)(t.td,{children:"Pipelines that include Prophecy Automate gems cannot be run outside of Prophecy."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"show-underlying-models",children:"Show underlying models"}),"\n",(0,i.jsxs)(t.p,{children:["Many visual transformations in pipelines are compiled into models under the hood. If you are working on a pipeline, you can view and edit the code of ",(0,i.jsx)(t.a,{href:"/analysts/pipeline-execution#execution-environment",children:"underlying dbt models"})," in a pipeline. However, you cannot visually edit these underlying models."]}),"\n",(0,i.jsxs)(t.p,{children:["To view these models, select ",(0,i.jsx)(t.strong,{children:"Show Models"})," from the ",(0,i.jsx)(t.strong,{children:"..."})," menu in the left sidebar of a project."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Show Models",src:s(66669).A+"",width:"2874",height:"1608"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},66669:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/show-models-40c624ffcc2ad45dda4c25ed52fcf0b2.png"},70282:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/advanced-settings-dbt-433535d2d39a3da319557b2ab8aef006.png"}}]);