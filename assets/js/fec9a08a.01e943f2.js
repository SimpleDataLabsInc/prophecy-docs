"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[31902],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>g});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return a?n.createElement(g,i(i({ref:t},u),{},{components:a})):n.createElement(g,i({ref:t},u))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>i});var n=a(96540),r=a(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,i),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>A});var n=a(58168),r=a(96540),l=a(20053),i=a(23104),o=a(56347),s=a(57485),p=a(31682),u=a(89466);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.W6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,p]=g({queryString:a,groupId:n}),[c,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,u.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),f=(()=>{const e=s??c;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),y(e)}),[p,y,l]),tabValues:l}}var f=a(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),m=e=>{const t=e.currentTarget,a=u.indexOf(t),n=p[a].value;n!==o&&(c(t),s(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},i,{className:(0,l.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function N(e){const t=y(e);return r.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},r.createElement(h,(0,n.A)({},e,t)),r.createElement(v,(0,n.A)({},e,t)))}function A(e){const t=(0,f.A)();return r.createElement(N,(0,n.A)({key:String(t)},e))}},73330:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=a(58168),r=(a(96540),a(15680)),l=a(11470),i=a(19365);const o={sidebar_position:8,title:"SetOperation",id:"set-operation",description:"Union, Intersect and Difference",tags:["gems","set","union","intersect","difference"]},s=void 0,p={unversionedId:"Spark/gems/transform/set-operation",id:"Spark/gems/transform/set-operation",title:"SetOperation",description:"Union, Intersect and Difference",source:"@site/docs/Spark/gems/transform/set-operation.md",sourceDirName:"Spark/gems/transform",slug:"/Spark/gems/transform/set-operation",permalink:"/Spark/gems/transform/set-operation",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"set",permalink:"/tags/set"},{label:"union",permalink:"/tags/union"},{label:"intersect",permalink:"/tags/intersect"},{label:"difference",permalink:"/tags/difference"}],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"SetOperation",id:"set-operation",description:"Union, Intersect and Difference",tags:["gems","set","union","intersect","difference"]},sidebar:"defaultSidebar",previous:{title:"Deduplicate",permalink:"/Spark/gems/transform/deduplicate"},next:{title:"WindowFunction",permalink:"/Spark/gems/transform/window-function"}},u={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3},{value:"Operation Type - <code>Union</code>",id:"operation-type---union",level:4},{value:"Operation Type - <code>Intersect All</code>",id:"operation-type---intersect-all",level:4},{value:"Operation Type - <code>Except All</code>",id:"operation-type---except-all",level:4}],m={toc:c},d="wrapper";function g(e){let{components:t,...o}=e;return(0,r.yg)(d,(0,n.A)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Use the SetOperation Gem to perform addition or subtraction of rows from DataFrames with identical schemas and different data."),(0,r.yg)("h3",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame 1"),(0,r.yg)("td",{parentName:"tr",align:"left"},"First input DataFrame"),(0,r.yg)("td",{parentName:"tr",align:"left"},"True")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame 2"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Second input DataFrame"),(0,r.yg)("td",{parentName:"tr",align:"left"},"True")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame N"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Nth input DataFrame"),(0,r.yg)("td",{parentName:"tr",align:"left"},"False")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Operation type"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Operation to perform",(0,r.yg)("br",null),"- ",(0,r.yg)("inlineCode",{parentName:"td"},"Union"),": Returns a DataFrame containing rows in any one of the input DataFrames, while preserving duplicates.",(0,r.yg)("br",null),"- ",(0,r.yg)("inlineCode",{parentName:"td"},"Intersect All"),": Returns a DataFrame containing rows in all of the input DataFrames, while preserving duplicates. ",(0,r.yg)("br",null),"- ",(0,r.yg)("inlineCode",{parentName:"td"},"Except All"),": Returns a DataFrames containing rows in the first DataFrame, but not in the other DataFrames, while preserving duplicates."),(0,r.yg)("td",{parentName:"tr",align:"left"},"True")))),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"To add more input DataFrames, simply click ",(0,r.yg)("inlineCode",{parentName:"p"},"+")," icon on the left sidebar\n",(0,r.yg)("img",{alt:"Set Operation - Add input dataframe",src:a(45740).A,width:"556",height:"136"}))),(0,r.yg)("h3",{id:"examples"},"Examples"),(0,r.yg)("hr",null),(0,r.yg)("h4",{id:"operation-type---union"},"Operation Type - ",(0,r.yg)("inlineCode",{parentName:"h4"},"Union")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of Set Operation - Union",src:a(43483).A,width:"1798",height:"904"})),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"def union(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0.unionAll(in1)\n"))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"object union {\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0.unionAll(in1)\n}\n")))),(0,r.yg)("hr",null),(0,r.yg)("h4",{id:"operation-type---intersect-all"},"Operation Type - ",(0,r.yg)("inlineCode",{parentName:"h4"},"Intersect All")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of Set Operation - Intersect All",src:a(62272).A,width:"1822",height:"868"})),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"def intersectAll(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0.intersectAll(in1)\n"))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"object intersectAll {\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0.intersectAll(in1)\n}\n")))),(0,r.yg)("hr",null),(0,r.yg)("h4",{id:"operation-type---except-all"},"Operation Type - ",(0,r.yg)("inlineCode",{parentName:"h4"},"Except All")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of Set Operation - Except All",src:a(86473).A,width:"1812",height:"783"})),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"def exceptAll(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0.exceptAll(in1)\n"))),(0,r.yg)(i.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"object exceptAll {\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0.exceptAll(in1)\n}\n")))))}g.isMDXComponent=!0},45740:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/set_add_inputs-bdf7b6691fc473ea1eee60161a5b9786.png"},43483:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/set_eg_1-46701e21c8cebc491888db3d556e8345.png"},62272:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/set_eg_2-fe430fbd13a44d729c0c0ef00e7ca2d9.png"},86473:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/set_eg_3-5ad43a57037f0e1ada3b964fcf2934a7.png"}}]);