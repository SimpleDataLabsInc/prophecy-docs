"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[4245],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return a?n.createElement(f,l(l({ref:t},c),{},{components:a})):n.createElement(f,l({ref:t},c))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(67294),r=a(86010);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,l),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>x});var n=a(87462),r=a(67294),i=a(86010),l=a(12466),o=a(16550),s=a(91980),u=a(67392),c=a(50012);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=d(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[s,u]=f({queryString:a,groupId:n}),[p,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),h=(()=>{const e=s??p;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var h=a(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==o&&(p(t),s(n))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},l,{className:(0,i.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":o===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function x(e){const t=(0,h.Z)();return r.createElement(w,(0,n.Z)({key:String(t)},e))}},17651:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),i=a(74866),l=a(85162);const o={title:"Working with XLSX (Excel) files",id:"working-with-excel",description:"Explore the basics of working with XLSX (Excel) files with Prophecy",sidebar_position:1,tags:["gems","devops","file","tutorial","xlsx"]},s=void 0,u={unversionedId:"tutorials/low-code-spark/working-with-excel",id:"tutorials/low-code-spark/working-with-excel",title:"Working with XLSX (Excel) files",description:"Explore the basics of working with XLSX (Excel) files with Prophecy",source:"@site/docs/tutorials/low-code-spark/excel.md",sourceDirName:"tutorials/low-code-spark",slug:"/tutorials/low-code-spark/working-with-excel",permalink:"/tutorials/low-code-spark/working-with-excel",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"devops",permalink:"/tags/devops"},{label:"file",permalink:"/tags/file"},{label:"tutorial",permalink:"/tags/tutorial"},{label:"xlsx",permalink:"/tags/xlsx"}],version:"current",sidebarPosition:1,frontMatter:{title:"Working with XLSX (Excel) files",id:"working-with-excel",description:"Explore the basics of working with XLSX (Excel) files with Prophecy",sidebar_position:1,tags:["gems","devops","file","tutorial","xlsx"]},sidebar:"defaultSidebar",previous:{title:"Low-code Spark",permalink:"/category/low-code-spark"},next:{title:"Video Tutorials",permalink:"/category/video-tutorials"}},c={},p=[{value:"Reading XLSX files",id:"reading-xlsx-files",level:2},{value:"Writing XLSX files",id:"writing-xlsx-files",level:2},{value:"Writing a single output file",id:"writing-a-single-output-file",level:3}],d={toc:p},m="wrapper";function f(e){let{components:t,...o}=e;return(0,r.kt)(m,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you've worked with numbers in your day-to-day operations, odds are you've run into a need to use Excel at one point or another. This tutorial is going to cover the two most basic scenarios: Reading and Writing."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For a full list of options supported by Prophecy when interacting with Excel files ",(0,r.kt)("a",{parentName:"p",href:"/low-code-spark/gems/source-target/file/xlsx"},"see here"))),(0,r.kt)("h2",{id:"reading-xlsx-files"},"Reading XLSX files"),(0,r.kt)("p",null,"Reading an Excel file is quite easy in Prophecy! Simply follow these steps to create a new XLSX source."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Select the XLSX format ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Select XLSX source type",src:a(15085).Z,width:"3202",height:"2002"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Navigate to the desired XLSX source file ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Navigate to XLSX source file",src:a(20269).Z,width:"3044",height:"2000"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Customize any properties you might need and tweak the schema to your liking ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Adjust parameters and schema",src:a(63909).Z,width:"3032",height:"1998"})," ",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Preview the file and double-check that the schema matches your intentions ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Preview the input file",src:a(11281).Z,width:"3036",height:"1998"}))),(0,r.kt)("p",null,"Once the ",(0,r.kt)("inlineCode",{parentName:"p"},"Source")," Gem is created and validation passes you'll be able to find the code of your new ",(0,r.kt)("inlineCode",{parentName:"p"},"Source")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"graph")," directory of your Pipeline code."),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def Source_0(spark: SparkSession) -> DataFrame:\n    if Config.fabricName == "demos":\n        return spark.read\\\n            .format("excel")\\\n            .option("header", True)\\\n            .option("dataAddress", "A1")\\\n            .option("inferSchema", True)\\\n            .load("dbfs:/FileStore/Users/scott/plain_number.xlsx")\n    else:\n        raise Exception("No valid dataset present to read fabric")\n\n')))),(0,r.kt)("h2",{id:"writing-xlsx-files"},"Writing XLSX files"),(0,r.kt)("p",null,"Writing an Excel file is just as easy, with only one small caveat to be discussed after. Let's look at an example Pipeline with an XLSX output target:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Sample Pipeline with XLSX output",src:a(3496).Z,width:"1616",height:"774"})),(0,r.kt)("p",null,"In this scenario we're building a report of spending by customer and want an XLSX file as output."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Select the XLSX format ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Select the XLSX target type",src:a(15409).Z,width:"2640",height:"1386"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Navigate to the target location ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Select destination filename",src:a(57352).Z,width:"2818",height:"444"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Customize any properties needed when writing the output file ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Set output parameters",src:a(69515).Z,width:"2776",height:"1026"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Run the Pipeline!")),(0,r.kt)("p",null,"Once the ",(0,r.kt)("inlineCode",{parentName:"p"},"Target")," Gem is created and validation passes you'll be able to find the code of your new ",(0,r.kt)("inlineCode",{parentName:"p"},"Target")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"graph")," directory of your Pipeline code."),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def ExcelTarget(spark: SparkSession, in0: DataFrame):\n    if Config.fabricName == "demos":\n        in0.write\\\n            .format("excel")\\\n            .option("header", True)\\\n            .option("dataAddress", "A1")\\\n            .option("usePlainNumberFormat", False)\\\n            .mode("overwrite")\\\n            .save("dbfs:/FileStore/Users/scott/customers.xlsx")\n    else:\n        raise Exception("No valid dataset present to read fabric")\n')))),(0,r.kt)("h3",{id:"writing-a-single-output-file"},"Writing a single output file"),(0,r.kt)("p",null,"As mentioned above, there's a caveat when working with any text-based files in Spark. Because of the distributed nature of the framework, you'll find that your output file is not just a single output file but instead a directory with multiple separately partitioned files within it."),(0,r.kt)("p",null,"For example, using ",(0,r.kt)("inlineCode",{parentName:"p"},"dbfs:/FileStore/Users/scott/customers.xlsx")," as my Target location I can see the following in DBFS after running my Pipeline:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"customers.xlsx")," is, in reality, a directory...",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Target output is a directory",src:a(84299).Z,width:"796",height:"49"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"... that contains multiple partitions within it",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Target output is partitioned",src:a(46451).Z,width:"958",height:"263"}),(0,r.kt)("br",null))),(0,r.kt)("p",null,"Each file within this directory will be a separate valid XLSX file with a segment of the overall output data. If you want to output only a single file, you'll need to change your Pipeline as such:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add a ",(0,r.kt)("inlineCode",{parentName:"li"},"Repartition")," Gem in ",(0,r.kt)("inlineCode",{parentName:"li"},"Coalesce")," mode with the ",(0,r.kt)("inlineCode",{parentName:"li"},"Partition Count")," set to ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),". ",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Coalesce using Repartition",src:a(49847).Z,width:"2870",height:"1678"}),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},"Connect it between your second-to-last transformation and the ",(0,r.kt)("inlineCode",{parentName:"li"},"Target")," Gem",(0,r.kt)("br",null),(0,r.kt)("img",{alt:"Attach coalesce before desired target",src:a(7906).Z,width:"1906",height:"882"}),(0,r.kt)("br",null))),(0,r.kt)("p",null,"After running, your output will still be a directory, but this time it will only contain a single output file."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Single output after coalesce",src:a(4808).Z,width:"970",height:"120"})))}f.isMDXComponent=!0},15085:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_src_1-5313bccdece9c6a651be172d88ca7122.png"},20269:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_src_2-ef0f8a6104489d61311eeb07ee0e742a.png"},63909:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_src_3-051d6b07ccd8fa67b6f3740f0ab0461c.png"},11281:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_src_4-e283c92a4500361b25e90491c58fa4f7.png"},3496:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_0-a3c18689dca6634c76c38ecd6cd7b35a.png"},15409:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_1-3785e5869cbe8ce3b209f9bb639da7cd.png"},57352:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_2-2942acb3a7922b6739d852f441068d27.png"},69515:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_3-a28bf175888719e996d707cd3b12fed9.png"},84299:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_4-7d10b8bb4ee57b8b856ca7e92ace22a3.png"},49847:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_5.5-1f42007802b75662fd2128729bf05f6a.png"},46451:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_5-b236d1298d654ebd04ce3ed957b9d766.png"},7906:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_6-4fcf34461fd56bcf2dd36f29bb3b223a.png"},4808:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xlsx_tgt_7-f67147547149a66b6636ee0a2933726c.png"}}]);