"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[59811],{28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>l});var r=a(96540);const s={},n=r.createContext(s);function i(e){const t=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(n.Provider,{value:t},e.children)}},37244:(e,t,a)=>{a.d(t,{A:()=>k});var r=a(96540),s=a(18215),n=a(44319),i=a(56347),l=a(94280),c=a(73024),o=a(58417),d=a(44031);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return u(e).map(({props:{value:e,label:t,attributes:a,default:r}})=>({value:e,label:t,attributes:a,default:r}))}(a);return function(e){const t=(0,o.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,a])}function h({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const a=(0,i.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})},[s,a])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:s}=e,n=p(e),[i,c]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find(e=>e.default)??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:n})),[o,u]=m({queryString:a,groupId:s}),[b,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,s]=(0,d.Dv)(t);return[a,(0,r.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:s}),f=(()=>{const e=o??b;return h({value:e,tabValues:n})?e:null})();(0,l.A)(()=>{f&&c(f)},[f]);return{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),g(e)},[u,g,n]),tabValues:n}}var g=a(46916);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=a(74848);function y({className:e,block:t,selectedValue:a,selectValue:r,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,n.a_)(),o=e=>{const t=e.currentTarget,s=l.indexOf(t),n=i[s].value;n!==a&&(c(t),r(n))},d=e=>{let t=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;t=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;t=l[a]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:r})=>(0,x.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:o,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":a===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:a}){const n=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=n.find(e=>e.props.value===a);return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:n.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function j(e){const t=b(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,x.jsx)(y,{...t,...e}),(0,x.jsx)(v,{...t,...e})]})}function k(e){const t=(0,g.A)();return(0,x.jsx)(j,{...e,children:u(e.children)},String(t))}},46299:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"Spark/gems/custom/sql-statement","title":"SQLStatement gem","description":"Create DataFrames based on custom SQL queries","source":"@site/docs/Spark/gems/custom/sql-statement.md","sourceDirName":"Spark/gems/custom","slug":"/engineers/sql-statement","permalink":"/engineers/sql-statement","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"sql","permalink":"/tags/sql"},{"inline":true,"label":"custom","permalink":"/tags/custom"}],"version":"current","frontMatter":{"title":"SQLStatement gem","sidebar_label":"SQLStatement","id":"sql-statement","slug":"/engineers/sql-statement","description":"Create DataFrames based on custom SQL queries","tags":["gems","sql","custom"]},"sidebar":"platformSidebar","previous":{"title":"Script","permalink":"/engineers/script"},"next":{"title":"DeltaTableOperations","permalink":"/engineers/delta-table-operations"}}');var s=a(74848),n=a(28453),i=a(97071),l=a(37244),c=a(56778);const o={title:"SQLStatement gem",sidebar_label:"SQLStatement",id:"sql-statement",slug:"/engineers/sql-statement",description:"Create DataFrames based on custom SQL queries",tags:["gems","sql","custom"]},d=void 0,u={},p=[{value:"Behavior in Databricks",id:"behavior-in-databricks",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example: SELECT statement",id:"example-select-statement",level:2},{value:"Generated Code",id:"generated-code",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.A,{python_package_name:"",python_package_version:"",scala_package_name:"",scala_package_version:"",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,s.jsx)(t.p,{children:"The SQLStatement gem enables you to execute custom SQL queries against input DataFrames and generate one or more output DataFrames. Use this gem when you need to execute complex SQL queries that are difficult to express using native gems or want to leverage existing SQL knowledge and queries in your data pipelines."}),"\n",(0,s.jsx)(t.h2,{id:"behavior-in-databricks",children:"Behavior in Databricks"}),"\n",(0,s.jsx)(t.p,{children:"When running pipelines on Databricks, the SQLStatement gem's behavior may vary depending on your Databricks cluster configuration. The underlying Spark execution engine differs between cluster types, which can affect how SQL queries are processed and executed."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"UC dedicated clusters"})," (formerly single user): Uses Spark Classic execution engine"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"UC standard clusters"})," (formerly shared): Uses Spark Connect execution engine"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["One notable difference involves ",(0,s.jsx)(t.code,{children:"createOrReplaceTempView"})," operations. In Spark Classic, temporary views referenced in ",(0,s.jsx)(t.code,{children:"spark.sql"})," are resolved immediately, while in Spark Connect they are lazily analyzed. This means that in Spark Connect environments, if a view is dropped, modified, or replaced after the ",(0,s.jsx)(t.code,{children:"spark.sql"})," call, execution may fail or generate different results."]}),"\n",(0,s.jsx)(t.p,{children:"Always test your SQL queries on your target cluster type to ensure they behave as expected."}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["To learn more about how Databricks clusters impact Prophecy development, see ",(0,s.jsx)(t.a,{href:"/administration/fabrics/Spark-fabrics/databricks/ucshared",children:"Feature compatibility with UC clusters"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Meaning"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"DataFrame(s)"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Input DataFrame(s)"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"SQL Queries"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"SQL Query for each output tab"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]})]})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Number of inputs and outputs can be changed as needed by clicking the ",(0,s.jsx)(t.code,{children:"+"})," button on the respective tab."]})}),"\n",(0,s.jsx)(t.h2,{id:"example-select-statement",children:"Example: SELECT statement"}),"\n",(0,s.jsx)(t.p,{children:"The following screenshot shows an example SQLStatement gem that includes two queries generating two outputs."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"SQL example 1",src:a(53327).A+"",width:"2504",height:"502"})}),"\n",(0,s.jsx)(t.h3,{id:"generated-code",children:"Generated Code"}),"\n","\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(c.A,{value:"py",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-py",children:'def SQLStatement(spark: SparkSession, orders: DataFrame, customers: DataFrame) -> (DataFrame, DataFrame):\n    orders.createOrReplaceTempView("orders")\n    customers.createOrReplaceTempView("customers")\n    df1 = spark.sql("select * from orders inner join customers on orders.customer_id = customers.customer_id")\n    df2 = spark.sql("select distinct customer_id from orders")\n\n    return df1, df2\n\n'})})}),(0,s.jsx)(c.A,{value:"scala",label:"Scala",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'object SQLStatement {\n\n  def apply(\n      spark: SparkSession,\n      orders: DataFrame,\n      customers: DataFrame\n  ): (DataFrame, DataFrame) = {\n    orders.createOrReplaceTempView("orders")\n    customers.createOrReplaceTempView("customers")\n    (\n      spark.sql(\n        """select * from orders inner join customers on orders.customer_id = customers.customer_id"""\n      ),\n      spark.sql(\n        """select distinct customer_id from orders"""\n      )\n    )\n  }\n\n}\n\n'})})})]})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},53327:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/sqlstatement_eg_1-83a269e80f80336bc9cf0e8f3e9eb11e.png"},56778:(e,t,a)=>{a.d(t,{A:()=>i});a(96540);var r=a(18215);const s={tabItem:"tabItem_Ymn6"};var n=a(74848);function i({children:e,hidden:t,className:a}){return(0,n.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:t,children:e})}},97071:(e,t,a)=>{a.d(t,{A:()=>s});a(96540);var r=a(74848);function s(e){return(0,r.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:[e.python_package_name," ",e.python_package_version]})}),e.scala_package_name&&e.scala_package_version&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:[e.scala_package_name," ",e.scala_package_version]})}),e.python_lib&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsPython ",e.python_lib]})}),e.scala_lib&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,r.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsScala ",e.scala_lib]})}),e.uc_single&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["UC Dedicated Cluster ",e.uc_single]})}),e.uc_shared&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["UC Standard Cluster ",e.uc_shared]})}),e.livy&&(0,r.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,r.jsxs)("span",{className:"badge badge-spark",children:["Livy ",e.livy]})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{})]})}}}]);