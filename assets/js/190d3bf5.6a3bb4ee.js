"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[26373],{1974:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"Spark/gems/source-target/file/text","title":"Text","description":"Parameters and properties to read from and write to Text file","source":"@site/docs/Spark/gems/source-target/file/text.md","sourceDirName":"Spark/gems/source-target/file","slug":"/Spark/gems/source-target/file/text","permalink":"/Spark/gems/source-target/file/text","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"file","permalink":"/tags/file"},{"inline":true,"label":"text","permalink":"/tags/text"}],"version":"current","frontMatter":{"title":"Text","id":"text","description":"Parameters and properties to read from and write to Text file","tags":["gems","file","text"]},"sidebar":"mySidebar","previous":{"title":"Seed","permalink":"/Spark/gems/source-target/file/seed"},"next":{"title":"Upload files","permalink":"/Spark/gems/source-target/file/upload-file"}}');var a=r(74848),n=r(28453),i=r(49235),l=r(65537),o=r(79329);const c={title:"Text",id:"text",description:"Parameters and properties to read from and write to Text file",tags:["gems","file","text"]},d=void 0,h={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Source",id:"source",level:2},{value:"Source properties",id:"source-properties",level:3},{value:"Example",id:"source",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target",id:"target",level:2},{value:"Target properties",id:"target-properties",level:3},{value:"Supported write modes",id:"supported-write-modes",level:3},{value:"Example",id:"target-example",level:3},{value:"Generated Code",id:"target-code",level:3}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.2.0+"}),"\n",(0,a.jsx)(t.p,{children:"The Text file type is:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Easy to read from, write to, and share."}),"\n",(0,a.jsx)(t.li,{children:"Compatible with many programs, and easy to exchange data."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Tab"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Location"}),(0,a.jsx)(t.td,{children:"Location"}),(0,a.jsx)(t.td,{children:"File path to read from or write to the Text file."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Schema"}),(0,a.jsx)(t.td,{children:"Properties"}),(0,a.jsxs)(t.td,{children:["Schema to apply on the loaded data.",(0,a.jsx)("br",{}),"In the Source gem, you can define or edit the schema visually or in JSON code.",(0,a.jsx)("br",{}),"In the Target gem, you can view the schema visually or as JSON code."]})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,a.jsx)(t.p,{children:"The Source gem reads data from Text files and allows you to optionally specify the following additional properties."}),"\n",(0,a.jsx)(t.h3,{id:"source-properties",children:"Source properties"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Property name"}),(0,a.jsx)(t.th,{children:"Description"}),(0,a.jsx)(t.th,{children:"Default"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Description"}),(0,a.jsx)(t.td,{children:"Description of your dataset."}),(0,a.jsx)(t.td,{children:"None"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Enforce schema"}),(0,a.jsx)(t.td,{children:"Whether to use the schema you define."}),(0,a.jsx)(t.td,{children:"true"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Read file as single row"}),(0,a.jsx)(t.td,{children:"Whether to read each file from input path as a single row."}),(0,a.jsx)(t.td,{children:"false"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Line Separator"}),(0,a.jsx)(t.td,{children:"Sets a separator for each field and value. The separator can be one or more characters."}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"\\r"}),", ",(0,a.jsx)(t.code,{children:"\\r\\n"}),", and ",(0,a.jsx)(t.code,{children:"\\n"})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Recursive File Lookup"}),(0,a.jsxs)(t.td,{children:["Whether to recursively load files and disable partition inferring. If the data source explicitly specifies the ",(0,a.jsx)(t.code,{children:"partitionSpec"})," when the",(0,a.jsx)(t.code,{children:"recursiveFileLookup"})," is ",(0,a.jsx)(t.code,{children:"true"}),", the Source gem throws an exception."]}),(0,a.jsx)(t.td,{children:"false"})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"source",children:"Example"}),"\n",(0,a.jsx)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"},children:(0,a.jsx)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"},children:(0,a.jsx)("iframe",{src:"https://user-images.githubusercontent.com/103921419/175029278-70a93cc5-a212-464b-8aad-61ab278f0bbf.mp4",title:"Text Source",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"})})}),"\n",(0,a.jsx)(t.h3,{id:"source-code",children:"Generated Code"}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["To see the generated source code of your project, ",(0,a.jsx)(t.a,{href:"/getting-started/tutorials/spark-with-databricks#review-the-code",children:"switch to the Code view"})," in the project header."]})}),"\n","\n",(0,a.jsxs)(l.A,{children:[(0,a.jsx)(o.A,{value:"py",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-py",children:'def read_avro(spark: SparkSession) -> DataFrame:\n    return spark.read\\\n        .format("text")\\\n        .text("dbfs:/FileStore/customers.txt", wholetext = False, lineSep = "\\n")\n\n'})})}),(0,a.jsx)(o.A,{value:"scala",label:"Scala",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-scala",children:'object read_avro {\n\n  def apply(spark: SparkSession): DataFrame =\n    spark.read\n        .format("text")\n        .option("lineSep", "\\n")\n        .save("dbfs:/FileStore/customers.txt")\n\n}\n'})})})]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"target",children:"Target"}),"\n",(0,a.jsx)(t.p,{children:"The Target gem writes data to Text files and allows you to optionally specify the following additional properties."}),"\n",(0,a.jsx)(t.h3,{id:"target-properties",children:"Target properties"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Property name"}),(0,a.jsx)(t.th,{children:"Description"}),(0,a.jsx)(t.th,{children:"Default"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Description"}),(0,a.jsx)(t.td,{children:"Description of your dataset."}),(0,a.jsx)(t.td,{children:"None"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Write Mode"}),(0,a.jsxs)(t.td,{children:["How to handle existing data. For a list of the possible values, see ",(0,a.jsx)(t.a,{href:"#supported-write-modes",children:"Supported write modes"}),"."]}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"error"})})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Partition Columns"}),(0,a.jsxs)(t.td,{children:["List of columns to partition the Text files by. ",(0,a.jsx)("br",{})," The Text file type only supports a single column apart from the partition columns. If the ",(0,a.jsx)(t.code,{children:"DataFrame"})," contains more than one column apart from partition columns as the input ",(0,a.jsx)(t.code,{children:"DataFrame"}),", the Target gem throws an ",(0,a.jsx)(t.code,{children:"AnalysisException"})," error."]}),(0,a.jsx)(t.td,{children:"None"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Compression Codec"}),(0,a.jsxs)(t.td,{children:["Compression codec when writing to the Text file. ",(0,a.jsx)("br",{}),"The Text file supports the following codecs: ",(0,a.jsx)(t.code,{children:"none"}),", ",(0,a.jsx)(t.code,{children:"bzip2"}),", ",(0,a.jsx)(t.code,{children:"gzip"}),", ",(0,a.jsx)(t.code,{children:"lz4"}),", ",(0,a.jsx)(t.code,{children:"snappy"})," and ",(0,a.jsx)(t.code,{children:"deflate"}),"."]}),(0,a.jsx)(t.td,{children:"None"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Line Separator"}),(0,a.jsx)(t.td,{children:"Defines the line separator to use for parsing."}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"\\n"})})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"supported-write-modes",children:"Supported write modes"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Write mode"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"error"}),(0,a.jsx)(t.td,{children:"If the data already exists, throw an exception."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"overwrite"}),(0,a.jsxs)(t.td,{children:["If the data already exists, overwrite the data with the contents of the ",(0,a.jsx)(t.code,{children:"DataFrame"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"append"}),(0,a.jsxs)(t.td,{children:["If the data already exists, append the contents of the ",(0,a.jsx)(t.code,{children:"DataFrame"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"ignore"}),(0,a.jsxs)(t.td,{children:["If the data already exists, do nothing with the contents of the ",(0,a.jsx)(t.code,{children:"DataFrame"}),". ",(0,a.jsx)("br",{}),"This is similar to the ",(0,a.jsx)(t.code,{children:"CREATE TABLE IF NOT EXISTS"})," clause in SQL."]})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"target-example",children:"Example"}),"\n",(0,a.jsx)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"},children:(0,a.jsx)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"},children:(0,a.jsx)("iframe",{src:"https://user-images.githubusercontent.com/103921419/175029303-461687fe-a6e0-419e-85c6-229c17645746.mp4",title:"Text Target",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"})})}),"\n",(0,a.jsx)(t.h3,{id:"target-code",children:"Generated Code"}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["To see the generated source code of your project, ",(0,a.jsx)(t.a,{href:"/getting-started/tutorials/spark-with-databricks#review-the-code",children:"switch to the Code view"})," in the project header."]})}),"\n",(0,a.jsxs)(l.A,{children:[(0,a.jsx)(o.A,{value:"py",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-py",children:'def write_text(spark: SparkSession, in0: DataFrame):\n    in0.write\\\n        .format("text")\\\n        .mode("overwrite")\\\n        .text("dbfs:/FileStore/customers.txt", compression = "gzip", lineSep = "\\n")\n'})})}),(0,a.jsx)(o.A,{value:"scala",label:"Scala",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-scala",children:'object write_text {\n  def apply(spark: SparkSession, in: DataFrame): Unit =\n    in.write\n      .format("text")\n      .mode("overwrite")\n      .option("compression", "gzip")\n      .option("lineSep", "\\n")\n      .save("dbfs:/FileStore/customers.txt")\n}\n'})})})]})]})}function x(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var s=r(96540);const a={},n=s.createContext(a);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(n.Provider,{value:t},e.children)}},49235:(e,t,r)=>{r.d(t,{A:()=>a});r(96540);var s=r(74848);function a(e){return(0,s.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/extensibility/package-hub/",children:(0,s.jsxs)("span",{className:"badge-dependency",children:[(0,s.jsx)("span",{className:"left",children:e.python_package_name}),(0,s.jsx)("span",{className:"right",children:e.python_package_version})]})}),e.scala_package_name&&e.scala_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/extensibility/package-hub/",children:(0,s.jsxs)("span",{className:"badge-dependency",children:[(0,s.jsx)("span",{className:"left",children:e.scala_package_name}),(0,s.jsx)("span",{className:"right",children:e.scala_package_version})]})}),e.python_lib&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,s.jsxs)("span",{className:"badge-dependency",children:[(0,s.jsx)("span",{className:"left",children:"ProphecyLibsPython"}),(0,s.jsx)("span",{className:"right",children:e.python_lib})]})}),e.scala_lib&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,s.jsxs)("span",{className:"badge-dependency",children:[(0,s.jsx)("span",{className:"left",children:"ProphecyLibsScala"}),(0,s.jsx)("span",{className:"right",children:e.scala_lib})]})}),e.uc_single&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/",children:(0,s.jsxs)("span",{className:"badge-spark",children:[(0,s.jsx)("span",{className:"left",children:"Databricks UC Single Cluster"}),(0,s.jsx)("span",{className:"right",children:e.uc_single})]})}),e.uc_shared&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/ucshared",children:(0,s.jsxs)("span",{className:"badge-spark",children:[(0,s.jsx)("span",{className:"left",children:"Databricks UC Shared"}),(0,s.jsx)("span",{className:"right",children:e.uc_shared})]})}),e.livy&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/livy",children:(0,s.jsxs)("span",{className:"badge-spark",children:[(0,s.jsx)("span",{className:"left",children:"Livy"}),(0,s.jsx)("span",{className:"right",children:e.livy})]})}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})}},65537:(e,t,r)=>{r.d(t,{A:()=>w});var s=r(96540),a=r(18215),n=r(65627),i=r(56347),l=r(50372),o=r(30604),c=r(11861),d=r(78749);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:r,attributes:s,default:a}}=e;return{value:t,label:r,attributes:s,default:a}}))}(r);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function u(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function x(e){let{queryString:t=!1,groupId:r}=e;const a=(0,i.W6)(),n=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,o.aZ)(n),(0,s.useCallback)((e=>{if(!n)return;const t=new URLSearchParams(a.location.search);t.set(n,e),a.replace({...a.location,search:t.toString()})}),[n,a])]}function m(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,n=p(e),[i,o]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:n}))),[c,h]=x({queryString:r,groupId:a}),[m,j]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,n]=(0,d.Dv)(r);return[a,(0,s.useCallback)((e=>{r&&n.set(e)}),[r,n])]}({groupId:a}),f=(()=>{const e=c??m;return u({value:e,tabValues:n})?e:null})();(0,l.A)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!u({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),j(e)}),[h,j,n]),tabValues:n}}var j=r(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(74848);function b(e){let{className:t,block:r,selectedValue:s,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,n.a_)(),d=e=>{const t=e.currentTarget,r=o.indexOf(t),a=l[r].value;a!==s&&(c(t),i(a))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;t=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;t=o[r]??o[o.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},t),children:l.map((e=>{let{value:t,label:r,attributes:n}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>{o.push(e)},onKeyDown:h,onClick:d,...n,className:(0,a.A)("tabs__item",f.tabItem,n?.className,{"tabs__item--active":s===t}),children:r??t},t)}))})}function y(e){let{lazy:t,children:r,selectedValue:n}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function v(e){const t=m(e);return(0,g.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,g.jsx)(b,{...t,...e}),(0,g.jsx)(y,{...t,...e})]})}function w(e){const t=(0,j.A)();return(0,g.jsx)(v,{...e,children:h(e.children)},String(t))}},79329:(e,t,r)=>{r.d(t,{A:()=>i});r(96540);var s=r(18215);const a={tabItem:"tabItem_Ymn6"};var n=r(74848);function i(e){let{children:t,hidden:r,className:i}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,s.A)(a.tabItem,i),hidden:r,children:t})}}}]);