"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[6047],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),g=a,f=p["".concat(l,".").concat(g)]||p[g]||d[g]||o;return t?i.createElement(f,r(r({ref:n},u),{},{components:t})):i.createElement(f,r({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<o;c++)r[c]=t[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},52991:(e,n,t)=>{t.d(n,{Z:()=>h});var i=t(67294),a=t(86010),o=t(53438),r=t(39960),s=t(13919),l=t(95999);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function u(e){let{href:n,children:t}=e;return i.createElement(r.Z,{href:n,className:(0,a.Z)("card padding--lg",c.cardContainer)},t)}function p(e){let{href:n,icon:t,title:o,description:r}=e;return i.createElement(u,{href:n},i.createElement("h2",{className:(0,a.Z)("text--truncate",c.cardTitle),title:o},t," ",o),r&&i.createElement("p",{className:(0,a.Z)("text--truncate",c.cardDescription),title:r},r))}function d(e){let{item:n}=e;const t=(0,o.Wl)(n);return t?i.createElement(p,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function g(e){let{item:n}=e;const t=(0,s.Z)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,o.xz)(n.docId??void 0);return i.createElement(p,{href:n.href,icon:t,title:n.label,description:a?.description})}function f(e){let{item:n}=e;switch(n.type){case"link":return i.createElement(g,{item:n});case"category":return i.createElement(d,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function m(e){let{className:n}=e;const t=(0,o.jA)();return i.createElement(h,{items:t.items,className:n})}function h(e){const{items:n,className:t}=e;if(!n)return i.createElement(m,e);const r=(0,o.MN)(n);return i.createElement("section",{className:(0,a.Z)("row",t)},r.map(((e,n)=>i.createElement("article",{key:n,className:"col col--6 margin-bottom--lg"},i.createElement(f,{item:e})))))}},85162:(e,n,t)=>{t.d(n,{Z:()=>r});var i=t(67294),a=t(86010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:n,hidden:t,className:r}=e;return i.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,r),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>w});var i=t(87462),a=t(67294),o=t(86010),r=t(12466),s=t(16550),l=t(91980),c=t(67392),u=t(50012);function p(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:a}}=e;return{value:n,label:t,attributes:i,default:a}}))}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(i.location.search);n.set(o,e),i.replace({...i.location,search:n.toString()})}),[o,i])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,o=d(e),[r,s]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:o}))),[l,c]=f({queryString:t,groupId:i}),[p,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,o]=(0,u.Nk)(t);return[i,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:i}),h=(()=>{const e=l??p;return g({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),m(e)}),[c,m,o]),tabValues:o}}var h=t(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:s,selectValue:l,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),d=e=>{const n=e.currentTarget,t=u.indexOf(n),i=c[t].value;i!==s&&(p(n),l(i))},g=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:r}=e;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,key:n,ref:e=>u.push(e),onKeyDown:g,onClick:d},r,{className:(0,o.Z)("tabs__item",k.tabItem,r?.className,{"tabs__item--active":s===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:i}=e;if(t=Array.isArray(t)?t:[t],n){const e=t.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},t.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i}))))}function y(e){const n=m(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},a.createElement(b,(0,i.Z)({},e,n)),a.createElement(v,(0,i.Z)({},e,n)))}function w(e){const n=(0,h.Z)();return a.createElement(y,(0,i.Z)({key:String(n)},e))}},96445:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>h,frontMatter:()=>c,metadata:()=>p,toc:()=>g});var i=t(87462),a=(t(67294),t(3905)),o=t(74866),r=t(85162),s=t(52991),l=t(53438);const c={title:"Configuration",id:"configuration",description:"Low-code Spark Configuration",sidebar_position:2,tags:["spark","development","config"]},u=void 0,p={unversionedId:"low-code-spark/configuration/configuration",id:"low-code-spark/configuration/configuration",title:"Configuration",description:"Low-code Spark Configuration",source:"@site/docs/low-code-spark/configuration/configuration.md",sourceDirName:"low-code-spark/configuration",slug:"/low-code-spark/configuration/",permalink:"/low-code-spark/configuration/",draft:!1,tags:[{label:"spark",permalink:"/tags/spark"},{label:"development",permalink:"/tags/development"},{label:"config",permalink:"/tags/config"}],version:"current",sidebarPosition:2,frontMatter:{title:"Configuration",id:"configuration",description:"Low-code Spark Configuration",sidebar_position:2,tags:["spark","development","config"]},sidebar:"defaultSidebar",previous:{title:"Diagnostics",permalink:"/low-code-spark/fabrics/fabric-diagnostics"},next:{title:"Conditional Execution in Spark",permalink:"/low-code-spark/configuration/conditional-execution"}},d={},g=[{value:"Spark Configuration",id:"spark-configuration",level:2},{value:"Hadoop Configuration",id:"hadoop-configuration",level:2},{value:"Pipeline Configuration",id:"pipeline-configuration",level:2},{value:"Examples for Pipeline level configurations",id:"examples-for-pipeline-level-configurations",level:2},{value:"Using Config in limit Gem",id:"using-config-in-limit-gem",level:3},{value:"SQL Visual Language",id:"sql-visual-language",level:4},{value:"Scala/Python Visual Language",id:"scalapython-visual-language",level:4},{value:"Using Spark-expression Config type in Gem",id:"using-spark-expression-config-type-in-gem",level:3},{value:"SQL Visual Language",id:"Spark-expression",level:4},{value:"Scala/Python Visual Language",id:"Spark-expression",level:4},{value:"Using config in paths for Source/Target Gems",id:"using-config-in-paths-for-sourcetarget-gems",level:3},{value:"Edit Pipeline Name",id:"edit-pipeline-name",level:3},{value:"Pipeline Configuration instances",id:"pipeline-configuration-instances",level:2},{value:"Using a particular configuration instance for interactive runs",id:"using-a-particular-configuration-instance-for-interactive-runs",level:3},{value:"Using configuration instances in Jobs",id:"using-configuration-instances-in-jobs",level:3},{value:"Overriding configuration values in Jobs",id:"overriding-configuration-values-in-jobs",level:3},{value:"Code",id:"code",level:2},{value:"Scala Config code",id:"scala-config-code",level:3},{value:"Python Config code",id:"python-config-code",level:3},{value:"Component code",id:"component-code",level:3}],f={toc:g},m="wrapper";function h(e){let{components:n,...c}=e;return(0,a.kt)(m,(0,i.Z)({},f,c,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Allows you to define configurations to control various aspects of your Pipeline.\n",(0,a.kt)("img",{alt:"Config Option",src:t(87696).Z,width:"3398",height:"396"})),(0,a.kt)("p",null,"Prophecy IDE allows you to define three kinds of configurations:"),(0,a.kt)("h2",{id:"spark-configuration"},"Spark Configuration"),(0,a.kt)("p",null,"Set runtime Spark configurations as name-value pairs. The name-value pairs will be set inside the Spark runtime configurations as ",(0,a.kt)("inlineCode",{parentName:"p"},"spark.conf.set(name, value)")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Configurations - Spark",src:t(7622).Z,width:"3048",height:"406"})),(0,a.kt)("h2",{id:"hadoop-configuration"},"Hadoop Configuration"),(0,a.kt)("p",null,"Hadoop configurations as name-value pairs. The name-value pairs will be set inside the Hadoop configuration as ",(0,a.kt)("inlineCode",{parentName:"p"},"spark.sparkContext.hadoopConfiguration.set(name, value)")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Configurations - Spark",src:t(74266).Z,width:"2987",height:"381"})),(0,a.kt)("h2",{id:"pipeline-configuration"},"Pipeline Configuration"),(0,a.kt)("p",null,"Config values which can be set at Pipeline level and then be accessed inside any component in the Pipeline. ",(0,a.kt)("a",{parentName:"p",href:"#pipeline-configuration-instances"},"Multiple instances"),"\nof configuration can be created per Pipeline.\n",(0,a.kt)("img",{alt:"Configurations - Common",src:t(20291).Z,width:"3456",height:"1850"})),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Syntax for using configuration inside Gems:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Visual Language Selection",src:t(22214).Z,width:"3452",height:"1844"})),(0,a.kt)("p",null,"For visual language SQL : ",(0,a.kt)("inlineCode",{parentName:"p"},"'$config_name'")),(0,a.kt)("p",null,"For visual language Scala/Python : ",(0,a.kt)("inlineCode",{parentName:"p"},"Config.config_name")),(0,a.kt)("p",null,"For using Spark expression with visual language SQL : ",(0,a.kt)("inlineCode",{parentName:"p"},"expr('$config_name')")),(0,a.kt)("p",null,"For using Spark expression with visual language Scala/Python : ",(0,a.kt)("inlineCode",{parentName:"p"},"expr(Config.config_name)")),(0,a.kt)("h2",{id:"examples-for-pipeline-level-configurations"},"Examples for Pipeline level configurations"),(0,a.kt)("p",null,"Now let's use the ",(0,a.kt)("a",{parentName:"p",href:"#pipeline-configuration"},"above defined configurations")," in the below Pipeline.\n",(0,a.kt)("img",{alt:"Pipeline view",src:t(77094).Z,width:"3450",height:"1846"})),(0,a.kt)("h3",{id:"using-config-in-limit-gem"},"Using Config in limit Gem"),(0,a.kt)("h4",{id:"sql-visual-language"},"SQL Visual Language"),(0,a.kt)("p",null,"In the below image ",(0,a.kt)("inlineCode",{parentName:"p"},"'$num_top_customers'")," is fetching the integer value defined in configurations."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config Limit Example",src:t(7329).Z,width:"3456",height:"1850"})),(0,a.kt)("h4",{id:"scalapython-visual-language"},"Scala/Python Visual Language"),(0,a.kt)("p",null,"In the below image ",(0,a.kt)("inlineCode",{parentName:"p"},"Config.num_top_customers")," is fetching the integer value defined in configurations."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config Limit Example",src:t(60583).Z,width:"3448",height:"1842"})),(0,a.kt)("h3",{id:"using-spark-expression-config-type-in-gem"},"Using Spark-expression Config type in Gem"),(0,a.kt)("p",null,"Here we have used Spark expression directly from our config value to populate a column."),(0,a.kt)("h4",{id:"Spark-expression"},"SQL Visual Language"),(0,a.kt)("p",null,"In the below image:",(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"(1)")," ",(0,a.kt)("inlineCode",{parentName:"p"},"amounts")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"expr('$test_expression')")," is coming from configuration type defined as ",(0,a.kt)("inlineCode",{parentName:"p"},"Spark-expression")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"(2)")," ",(0,a.kt)("inlineCode",{parentName:"p"},"report_name")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"'$report_name'")," is coming configuration type defined as string"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config Reformat example",src:t(25549).Z,width:"3456",height:"1850"})),(0,a.kt)("h4",{id:"Spark-expression"},"Scala/Python Visual Language"),(0,a.kt)("p",null,"In the below image: ",(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"(1)")," ",(0,a.kt)("inlineCode",{parentName:"p"},"amounts")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"expr(Config.test_expression)")," is coming from configuration type defined as ",(0,a.kt)("inlineCode",{parentName:"p"},"Spark-expression")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"(2)")," ",(0,a.kt)("inlineCode",{parentName:"p"},"report_name")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"Config.report_name")," is coming configuration type defined as string"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config Reformat example",src:t(8209).Z,width:"3452",height:"1848"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Similarly configurations defined as type ",(0,a.kt)("inlineCode",{parentName:"p"},"Spark-expression")," can be used directly in filter, join, reformat etc Gems directly.")),(0,a.kt)("h3",{id:"using-config-in-paths-for-sourcetarget-gems"},"Using config in paths for Source/Target Gems"),(0,a.kt)("p",null,"Config can also be used to refer to paths. This type of configuration comes in handy in situation where we have DEV, QA and PROD data.\nAnd want to configure Dataset (or in general the Job runs) based on which environment we are running it in."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config path example",src:t(66324).Z,width:"3456",height:"1842"})),(0,a.kt)("h3",{id:"edit-pipeline-name"},"Edit Pipeline Name"),(0,a.kt)("p",null,"To change the Pipeline name itself, go to Prophecy's metadata page. Locate the Pipeline within a Project, and click the pencil icon."),(0,a.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,a.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,a.kt)("iframe",{src:"https://fast.wistia.net/embed/iframe/7t778aurgk?seo=false?videoFoam=true",title:"Getting Started With SQL Video",allow:"autoplay; fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),"                                                                                   ",(0,a.kt)("script",{src:"https://fast.wistia.net/assets/external/E-v1.js",async:!0}),(0,a.kt)("h2",{id:"pipeline-configuration-instances"},"Pipeline Configuration instances"),(0,a.kt)("p",null,"Different configuration instances can be defined as per requirement. This comes in handy when Pipeline needs to run with different\nconfigurations in different environments or different users."),(0,a.kt)("p",null,"New instances can be configured to override default values as shown in image below:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Create config instance",src:t(41861).Z,width:"3456",height:"1142"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Create pipeline override",src:t(78020).Z,width:"3446",height:"1852"})),(0,a.kt)("h3",{id:"using-a-particular-configuration-instance-for-interactive-runs"},"Using a particular configuration instance for interactive runs"),(0,a.kt)("p",null,"For interactive runs, configuration can be selected as shown in image below.\n",(0,a.kt)("img",{alt:"Config interactive run",src:t(53399).Z,width:"3450",height:"1846"})),(0,a.kt)("h3",{id:"using-configuration-instances-in-jobs"},"Using configuration instances in Jobs"),(0,a.kt)("p",null,"Particular instances can also be configured in Databricks Jobs."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config inside job",src:t(15369).Z,width:"3444",height:"1846"})),(0,a.kt)("h3",{id:"overriding-configuration-values-in-jobs"},"Overriding configuration values in Jobs"),(0,a.kt)("p",null,"Specific values from configuration instance can be overridden as shown in images below:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config job override",src:t(64497).Z,width:"3452",height:"1840"})),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)("p",null,"All configuration instances and values are automatically converted to code as well. Default configurations are stored as code and\nspecific instance overrides are stored as JSON files as shown in image below."),(0,a.kt)("h3",{id:"scala-config-code"},"Scala Config code"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config scala code",src:t(55914).Z,width:"3452",height:"1842"})),(0,a.kt)("h3",{id:"python-config-code"},"Python Config code"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Config python code",src:t(66885).Z,width:"3450",height:"1838"})),(0,a.kt)("h3",{id:"component-code"},"Component code"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'def Reformat(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.select(\n        col("customer_id"),\n        col("orders"),\n        col("account_length_days"),\n        expr(Config.test_expression).as("amounts"),\n        lit(Config.report_name).as("report_name")\n    )\n'))),(0,a.kt)(r.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'object Reformat {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.select(col("customer_id"),\n              col("orders"),\n              col("account_length_days"),\n              expr(Config.test_expression).as("amounts"),\n              lit(Config.report_name).as("report_name")\n    )\n\n}\n\n')))),(0,a.kt)(s.Z,{items:(0,l.jA)().items,mdxType:"DocCardList"}))}h.isMDXComponent=!0},15369:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-inside-job-da462a1b4cb3c14c0a01176ecff0a26b.png"},53399:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-instance-interactive-run-2d81aa4b6687a2937704666f5ef0432d.png"},64497:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-job-override-d17adca511bb853b7974d79eb7ce0f87.png"},41861:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-new-instance-d1ab8ec7e33a045ca32ee5531ed6ffc1.png"},87696:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-option-3dff53640308d125b387ff0c89cfd064.png"},20291:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-eg1-708f4ca2486ceee0fb64f232f213db67.png"},60583:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-limit-eg-scala-python-75bb5df32fd0626272b6804efba49823.png"},7329:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-limit-eg-0d39b48978c3e7f1fa34e4055cf98b71.png"},78020:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-override-2b1087f68db48de0b9db16d3790b6cfa.png"},66324:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-path-eg-69dd68fd535736a6a3489cfebde729d6.png"},8209:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-reformat-eg-scala-python-17e496a27d1b42aec0f5cada46e80650.png"},25549:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-reformat-eg-710011eb69b4d8d12273872c90746ed0.png"},77094:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-view-eg-d0b83c8f00fba2b5ad9ec668a823808b.png"},22214:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-pipeline-visual-language-f7acc4e8ca772caa1d2d869519d147aa.png"},66885:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-python-code-0c98aac73937d55179c6d5b2fda2b85d.png"},55914:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/config-scala-code-c0c5c02a564e24afabb80d15caf27dae.png"},74266:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/configs_hadoop-c4da78b7ebf4205d9867c8f0f99aac8e.png"},7622:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/configs_spark-4dc24fb44c969bbb974db83384e72f2a.png"}}]);