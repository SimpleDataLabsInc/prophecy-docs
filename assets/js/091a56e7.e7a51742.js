"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[2909],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41982:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"Pull request templates",id:"pr-templates",description:"Open Pull Requests from within Prophecy",sidebar_position:7,tags:["metadata","pr","pull requests","git","continuous integration"]},l=void 0,o={unversionedId:"metadata/pr-templates",id:"metadata/pr-templates",title:"Pull request templates",description:"Open Pull Requests from within Prophecy",source:"@site/docs/metadata/pull-request-templates.md",sourceDirName:"metadata",slug:"/metadata/pr-templates",permalink:"/metadata/pr-templates",draft:!1,tags:[{label:"metadata",permalink:"/tags/metadata"},{label:"pr",permalink:"/tags/pr"},{label:"pull requests",permalink:"/tags/pull-requests"},{label:"git",permalink:"/tags/git"},{label:"continuous integration",permalink:"/tags/continuous-integration"}],version:"current",sidebarPosition:7,frontMatter:{title:"Pull request templates",id:"pr-templates",description:"Open Pull Requests from within Prophecy",sidebar_position:7,tags:["metadata","pr","pull requests","git","continuous integration"]},sidebar:"defaultSidebar",previous:{title:"Prophecy API",permalink:"/metadata/prophecyAPI"},next:{title:"Low-code Spark",permalink:"/low-code-spark/"}},p={},s=[{value:"Configuring PR templates",id:"configuring-pr-templates",level:2},{value:"Raising pull requests",id:"raising-pull-requests",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(c,(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Prophecy supports opening pull requests on your external Git provider to merge\ndevelopment branches to the base branch of a project's remote repository.\nThe below sections mention how to configure your repository to use this feature."),(0,a.kt)("h2",{id:"configuring-pr-templates"},"Configuring PR templates"),(0,a.kt)("p",null,"During the PR creation process, Prophecy will redirect users to their\nexternal Git provider based on the template defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Advanced")," > ",(0,a.kt)("inlineCode",{parentName:"p"},"Pull Request Template")," tab in the project's settings."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"PR template Advanced tab",src:n(51461).Z,width:"1714",height:"304"})),(0,a.kt)("p",null,"The PR template URL requires two variables which are used to build a URL string.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"{{source}}")," variable represents the active development branch, and the\n",(0,a.kt)("inlineCode",{parentName:"p"},"{{destination}}")," variable\nrepresents the base branch to which the feature/development branches need to be merged to\n, eg. ",(0,a.kt)("inlineCode",{parentName:"p"},"main"),"."),(0,a.kt)("p",null,"Example template for a Github repository:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"https://github.com/exampleOrg/exampleRepo/compare/{{destination}}...{{source}}?expand=1\n")),(0,a.kt)("p",null,"An example pull request URL generated from the above template for merging a branch named ",(0,a.kt)("inlineCode",{parentName:"p"},"feature"),"\nto branch ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," would look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"https://github.com/exampleOrg/exampleRepo/compare/main...feature?expand=1\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The pull request template would be automatically generated and populated in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Advanced")," > ",(0,a.kt)("inlineCode",{parentName:"p"},"Pull Request Template"),"\nsettings depending on your configured external Git provider. This auto-generation is\ncurrently being done for Github, Github Enterprise, Gitlab, Gitlab Enterprise, BitBucket and Azure Devops repositories.\nUsers will be able to edit the autogenerated templates as well.")),(0,a.kt)("p",null,"An example of an autogenerated PR template for a project linked with GitHub:\n",(0,a.kt)("img",{alt:"PR template autogenrate",src:n(29159).Z,width:"1716",height:"688"})),(0,a.kt)("h2",{id:"raising-pull-requests"},"Raising pull requests"),(0,a.kt)("p",null,"If the pull request template is configured correctly and enabled, users will be able to raise pull requests\nduring the ",(0,a.kt)("inlineCode",{parentName:"p"},"Merge")," step of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Commit")," > ",(0,a.kt)("inlineCode",{parentName:"p"},"Pull")," > ",(0,a.kt)("inlineCode",{parentName:"p"},"Merge")," > ",(0,a.kt)("inlineCode",{parentName:"p"},"Release")," process. Clicking on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Open Pull Request")," button would redirect\nthe user the external Git provider's pull request generation page."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"PR creation",src:n(58736).Z,width:"3034",height:"1264"})))}d.isMDXComponent=!0},51461:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/pbt-template-advanced-17e6dd2a878d342d6841ce191d8f8e1a.png"},29159:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/pr-template-autogen-bf549d289493c67009c0f5607a4b26b0.png"},58736:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/pr-template-openpr-99865db7d58ea57a1212726223fdfced.png"}}]);