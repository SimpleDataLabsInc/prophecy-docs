"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[95171],{15680:(e,a,t)=>{t.d(a,{xA:()=>u,yg:()=>c});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),m=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},u=function(e){var a=m(e.components);return n.createElement(s.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=m(t),g=r,c=p["".concat(s,".").concat(g)]||p[g]||d[g]||l;return t?n.createElement(c,o(o({ref:a},u),{},{components:t})):n.createElement(c,o({ref:a},u))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=g;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=t[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},19365:(e,a,t)=>{t.d(a,{A:()=>o});var n=t(96540),r=t(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:a,hidden:t,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,o),hidden:t},a)}},11470:(e,a,t)=>{t.d(a,{A:()=>w});var n=t(58168),r=t(96540),l=t(20053),o=t(23104),i=t(56347),s=t(57485),m=t(31682),u=t(89466);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function d(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??p(t);return function(e){const a=(0,m.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function g(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function c(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.W6)(),l=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(n.location.search);a.set(l,e),n.replace({...n.location,search:a.toString()})}),[l,n])]}function y(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,l=d(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!g({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:l}))),[s,m]=c({queryString:t,groupId:n}),[p,y]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,l]=(0,u.Dv)(t);return[n,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:n}),f=(()=>{const e=s??p;return g({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),m(e),y(e)}),[m,y,l]),tabValues:l}}var f=t(92303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:a,block:t,selectedValue:i,selectValue:s,tabValues:m}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.a_)(),d=e=>{const a=e.currentTarget,t=u.indexOf(a),n=m[t].value;n!==i&&(p(a),s(n))},g=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;a=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;a=u[t]??u[u.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},a)},m.map((e=>{let{value:a,label:t,attributes:o}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>u.push(e),onKeyDown:g,onClick:d},o,{className:(0,l.A)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===a})}),t??a)})))}function N(e){let{lazy:a,children:t,selectedValue:n}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function v(e){const a=y(e);return r.createElement("div",{className:(0,l.A)("tabs-container",h.tabList)},r.createElement(b,(0,n.A)({},e,a)),r.createElement(N,(0,n.A)({},e,a)))}function w(e){const a=(0,f.A)();return r.createElement(v,(0,n.A)({key:String(a)},e))}},45202:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>m,toc:()=>p});var n=t(58168),r=(t(96540),t(15680)),l=t(11470),o=t(19365);const i={title:"SchemaTransform",id:"schema-transform",description:"Add, Edit, Rename or Drop Columns",tags:["gems","transform","schema"]},s=void 0,m={unversionedId:"Spark/gems/transform/schema-transform",id:"Spark/gems/transform/schema-transform",title:"SchemaTransform",description:"Add, Edit, Rename or Drop Columns",source:"@site/docs/Spark/gems/transform/schema-transform.md",sourceDirName:"Spark/gems/transform",slug:"/Spark/gems/transform/schema-transform",permalink:"/Spark/gems/transform/schema-transform",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"transform",permalink:"/tags/transform"},{label:"schema",permalink:"/tags/schema"}],version:"current",frontMatter:{title:"SchemaTransform",id:"schema-transform",description:"Add, Edit, Rename or Drop Columns",tags:["gems","transform","schema"]},sidebar:"mySidebar",previous:{title:"Reformat",permalink:"/Spark/gems/transform/reformat"},next:{title:"Filter",permalink:"/Spark/gems/transform/filter"}},u={},p=[{value:"Operations",id:"operations",level:2},{value:"Add/Replace Expression",id:"addreplace-expression",level:3},{value:"Drop Column",id:"drop-column",level:3},{value:"Rename Column",id:"rename-column",level:3},{value:"Add If Missing",id:"add-if-missing",level:3},{value:"Add Rule",id:"add-rule",level:3},{value:"Spark Code",id:"spark-code",level:2},{value:"Advanced Import",id:"advanced-import",level:2},{value:"Using Advanced Import",id:"using-advanced-import",level:3},{value:"Format",id:"format",level:3},{value:"Advanced Import Operation types",id:"advanced-import-operation-types",level:3}],d={toc:p},g="wrapper";function c(e){let{components:a,...i}=e;return(0,r.yg)(g,(0,n.A)({},d,i,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h3",null,(0,r.yg)("span",{class:"badge"},"Spark Gem")),(0,r.yg)("p",null,"Use the SchemaTransform gem to apply transformations to columns from the incoming DataFrame. This page describes the different transformations\u2014or ",(0,r.yg)("em",{parentName:"p"},"operations"),"\u2014that you can use in this gem."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of SchemaTransform",src:t(34994).A,width:"2620",height:"1508"})),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"Unlike Reformat which is a set operation where all the transforms are applied in parallel, transformations here are applied ",(0,r.yg)("em",{parentName:"p"},"in order"),".\nReformat is a SQL ",(0,r.yg)("inlineCode",{parentName:"p"},"select")," and is preferable when making many changes.")),(0,r.yg)("h2",{id:"operations"},"Operations"),(0,r.yg)("h3",{id:"addreplace-expression"},"Add/Replace Expression"),(0,r.yg)("p",null,"Add a new column or replace an existing one based on an expression."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"New Column"),(0,r.yg)("td",{parentName:"tr",align:null},"Output column name")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Expression"),(0,r.yg)("td",{parentName:"tr",align:null},"SQL expression to generate values in the new column")))),(0,r.yg)("h3",{id:"drop-column"},"Drop Column"),(0,r.yg)("p",null,"Remove a column from next stage of the Pipeline."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to drop"),(0,r.yg)("td",{parentName:"tr",align:null},"Column to be dropped")))),(0,r.yg)("h3",{id:"rename-column"},"Rename Column"),(0,r.yg)("p",null,"Rename an existing column downstream in the Pipeline."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Old Column Name"),(0,r.yg)("td",{parentName:"tr",align:null},"Column to be renamed")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"New Column Name"),(0,r.yg)("td",{parentName:"tr",align:null},"Output column name")))),(0,r.yg)("h3",{id:"add-if-missing"},"Add If Missing"),(0,r.yg)("p",null,"Provide a default value for a column if it is missing from the source."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Source Column Name"),(0,r.yg)("td",{parentName:"tr",align:null},"Column that contains missing values")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Default Value (if missing)"),(0,r.yg)("td",{parentName:"tr",align:null},"The value that will replace missing values")))),(0,r.yg)("h3",{id:"add-rule"},"Add Rule"),(0,r.yg)("p",null,"Use a business rule in your Pipeline. Visit the ",(0,r.yg)("a",{parentName:"p",href:"/Spark/functions/business-rules-engine/"},"Business rules engine")," page to learn about business rules."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"New Column"),(0,r.yg)("td",{parentName:"tr",align:null},"The column that the business rule will apply to")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Rule"),(0,r.yg)("td",{parentName:"tr",align:null},"The business rule that contains the logic that will populate the new column values")))),(0,r.yg)("h2",{id:"spark-code"},"Spark Code"),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},'def transform(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn("business_date", to_date(lit("2022-05-05"), "yyyy-MM-dd"))\\\n        .withColumnRenamed("bonus_rate", "bonus")\\\n        .drop("slug")\n\n'))),(0,r.yg)(o.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'object transform {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.withColumn("business_date", to_date(lit("2022-05-05"), "yyyy-MM-dd"))\n      .withColumnRenamed("bonus_rate", "bonus")\n      .drop("slug")\n}\n')))),(0,r.yg)("h2",{id:"advanced-import"},"Advanced Import"),(0,r.yg)("p",null,"The Advanced Import feature allows you to bulk import statements that are structured similarly to CSV/TSV files. This can be useful if you have your expressions/transformation logic in another format and just want to quickly configure a SchemaTransform gem based on existing logic."),(0,r.yg)("h3",{id:"using-advanced-import"},"Using Advanced Import"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Click the ",(0,r.yg)("strong",{parentName:"li"},"Advanced")," tab in the SchemaTransform gem."),(0,r.yg)("li",{parentName:"ol"},"Enter the expressions into the text area.")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Advanced import mode",src:t(96207).A,width:"1433",height:"255"})),(0,r.yg)("h3",{id:"format"},"Format"),(0,r.yg)("p",null,"The format of these expressions is ",(0,r.yg)("inlineCode",{parentName:"p"},"op_type,target_name,target_expr"),", where ",(0,r.yg)("inlineCode",{parentName:"p"},"op_type")," is the type of operation (see below); ",(0,r.yg)("inlineCode",{parentName:"p"},"target_name")," is the desired new column name and ",(0,r.yg)("inlineCode",{parentName:"p"},"target_expr")," is the Spark expression that will be used to generate the new column. Each ",(0,r.yg)("inlineCode",{parentName:"p"},"op_type")," has a different number of extra columns that have to be provided, see below for more details."),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"For ",(0,r.yg)("inlineCode",{parentName:"p"},"target_expr")," values that contain a comma ",(0,r.yg)("inlineCode",{parentName:"p"},",")," or span multiple lines, you must surround them by ",(0,r.yg)("inlineCode",{parentName:"p"},"``")," on either side. For example:"),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"addrep,customer_id,customer_id\naddrep,full_name,``concat(first_name, ' ', last_name)``\n"))),(0,r.yg)("h3",{id:"advanced-import-operation-types"},"Advanced Import Operation types"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Operation Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Advanced Import name"),(0,r.yg)("th",{parentName:"tr",align:null},":Arguments:"),(0,r.yg)("th",{parentName:"tr",align:null},"Example"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add/Replace"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addrep")),(0,r.yg)("td",{parentName:"tr",align:null},"2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addrep,foo,CAST(NULL as int)"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Drop"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"drop")),(0,r.yg)("td",{parentName:"tr",align:null},"1"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"drop bar"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Rename"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"rename")),(0,r.yg)("td",{parentName:"tr",align:null},"2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"rename,foo,bar"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add if missing"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"missing")),(0,r.yg)("td",{parentName:"tr",align:null},"2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"missing,foo,current_timestamp()"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add rule"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addrule")),(0,r.yg)("td",{parentName:"tr",align:null},"1"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addrule, PromoCodeRule()"))))))}c.isMDXComponent=!0},34994:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/schemaTransform_eg_1-b9c5e9075411bd86acd8d20984b21c4c.png"},96207:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/schematransform_advanced_2-a4cbe3cff9433842b21d5e17509a3939.png"}}]);