"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[2097],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(a),c=r,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2360:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(7294),r=a(6010),l="tabItem_OmH5";function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(7462),r=a(7294),l=a(2389),i=a(7392),o=a(7094),s=a(2466),u=a(6010),p="tabList_uSqn",d="tabItem_LplD";function m(e){var t,a,l,m=e.lazy,c=e.block,k=e.defaultValue,f=e.values,h=e.groupId,g=e.className,N=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:N.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,i.l)(b,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===k?k:null!=(t=null!=k?k:null==(a=N.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=N[0])?void 0:l.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,o.U)(),C=w.tabGroupChoices,E=w.setTabGroupChoices,P=(0,r.useState)(y),T=P[0],x=P[1],D=[],O=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var _=C[h];null!=_&&_!==T&&b.some((function(e){return e.value===_}))&&x(_)}var A=function(e){var t=e.currentTarget,a=D.indexOf(t),n=b[a].value;n!==T&&(O(t),x(n),null!=h&&E(h,n))},I=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=D.indexOf(e.currentTarget)+1;a=D[n]||D[0];break;case"ArrowLeft":var r=D.indexOf(e.currentTarget)-1;a=D[r]||D[D.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,u.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},g)},b.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return D.push(e)},onKeyDown:I,onFocus:A,onClick:A},l,{className:(0,u.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),m?(0,r.cloneElement)(N.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},N.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function c(e){var t=(0,l.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},2845:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return c}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=a(9877),o=a(2360),s=["components"],u={sidebar_position:5,title:"Rest API Enrich",id:"rest-api-enrich",description:"Enrich DataFrame with content from rest API response based on configuration",tags:["gems","api","custom","rest"]},p=void 0,d={unversionedId:"low-code-spark/gems/custom/rest-api-enrich",id:"low-code-spark/gems/custom/rest-api-enrich",title:"Rest API Enrich",description:"Enrich DataFrame with content from rest API response based on configuration",source:"@site/docs/low-code-spark/gems/custom/rest-api-enrich.md",sourceDirName:"low-code-spark/gems/custom",slug:"/low-code-spark/gems/custom/rest-api-enrich",permalink:"/low-code-spark/gems/custom/rest-api-enrich",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"api",permalink:"/tags/api"},{label:"custom",permalink:"/tags/custom"},{label:"rest",permalink:"/tags/rest"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Rest API Enrich",id:"rest-api-enrich",description:"Enrich DataFrame with content from rest API response based on configuration",tags:["gems","api","custom","rest"]},sidebar:"defaultSidebar",previous:{title:"Delta Table Operations",permalink:"/low-code-spark/gems/custom/delta-ops"},next:{title:"Subgraph",permalink:"/low-code-spark/gems/subgraph"}},m={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Generated Code",id:"generated-code",level:4}],k={toc:c};function f(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Enriches the DataFrame by adding column(s) with content from REST API output based on the given configuration."),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,"Each property can either be set as a static value or a value from an existing column of the input DataFrame. Please refer\nto the examples in the description column of each parameter for reference on how the string value should be formed."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},"method for the new Request object: ",(0,l.kt)("inlineCode",{parentName:"td"},"GET"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"OPTIONS"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"HEAD"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"POST"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"PUT"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"PATCH"),", or ",(0,l.kt)("inlineCode",{parentName:"td"},"DELETE"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"url"),(0,l.kt)("td",{parentName:"tr",align:null},"URL for the REST API."),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},"Dictionary, list of tuples or bytes to send in the query string for the Request. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},'{"key1":"value1", "key2": value2, "key3": ["value1", "value2"]}')),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"Dictionary to send in the body of the Request. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},'{"key1":"value1", "key2": value2}')),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"A JSON serializable Python object to send in the body of the Request. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},'{"key1":"value1", "key2": value2}')),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"headers"),(0,l.kt)("td",{parentName:"tr",align:null},"Dictionary of HTTP Headers to send with the Request. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},'{"key1":"value1", "key2": "value2"}')),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cookies"),(0,l.kt)("td",{parentName:"tr",align:null},"Dictionary to send with the Request. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},'{"key1":"value1", "key2": "value2"}')),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"auth"),(0,l.kt)("td",{parentName:"tr",align:null},"Auth tuple to enable Basic/Digest/Custom HTTP Auth. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"user:pass")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timeout"),(0,l.kt)("td",{parentName:"tr",align:null},"How many seconds to wait for the server to send data before giving up, as a float, eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"0.5")," or a (connect timeout, read timeout) tuple. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"0.5:0.25")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"allow redirects"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable/disable ",(0,l.kt)("inlineCode",{parentName:"td"},"GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection"),". eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"proxies"),(0,l.kt)("td",{parentName:"tr",align:null},"Dictionary mapping protocol to the URL of the proxy. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},'{"https" : "https://1.1.0.1:80"}')),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verify"),(0,l.kt)("td",{parentName:"tr",align:null},"Either a boolean, in which case it controls whether we verify the server\u2019s TLS certificate eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," or a string, in which case it must be a path to a CA bundle to use. Defaults to True. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"dbfs:/path-to-file")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stream"),(0,l.kt)("td",{parentName:"tr",align:null},"if False, the response content will be immediately downloaded. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cert"),(0,l.kt)("td",{parentName:"tr",align:null},"if String, path to SSL client cert file (.pem). eg. ",(0,l.kt)("inlineCode",{parentName:"td"},"dbfs:/path-to-file"),". If Tuple, (\u2018cert\u2019, \u2018key\u2019) pair. eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"cert:key"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"parse content"),(0,l.kt)("td",{parentName:"tr",align:null},"Parse content as JSON (to make the schema available, please enable ",(0,l.kt)("inlineCode",{parentName:"td"},"custom schema")," and click ",(0,l.kt)("inlineCode",{parentName:"td"},"infer from cluster")," at the bottom left in the output tab)"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false")))),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ol",{parentName:"div"},(0,l.kt)("li",{parentName:"ol"},"To store sensitive information like API key (headers), auth etc., ",(0,l.kt)("inlineCode",{parentName:"li"},"Databricks secrets")," can be used as shown in ",(0,l.kt)("a",{parentName:"li",href:"rest-api-enrich#example-1"},"Example")," below."),(0,l.kt)("li",{parentName:"ol"},"If the expected number of rows are very large, it's better to provide ",(0,l.kt)("inlineCode",{parentName:"li"},"await time")," in the ",(0,l.kt)("inlineCode",{parentName:"li"},"advanced tab")," so you don't overwhelm the source server or exceed any request limits."),(0,l.kt)("li",{parentName:"ol"},"For APIs which takes list of parameters as inputs, window functions like ",(0,l.kt)("inlineCode",{parentName:"li"},"collect_list")," can be used before ",(0,l.kt)("inlineCode",{parentName:"li"},"RestApiEnrich")," Gem to reduce the number of API calls.")),(0,l.kt)("p",{parentName:"div"},"Please make sure that cluster is connected while using the ",(0,l.kt)("inlineCode",{parentName:"p"},"parse content")," option to ",(0,l.kt)("inlineCode",{parentName:"p"},"infer the schema from cluster")," for the first time."))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"All input parameters are expected to be in string format. Other column types such as ",(0,l.kt)("inlineCode",{parentName:"p"},"array/JSON/struct")," can be created\nusing combination of aggregate/window Gems along with reformat component and then can be cast as string prior to passing the column in ",(0,l.kt)("inlineCode",{parentName:"p"},"RestAPIEnrich Gem"),"\nas needed."))),(0,l.kt)("h3",{id:"example-1"},"Example 1"),(0,l.kt)("p",null,"Let's try to fetch prices for few cryptocurrencies from ",(0,l.kt)("a",{parentName:"p",href:"https://www.coinapi.io/"},"Coin-API"),"."),(0,l.kt)("p",null,"We would be taking cryptocurrency and currency as input from DataFrame and pass url, headers as static values.\nPlease note that URL in this example is created using static base url and adding cryptocurrency and currency as inputs\nfrom DataFrame."),(0,l.kt)("p",null,"Also, we would be using Databricks-secrets to pass headers as it requires API-key."),(0,l.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,l.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,l.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/184725747-88115fa5-b70b-4caf-b3e0-1f2476e15d6e.mp4",title:"Rest API example 1",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,l.kt)("h3",{id:"example-2"},"Example 2"),(0,l.kt)("p",null,"Let's take a more complex example, where all method, url, headers, params etc are passed as values from DataFrame\ncolumns."),(0,l.kt)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,l.kt)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,l.kt)("iframe",{src:"https://user-images.githubusercontent.com/103921419/184725732-5cafc278-c1cf-4bad-9078-9f810ede008a.mp4",title:"Rest API example 2",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,l.kt)("h4",{id:"generated-code"},"Generated Code"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def get_data_from_api(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    requestDF = in0.withColumn(\n        "api_output",\n        get_rest_api(\n          to_json(struct(lit("GET").alias("method"), col("url"), lit(Config.coin_api_key).alias("headers"))),\n          lit("")\n        )\n    )\n\n    return requestDF.withColumn(\n        "content_parsed",\n        from_json(col("api_output.content"), schema_of_json(requestDF.select("api_output.content").take(1)[0][0]))\n    )\n\n'))),(0,l.kt)(o.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Coming Soon!!!\n\n")))))}f.isMDXComponent=!0}}]);