"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[59308],{28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(96540);const i={},r=s.createContext(i);function c(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:t},e.children)}},77956:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var s=n(74848);function i(e){return(0,s.jsxs)("div",{children:[e.execution_engine&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,s.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,s.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})}},97743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"analysts/development/gems/custom/directory","title":"Directory gem","description":"List files and folders of a specified directory","source":"@site/docs/analysts/development/gems/custom/directory.md","sourceDirName":"analysts/development/gems/custom","slug":"/analysts/directory","permalink":"/analysts/directory","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Directory gem","sidebar_label":"Directory","id":"directory","slug":"/analysts/directory","description":"List files and folders of a specified directory","tags":[]},"sidebar":"platformSidebar","previous":{"title":"Custom gems","permalink":"/analysts/custom-gems"},"next":{"title":"DynamicInput","permalink":"/analysts/dynamic-input"}}');var i=n(74848),r=n(28453),c=n(77956);const o={title:"Directory gem",sidebar_label:"Directory",id:"directory",slug:"/analysts/directory",description:"List files and folders of a specified directory",tags:[]},a=void 0,d={},l=[{value:"Input and Output",id:"input-and-output",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Supported connection types",id:"supported-connection-types",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(c.A,{execution_engine:"Prophecy Automate",sql_package_name:"Prophecy",sql_package_version:"4.1.3+"}),"\n",(0,i.jsx)(t.p,{children:"List files and folders of a specified directory from a data ingress/egress connection."}),"\n",(0,i.jsx)(t.h2,{id:"input-and-output",children:"Input and Output"}),"\n",(0,i.jsx)(t.p,{children:"The Directory gem does not accept any inputs."}),"\n",(0,i.jsx)(t.p,{children:"The Directory gem produces one output. The output schema includes the following columns:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"name"}),": The name of the file."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"path"}),": The full path to the file."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"size_in_bytes"}),": The size of the file. Folders will be listed as ",(0,i.jsx)(t.code,{children:"0"})," bytes."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"creation_time"}),": The time that the file was created."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"modification_time"}),": The time that the file was last modified."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"parent_directory"}),": The parent directory of the file or folder."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"file_type"}),": Whether the record listed is a file or a folder."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"sheet_name"}),": The name of the excel sheet in an XLSX file. This column appears when the ",(0,i.jsx)(t.strong,{children:"Include sheet name as column in output for xlsx files"})," parameter is enabled."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"If a certain connection does not provide a certain field (for example, Databricks does not provide creation time), then the columns will be populated with zeroes or null values."}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Configure the Directory gem using the following parameters."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Connection type"}),(0,i.jsxs)(t.td,{children:["The data provider to connect to. See ",(0,i.jsx)(t.a,{href:"#supported-connection-types",children:"Supported connection types"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Select or create connection"}),(0,i.jsx)(t.td,{children:"New or existing connection to the provider you selected."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Path"}),(0,i.jsx)(t.td,{children:"Path to directory that you want to see the contents of."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Enable to include files/directories inside subfolders"}),(0,i.jsx)(t.td,{children:"When enabled, the gem recursively traverses and include all files and directories within subdirectories of the specified path."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"File pattern (Optional)"}),(0,i.jsx)(t.td,{children:"Regular expression (regex) pattern used to narrow results to matching entries."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Include sheet name as column in output for xlsx files"}),(0,i.jsxs)(t.td,{children:["When enabled, the gem adds a column to the output that includes XLSX sheet names. If a file has multiple sheets, one row is generated per sheet name. For example, a file with three sheets produces three rows\u2014one for each sheet. This field is ",(0,i.jsx)(t.code,{children:"null"})," if the file is not an XLSX file."]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"supported-connection-types",children:"Supported connection types"}),"\n",(0,i.jsx)(t.p,{children:"You can use the Directory gem to list files and folders from the following connection types:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/databricks",children:"Databricks Volumes"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/s3",children:"Amazon S3"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/onedrive",children:"OneDrive"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/sftp",children:"SFTP"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/sharepoint",children:"SharePoint"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/smartsheet",children:"Smartsheet"})}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);