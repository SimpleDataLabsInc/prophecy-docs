"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[15263],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}},77956:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var s=n(74848);function i(e){return(0,s.jsxs)("div",{children:[e.execution_engine&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,s.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,s.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,s.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})}},79683:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"analysts/development/gems/custom/dynamic-input","title":"DynamicInput gem","description":"Run SQL queries that update dynamically at runtime","source":"@site/docs/analysts/development/gems/custom/dynamic-input.md","sourceDirName":"analysts/development/gems/custom","slug":"/analysts/dynamic-input","permalink":"/analysts/dynamic-input","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"custom","permalink":"/tags/custom"}],"version":"current","frontMatter":{"title":"DynamicInput gem","sidebar_label":"DynamicInput","id":"dynamic-input","slug":"/analysts/dynamic-input","description":"Run SQL queries that update dynamically at runtime","tags":["gems","analyst","custom"]},"sidebar":"platformSidebar","previous":{"title":"Directory","permalink":"/analysts/directory"},"next":{"title":"Macro","permalink":"/analysts/macro"}}');var i=n(74848),r=n(28453),a=n(77956);const l={title:"DynamicInput gem",sidebar_label:"DynamicInput",id:"dynamic-input",slug:"/analysts/dynamic-input",description:"Run SQL queries that update dynamically at runtime",tags:["gems","analyst","custom"]},d=void 0,c={},o=[{value:"Read Option 1: Modify SQL Query",id:"read-option-1-modify-sql-query",level:2},{value:"Input and Output",id:"input-and-output",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3},{value:"Read Option 2: Dynamically read data from multiple files",id:"read-option-2-dynamically-read-data-from-multiple-files",level:2},{value:"Input and Output",id:"input-and-output-xlsx",level:3},{value:"Parameters",id:"parameters-xlsx",level:3}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.A,{execution_engine:"Prophecy Automate",sql_package_name:"Prophecy",sql_package_version:"4.1.3+"}),"\n",(0,i.jsxs)(t.p,{children:["Use the DynamicInput gem to run SQL queries or read data files, dynamically automating data retrieval. This page describes how to either ",(0,i.jsx)(t.a,{href:"#read-option-1-modify-sql-query",children:"modify SQL queries"})," or ",(0,i.jsx)(t.a,{href:"#read-option-2-dynamically-read-data-from-multiple-files",children:"dynamically read data from multiple files"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"read-option-1-modify-sql-query",children:"Read Option 1: Modify SQL Query"}),"\n",(0,i.jsx)(t.p,{children:"Run parameterized SQL queries that automatically update based on incoming data. Define a single SQL template with placeholders, and at runtime, DynamicInput replaces those placeholders with column values from your input dataset."}),"\n",(0,i.jsx)(t.h3,{id:"input-and-output",children:"Input and Output"}),"\n",(0,i.jsx)(t.p,{children:"Configure the following input and output ports."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Port"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"in0"})}),(0,i.jsxs)(t.td,{children:["Input dataset that contains the placeholder replacement values to be used in the SQL query template. ",(0,i.jsx)("br",{}),"Each row in this dataset generates its own SQL query."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"out"})}),(0,i.jsxs)(t.td,{children:["Output dataset containing the combined results from all generated queries. ",(0,i.jsx)("br",{}),"The gem executes one query per input row, then unions the results into a single output."]})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Configure the DynamicInput gem using the following parameters."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Select Read Options"}),(0,i.jsxs)(t.td,{children:["The ",(0,i.jsx)(t.strong,{children:"Modify SQL Query"})," option denotes that the gem reads data using a dynamically modified SQL query."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Table Connection Type"}),(0,i.jsxs)(t.td,{children:["Select the type of ",(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/",children:"data ingress/egress connection"})," to use."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Select or create connection"}),(0,i.jsx)(t.td,{children:"Choose an existing connection or create a new one for the selected source."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Table or Query"}),(0,i.jsx)(t.td,{children:"Write a SQL query template that will be used to retrieve data. Can include placeholders for dynamic replacement."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Pass fields to the Output"}),(0,i.jsx)(t.td,{children:"Select specific columns that contain the data you will use to replace strings."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Replace a Specific String"}),(0,i.jsx)(t.td,{children:"Reference a static text value to replace in the query, and select the column with replacement values."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.p,{children:"This example demonstrates how to filter rows from an Oracle table by replacing placeholder text with values from your dataset."}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Under ",(0,i.jsx)(t.strong,{children:"Select Read Options"}),", select ",(0,i.jsx)(t.strong,{children:"Modify SQL Query"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Under ",(0,i.jsx)(t.strong,{children:"Table Connection Type"}),", select ",(0,i.jsx)(t.strong,{children:"Oracle"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Select an existing connection or ",(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/oracle",children:"create a new one"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In ",(0,i.jsx)(t.strong,{children:"Table or Query"}),", enter:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"SELECT *\nFROM SALES.ORDERS\nWHERE status <> 'replace'\nAND region <> 'AAA'\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.strong,{children:"Replace a Specific String"})," table, set:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Text to Replace"}),": ",(0,i.jsx)(t.code,{children:"replace"})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Replacement Field"}),": ",(0,i.jsx)(t.code,{children:"status_column"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["When you run the gem, it will take each row from your input dataset, replace the placeholder text (",(0,i.jsx)(t.code,{children:"replace"}),") in the SQL template with the corresponding value from ",(0,i.jsx)(t.code,{children:"status_column"}),", and execute that query. Prophecy will then union all of the query results into a single output dataset, so you can work with them as one combined table."]}),"\n",(0,i.jsx)(t.h2,{id:"read-option-2-dynamically-read-data-from-multiple-files",children:"Read Option 2: Dynamically read data from multiple files"}),"\n",(0,i.jsx)(t.p,{children:"Combine data from listed XLSX files, or extract only the sheet names from listed files and append them as values in a new column."}),"\n",(0,i.jsx)(t.h3,{id:"input-and-output-xlsx",children:"Input and Output"}),"\n",(0,i.jsx)(t.p,{children:"Configure the following input and output ports."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Port"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"in0"})}),(0,i.jsx)(t.td,{children:"Input dataset that lists the file paths to the XLSX files to read. Each path in this dataset is processed according to the selected output mode."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"out"})}),(0,i.jsx)(t.td,{children:"Returns either the unioned data from all XLSX files or a list of sheet names, depending on the selected output mode."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"parameters-xlsx",children:"Parameters"}),"\n",(0,i.jsx)(t.p,{children:"Configure the DynamicInput gem using the following parameters."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Select Read Options"}),(0,i.jsxs)(t.td,{children:["Select ",(0,i.jsx)(t.strong,{children:"Dynamically read data from multiple files"})," to enable reading and combining XLSX files at runtime."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Select output mode"}),(0,i.jsxs)(t.td,{children:["Choose how to process the XLSX files.",(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)(t.strong,{children:"Union sheet data by column name"}),": Read and combine data from all XLSX files in the provided file paths. Empty or non-XLSX files are skipped."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(t.strong,{children:"Retrieve sheet names"}),": Extract only the sheet names from each file and append them as values in a new column."]})]})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"File Connection Type"}),(0,i.jsxs)(t.td,{children:["Select the file storage ",(0,i.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/connections/",children:"connection"})," type to use."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Select or create connection"}),(0,i.jsx)(t.td,{children:"Choose an existing connection or create a new one for the selected connection type."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"File Path Column"}),(0,i.jsx)(t.td,{children:"Specify the column in the input dataset that contains the file paths to read from."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Password"}),(0,i.jsx)(t.td,{children:"(Optional) Provide a password to access password-protected XLSX files."})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:["The following additional parameters are applicable to the ",(0,i.jsx)(t.strong,{children:"Union sheet data by column name"})," option only."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Sheet Name Column"}),(0,i.jsx)(t.td,{children:"Specify the column in the input dataset that contains the sheet name to read from in each XLSX file."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Header Row"}),(0,i.jsx)(t.td,{children:"Enable to use the header row in each sheet to define column names. Otherwise, the gem assigns generic column names automatically."})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);