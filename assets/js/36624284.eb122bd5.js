"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[63022],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>m});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),g=n,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||l;return a?r.createElement(m,i(i({ref:t},u),{},{components:a})):r.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>i});var r=a(96540),n=a(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,i),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>w});var r=a(58168),n=a(96540),l=a(20053),i=a(23104),o=a(56347),s=a(57485),p=a(31682),u=a(89466);function c(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function g(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,o.W6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=d(e),[i,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[s,p]=m({queryString:a,groupId:r}),[c,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,u.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),h=(()=>{const e=s??c;return g({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),y(e)}),[p,y,l]),tabValues:l}}var h=a(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const t=e.currentTarget,a=u.indexOf(t),r=p[a].value;r!==o&&(c(t),s(r))},g=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:g,onClick:d},i,{className:(0,l.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function N(e){const t=y(e);return n.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},n.createElement(f,(0,r.A)({},e,t)),n.createElement(v,(0,r.A)({},e,t)))}function w(e){const t=(0,h.A)();return n.createElement(N,(0,r.A)({key:String(t)},e))}},74454:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=a(58168),n=(a(96540),a(15680)),l=a(11470),i=a(19365);const o={title:"Change External Git Provider API",id:"change-external-git-api",sidebar_class_name:"hidden",description:"Use this API to manage the Git provider configured for specific Prophecy projects",tags:["git","api","gitlab","bitbucket","github"]},s=void 0,p={unversionedId:"api/change-external-git-api",id:"api/change-external-git-api",title:"Change External Git Provider API",description:"Use this API to manage the Git provider configured for specific Prophecy projects",source:"@site/docs/api/change-external-git-config-api.md",sourceDirName:"api",slug:"/api/change-external-git-api",permalink:"/api/change-external-git-api",draft:!1,tags:[{label:"git",permalink:"/tags/git"},{label:"api",permalink:"/tags/api"},{label:"gitlab",permalink:"/tags/gitlab"},{label:"bitbucket",permalink:"/tags/bitbucket"},{label:"github",permalink:"/tags/github"}],version:"current",frontMatter:{title:"Change External Git Provider API",id:"change-external-git-api",sidebar_class_name:"hidden",description:"Use this API to manage the Git provider configured for specific Prophecy projects",tags:["git","api","gitlab","bitbucket","github"]}},u={},c=[{value:"Steps",id:"steps",level:3},{value:"Each user needs to update their Git credential",id:"each-user-needs-to-update-their-git-credential",level:3},{value:"Tips",id:"tips",level:2}],d={toc:c},g="wrapper";function m(e){let{components:t,...a}=e;return(0,n.yg)(g,(0,r.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"If you've migrated Git providers, you'll need to update Prophecy Projects to use the new Git provider. You can use the ",(0,n.yg)("inlineCode",{parentName:"p"},"updateRemoteURI")," API to configure Prophecy Projects to point to the migrated repositories."),(0,n.yg)("p",null,"You'll be able to perform the API call manually or using ",(0,n.yg)("a",{parentName:"p",href:"#tips"},"Postman"),". If you need to migrate projects in bulk, ",(0,n.yg)("a",{parentName:"p",href:"#tips"},"follow these steps")," before calling the ",(0,n.yg)("inlineCode",{parentName:"p"},"updateRemoteURI")," API."),(0,n.yg)("h3",{id:"steps"},"Steps"),(0,n.yg)("p",null,"The steps below will work for all the Git providers supported in Prophecy."),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Login to Prophecy as the Team Admin."),(0,n.yg)("li",{parentName:"ol"},"Generate a ",(0,n.yg)("a",{parentName:"li",href:"https://docs.prophecy.io/api/#personal-access-token"},"Prophecy API token"),"."),(0,n.yg)("li",{parentName:"ol"},"Craft the API calls as below."),(0,n.yg)("li",{parentName:"ol"},"Submit the API call")),(0,n.yg)("p",null,"Example:"),(0,n.yg)(l.A,{mdxType:"Tabs"},(0,n.yg)(i.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-py"},'import requests\nimport json\n\nurl = "https://****.prophecy.io/api/md/graphql"\n\npayload = json.dumps({\n  "query": "mutation {\\n  updateRemoteUri(\\n    projectUID: \\"***123***\\"\\n    externalRepoUri: \\"https://gitlab.com/****/my-destination-repo.git\\"\\n    externalGitProvider: GitLab\\n    externalRepoEmail: \\"****@****.com\\"\\n    externalRepoUsername: \\"****\\"\\n    externalRepoAccessToken: \\"glpat-****\\"\\n  )\\n}",\n  "variables": {}\n})\nheaders = {\n  \'X-Auth-Token\': \'****\',\n  \'\': \'\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n'))),(0,n.yg)(i.A,{value:"curl",label:"curl",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-curl"},'curl --location \'https://****.prophecy.io/api/md/graphql\' \\\n--header \'X-Auth-Token: ****\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "query": "mutation {\\n  updateRemoteUri(\\n    projectUID: \\"***123***\\"\\n    externalRepoUri: \\"https://gitlab.com/****/my-destination-repo.git\\"\\n    externalGitProvider: GitLab\\n    externalRepoEmail: \\"****@****.com\\"\\n    externalRepoUsername: \\"****\\"\\n    externalRepoAccessToken: \\"glpat-***\\"\\n  )*\\n}",\n    "variables": {}\n}\'\n\n'))),(0,n.yg)(i.A,{value:"Readable",label:"Readable",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-Readable"},'Url:\nhttps://****.prophecy.io/api/md/graphql\n\nHeaders:\nX-Auth-Token: \'****\'\nContent-Type: \'application/json\'\n\nBody:\nBody:\n"query": "mutation {\n            updateRemoteUri(\n              projectUID: \\"***123***\\"\n              externalRepoUri: \\"https://gitlab.com/****/my-destination-repo.git\\"\n              externalGitProvider: GitLab\n              externalRepoEmail: \\"****@****.com\\"\n              externalRepoUsername: \\"****\\"\n              externalRepoAccessToken: \\"glpat-***\\"\n            )\n         }"\n')))),(0,n.yg)("p",null,"Response:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"{\n 200\n}\n")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"),(0,n.yg)("th",{parentName:"tr",align:null},"Example"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"projectUID"),(0,n.yg)("td",{parentName:"tr",align:null},"Prophecy Project ID, found in the Project URL"),(0,n.yg)("td",{parentName:"tr",align:null},"Required"),(0,n.yg)("td",{parentName:"tr",align:null},'"11"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"externalRepoUri"),(0,n.yg)("td",{parentName:"tr",align:null},"Repository target for migration. Be sure to use the ","*",".git suffix as appropriate for cloning using https or SSH options."),(0,n.yg)("td",{parentName:"tr",align:null},"Required"),(0,n.yg)("td",{parentName:"tr",align:null},'"',(0,n.yg)("a",{parentName:"td",href:"https://gitlab.com/****/examplerepo.git%22"},'https://gitlab.com/****/examplerepo.git"'))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"externalGitProvider"),(0,n.yg)("td",{parentName:"tr",align:null},"Possible values (case sensitive): Github, GithubEnterprise, GitLab, GitLabEnterprise, BitBucket, AzureDevOps, Other"),(0,n.yg)("td",{parentName:"tr",align:null},"Required"),(0,n.yg)("td",{parentName:"tr",align:null},"GitLab")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"externalRepoEmail"),(0,n.yg)("td",{parentName:"tr",align:null},"If provided, the API call will validate the two repos are the same."),(0,n.yg)("td",{parentName:"tr",align:null},"Optional"),(0,n.yg)("td",{parentName:"tr",align:null},'"',(0,n.yg)("a",{parentName:"td",href:"mailto:myemail@mycompany.com"},"myemail@mycompany.com"),'"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"externalRepoUsername"),(0,n.yg)("td",{parentName:"tr",align:null},"If provided, the API call will validate the two repos are the same."),(0,n.yg)("td",{parentName:"tr",align:null},"Optional"),(0,n.yg)("td",{parentName:"tr",align:null},'"myGitLabUsername"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"externalRepoAccessToken"),(0,n.yg)("td",{parentName:"tr",align:null},"If provided, the API call will validate the two repos are the same."),(0,n.yg)("td",{parentName:"tr",align:null},"Optional"),(0,n.yg)("td",{parentName:"tr",align:null},'"gitlab-token"')))),(0,n.yg)("h3",{id:"each-user-needs-to-update-their-git-credential"},"Each user needs to update their Git credential"),(0,n.yg)("p",null,"After each Project is configured for a new Git provider's repo, the Prophecy users will need to update their Git credentials."),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Open the new Git provider (eg Gitlab) and create a new token. Be sure the new token has permission to write to all the important repositories."),(0,n.yg)("li",{parentName:"ol"},"Open Prophecy. Add a new Git credential for the new provider (eg Gitlab). Configure Projects to use the new Git credential.")),(0,n.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,n.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,n.yg)("iframe",{src:"https://fast.wistia.net/embed/iframe/mwg1ku3drp?seo=false?videoFoam=true",title:"Design a Pipeline Video",allow:"autoplay; fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,n.yg)("script",{src:"https://fast.wistia.net/assets/external/E-v1.js",async:!0}),(0,n.yg)("h2",{id:"tips"},"Tips"),(0,n.yg)("details",null,(0,n.yg)("summary",null," Use Postman to craft the API call "),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Install ",(0,n.yg)("a",{parentName:"li",href:"https://www.postman.com/downloads/"},"Postman"),"."),(0,n.yg)("li",{parentName:"ul"},"Create a new POST API request in Postman",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Enter your Prophecy GraphQL API endpoint, eg https://","*","*","*","*",".prophecy.io/api/md/graphql."))),(0,n.yg)("li",{parentName:"ul"},"Go to the Headers Tab and enter X-Auth-Token for the key and your API token as the value."),(0,n.yg)("li",{parentName:"ul"},"Go to the Body tab and enter the following to call updateRemoteUri:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},'mutation {\n  updateRemoteUri(\n    projectUID: "<insert_project_UID_here>"\n    externalRepoUri: "<insert_target_repo_here>"\n    externalGitProvider: <insert_target_git_provider_here>\n    externalRepoEmail: "<insert_your_email_here>"\n    externalRepoUsername: "<insert_your_git_provider_username_here>"\n    externalRepoAccessToken: "<insert_gitlab_token_here>"\n  )\n}\n'))),(0,n.yg)("details",null,(0,n.yg)("summary",null," Error response "),"If you see an `access denied` error response when calling the Git migration API:",(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Verify the Prophecy API token is created by the team admin"),(0,n.yg)("li",{parentName:"ol"},"Verify the token for the target Git provider\n","[a]"," has permission to push to the repo\n","[b]"," has permission to push to the branch, and\n","[c]"," is the right type of token (app token for gitlab, personal access token for github, etc.)."))),(0,n.yg)("details",null,(0,n.yg)("summary",null," Bulk repository migrations "),(0,n.yg)("p",null,"If you have many projects to change, use a separate API call to list your team\u2019s project IDs and URLs. Duplicate the query, modify the Body tab, and enter the following:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"tableQueryProject(<insert_project_uid_here>: String!) {\n  Team(uid: <insert_team_uid_here>) {\n    _id\n    name\n    projects {\n      _id\n      name\n      externalOriginUri\n    }\n  }\n}\n")),(0,n.yg)("p",null,"Now you can use the returned list of Project UIDs to call the Git migration API, once per Project UID.\nThis can be automated using a simple script.")))}m.isMDXComponent=!0}}]);