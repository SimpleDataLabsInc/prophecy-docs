"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[34333],{16242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"SQL/configuration","title":"Configurations","description":"Configure SQL project and model variables","source":"@site/docs/SQL/configuration.md","sourceDirName":"SQL","slug":"/SQL/configuration","permalink":"/SQL/configuration","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"SQL","permalink":"/tags/sql"},{"inline":true,"label":"development","permalink":"/tags/development"},{"inline":true,"label":"config","permalink":"/tags/config"},{"inline":true,"label":"variable","permalink":"/tags/variable"}],"version":"current","frontMatter":{"title":"Configurations","id":"configuration","description":"Configure SQL project and model variables","tags":["SQL","development","config","variable"]},"sidebar":"mySidebar","previous":{"title":"Variant schema","permalink":"/SQL/visual-expression-builder/variant-schema"},"next":{"title":"Lineage","permalink":"/lineage/"}}');var r=t(74848),o=t(28453);const s={title:"Configurations",id:"configuration",description:"Configure SQL project and model variables",tags:["SQL","development","config","variable"]},a=void 0,l={},c=[{value:"Types",id:"types",level:2},{value:"Syntax",id:"syntax",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["When you open a SQL project, you can find ",(0,r.jsx)(n.strong,{children:"Configuration"})," under the ",(0,r.jsx)(n.strong,{children:"..."})," ellipses menu in the project header."]}),"\n",(0,r.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,r.jsx)(n.p,{children:"Configurations are variables that you can use in various gem fields. There are two types of configurations."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Model configurations"}),": Only accessible in a specific model."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Project configurations"}),": Accessible to any component within a specific project."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.p,{children:"The variable name and value should both be valid in Python. The way you reference these variables differ between model and project configurations. The table below shows some usage examples for each type of configuration."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Python Syntax"}),(0,r.jsx)(n.th,{children:"SQL Syntax"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Model"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"key"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"{{ key }}"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Project"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'var("key", "defaultvalue")'})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'{{ var("key", "defaultvalue") }}'})})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Note that the ",(0,r.jsx)(n.code,{children:"defaultvalue"})," is optional for project configurations."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);