"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[371],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72360:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const o={tabItem:"tabItem_OmH5"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:n},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(83117),r=n(67294),o=n(72389),l=n(67392),i=n(7094),s=n(12466),d=n(86010);const u={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function p(e){const{lazy:t,block:n,defaultValue:o,values:p,groupId:c,className:m}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),w=(0,l.l)(b,((e,t)=>e.value===t.value));if(w.length>0)throw new Error(`Docusaurus error: Duplicate values "${w.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??k.find((e=>e.props.default))?.props.value??k[0]?.props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:y}=(0,i.U)(),[h,v]=(0,r.useState)(f),_=[],{blockElementScrollPositionUntilNextRender:N}=(0,s.o5)();if(null!=c){const e=g[c];null!=e&&e!==h&&b.some((t=>t.value===e))&&v(e)}const T=e=>{const t=e.currentTarget,n=_.indexOf(t),a=b[n].value;a!==h&&(N(t),v(a),null!=c&&y(c,a))},D=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=_.indexOf(e.currentTarget)+1;t=_[n]||_[0];break}case"ArrowLeft":{const n=_.indexOf(e.currentTarget)-1;t=_[n]||_[_.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,d.Z)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":n},m)},b.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:h===t?0:-1,"aria-selected":h===t,key:t,ref:e=>_.push(e),onKeyDown:D,onFocus:T,onClick:T},o,{className:(0,d.Z)("tabs__item",u.tabItem,o?.className,{"tabs__item--active":h===t})}),n??t)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===h))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==h})))))}function c(e){const t=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},44977:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var a=n(83117),r=(n(67294),n(3905)),o=n(9877),l=n(72360);const i={sidebar_position:7,title:"Deduplicate",id:"deduplicate",description:"Remove rows with duplicate values of specified columns",tags:["gems","dedupe","distinct","unique"]},s=void 0,d={unversionedId:"low-code-spark/gems/transform/deduplicate",id:"low-code-spark/gems/transform/deduplicate",title:"Deduplicate",description:"Remove rows with duplicate values of specified columns",source:"@site/docs/low-code-spark/gems/transform/deduplicate.md",sourceDirName:"low-code-spark/gems/transform",slug:"/low-code-spark/gems/transform/deduplicate",permalink:"/low-code-spark/gems/transform/deduplicate",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"dedupe",permalink:"/tags/dedupe"},{label:"distinct",permalink:"/tags/distinct"},{label:"unique",permalink:"/tags/unique"}],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Deduplicate",id:"deduplicate",description:"Remove rows with duplicate values of specified columns",tags:["gems","dedupe","distinct","unique"]},sidebar:"defaultSidebar",previous:{title:"Limit",permalink:"/low-code-spark/gems/transform/limit"},next:{title:"Set Operation",permalink:"/low-code-spark/gems/transform/set-operation"}},u={},p=[{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3},{value:"Rows to keep - <code>Any</code>",id:"rows-to-keep---any",level:4},{value:"Rows to keep - <code>First</code>",id:"rows-to-keep---first",level:4},{value:"Rows to keep - <code>Last</code>",id:"rows-to-keep---last",level:4},{value:"Rows to keep - <code>Unique Only</code>",id:"rows-to-keep---unique-only",level:4}],c={toc:p},m="wrapper";function k(e){let{components:t,...i}=e;return(0,r.kt)(m,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Removes rows with duplicate values of specified columns."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Dataframe"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Input dataframe"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Row to keep"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("inlineCode",{parentName:"td"},"Any"),": Keeps any one row among duplicates. Uses underlying ",(0,r.kt)("inlineCode",{parentName:"td"},"dropDuplicates")," construct",(0,r.kt)("br",null),"- ",(0,r.kt)("inlineCode",{parentName:"td"},"First"),": Keeps first occurrence of the duplicate row ",(0,r.kt)("br",null),"- ",(0,r.kt)("inlineCode",{parentName:"td"},"Last"),": Keeps last occurrence of the duplicate row ",(0,r.kt)("br",null),"- ",(0,r.kt)("inlineCode",{parentName:"td"},"Unique Only"),": Keeps rows that don't have duplicates ",(0,r.kt)("br",null)," Default is ",(0,r.kt)("inlineCode",{parentName:"td"},"Any")),(0,r.kt)("td",{parentName:"tr",align:"left"},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Deduplicate columns"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Columns to consider while removing duplicate rows"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Order columns"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Columns to sort Dataframe on before de-duping in case of ",(0,r.kt)("inlineCode",{parentName:"td"},"First")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"Last")," rows to keep"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False")))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"rows-to-keep---any"},"Rows to keep - ",(0,r.kt)("inlineCode",{parentName:"h4"},"Any")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example usage of Deduplicate",src:n(82227).Z,width:"940",height:"283"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def dedup(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.dropDuplicates(["tran_id"])\n'))),(0,r.kt)(l.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object dedup {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame = {\n    in.dropDuplicates(List("tran_id"))\n  }\n}\n')))),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"rows-to-keep---first"},"Rows to keep - ",(0,r.kt)("inlineCode",{parentName:"h4"},"First")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example usage of Deduplicate - First",src:n(75554).Z,width:"2000",height:"845"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def earliest_cust_order(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn(\n          "row_number",\n          row_number()\\\n            .over(Window\\\n            .partitionBy("customer_id")\\\n            .orderBy(col("order_dt").asc())\\\n            .rowsBetween(Window.unboundedPreceding, Window.currentRow))\n        )\\\n        .filter(col("row_number") == lit(1))\\\n        .drop("row_number")\n'))),(0,r.kt)(l.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object earliest_cust_order {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame = {\n    import org.apache.spark.sql.expressions.Window\n    in.withColumn(\n        "row_number",\n        row_number().over(\n          Window\n            .partitionBy("customer_id")\n            .orderBy(col("order_date").asc)\n            .rowsBetween(Window.unboundedPreceding, Window.currentRow)\n        )\n      )\n      .filter(col("row_number") === lit(1))\n      .drop("row_number")\n  }\n}\n')))),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"rows-to-keep---last"},"Rows to keep - ",(0,r.kt)("inlineCode",{parentName:"h4"},"Last")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example usage of Deduplicate - Last",src:n(90146).Z,width:"3974",height:"1678"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def latest_cust_order(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn(\n          "row_number",\n          row_number()\\\n            .over(Window\\\n            .partitionBy("customer_id")\\\n            .orderBy(col("order_dt").asc())\\\n            .rowsBetween(Window.unboundedPreceding, Window.currentRow))\n        )\\\n        .withColumn(\n          "count",\n          count("*")\\\n            .over(Window\\\n            .partitionBy("customer_id")\\\n            .orderBy(col("order_dt").asc())\\\n            .rowsBetween(Window.unboundedPreceding, Window.unboundedFollowing))\n        )\\\n        .filter(col("row_number") == col("count"))\\\n        .drop("row_number")\\\n        .drop("count")\n'))),(0,r.kt)(l.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object latest_cust_order {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame = {\n    import org.apache.spark.sql.expressions.Window\n    in.withColumn(\n        "row_number",\n        row_number().over(\n          Window\n            .partitionBy("customer_id")\n            .orderBy(col("order_date").asc)\n            .rowsBetween(Window.unboundedPreceding, Window.currentRow)\n        )\n      )\n      .withColumn(\n        "count",\n        count("*").over(\n          Window\n            .partitionBy("customer_id")\n            .orderBy(col("order_date").asc)\n            .rowsBetween(Window.unboundedPreceding, Window.unboundedFollowing)\n        )\n      )\n      .filter(col("row_number") === col("count"))\n      .drop("row_number")\n      .drop("count")\n  }\n}\n')))),(0,r.kt)("h4",{id:"rows-to-keep---unique-only"},"Rows to keep - ",(0,r.kt)("inlineCode",{parentName:"h4"},"Unique Only")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example usage of Deduplicate - Unique",src:n(60767).Z,width:"1906",height:"809"})),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def single_order_customers(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn(\n          "count",\n          count("*")\\\n            .over(Window\\\n            .partitionBy("customer_id")\\\n            .orderBy(col("order_dt").asc())\\\n            .rowsBetween(Window.unboundedPreceding, Window.unboundedFollowing))\n        )\\\n        .filter(col("count") == lit(1))\\\n        .drop("count")\n'))),(0,r.kt)(l.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object single_order_customers {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame = {\n    import org.apache.spark.sql.expressions.Window\n    in.withColumn(\n        "count",\n        count("*").over(\n          Window\n            .partitionBy("customer_id")\n            .orderBy(col("order_date").asc)\n            .rowsBetween(Window.unboundedPreceding, Window.unboundedFollowing)\n        )\n      )\n      .filter(col("count") === lit(1))\n      .drop("count")\n  }\n\n}\n')))))}k.isMDXComponent=!0},75554:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dedup_eg_first-332e45b4e9c2056f28e516fab0a25776.png"},90146:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dedup_eg_last-bb06dca08a11dc0d78e142cddf134ea6.png"},60767:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dedup_eg_unique-1265d14fa8c45ec25a4bdd2e874deb6b.png"},82227:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/deduplicate_eg_1-31f75cb0d1229ebd70c3aa9de7c45f13.png"}}]);