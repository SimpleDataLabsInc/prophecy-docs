"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[4111],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(a),c=r,k=p["".concat(s,".").concat(c)]||p[c]||m[c]||l;return a?n.createElement(k,o(o({ref:t},u),{},{components:a})):n.createElement(k,o({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>y});var n=a(87462),r=a(67294),l=a(86010),o=a(12466),i=a(16550),s=a(91980),d=a(67392),u=a(50012);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,d]=k({queryString:a,groupId:n}),[p,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),f=(()=>{const e=s??p;return c({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),g(e)}),[d,g,l]),tabValues:l}}var f=a(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,a=u.indexOf(t),n=d[a].value;n!==i&&(p(t),s(n))},c=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},d.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:c,onClick:m},o,{className:(0,l.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function h(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=g(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(N,(0,n.Z)({},e,t)),r.createElement(h,(0,n.Z)({},e,t)))}function y(e){const t=(0,f.Z)();return r.createElement(w,(0,n.Z)({key:String(t)},e))}},1217:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(67294),r=a(44996);const l=e=>{let{children:t}=e;return n.createElement("div",{style:{position:"relative",display:"flex","justify-content":"center","align-items":"center"}},t)},o=e=>{let{source:t,children:a}=e;return n.createElement("img",{src:(0,r.Z)(t),style:{"object-fit":"cover"}})},i=e=>{let{slides:t}=e;const[a,r]=(0,n.useState)(0);return n.createElement(l,null,n.createElement("i",{class:"fa fa-chevron-left",onClick:()=>{r(0===a?t.length-1:a-1)},style:{position:"absolute",top:"50%",left:"0px","font-size":"2rem"}}),n.createElement("i",{class:"fa fa-chevron-right",onClick:()=>{r(a===t.length-1?0:a+1)},style:{position:"absolute",top:"50%",right:"0px","font-size":"2rem"}}),n.createElement("div",{style:{padding:"30px"}},n.createElement(o,{source:t[a].image}),t[a].description))};function s(e){let{ImageData:t}=e;return n.createElement(i,{slides:t,style:{"font-family":" sans-serif","text-align":"center"}})}},38992:(e,t,a)=>{a.r(t),a.d(t,{ImageData:()=>m,ImageData2:()=>k,assets:()=>p,contentTitle:()=>d,default:()=>b,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=a(87462),r=(a(67294),a(3905)),l=a(1217),o=a(74866),i=a(85162);const s={title:"Snowflake",id:"snowflake",description:"Snowflake",sidebar_position:1,tags:["gems","warehouse","snowflake"]},d=void 0,u={unversionedId:"low-code-spark/gems/source-target/warehouse/snowflake",id:"low-code-spark/gems/source-target/warehouse/snowflake",title:"Snowflake",description:"Snowflake",source:"@site/docs/low-code-spark/gems/source-target/warehouse/snowflake.md",sourceDirName:"low-code-spark/gems/source-target/warehouse",slug:"/low-code-spark/gems/source-target/warehouse/snowflake",permalink:"/low-code-spark/gems/source-target/warehouse/snowflake",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"warehouse",permalink:"/tags/warehouse"},{label:"snowflake",permalink:"/tags/snowflake"}],version:"current",sidebarPosition:1,frontMatter:{title:"Snowflake",id:"snowflake",description:"Snowflake",sidebar_position:1,tags:["gems","warehouse","snowflake"]},sidebar:"defaultSidebar",previous:{title:"MongoDB",permalink:"/low-code-spark/gems/source-target/warehouse/mongodb"},next:{title:"Redshift",permalink:"/low-code-spark/gems/source-target/warehouse/redshift"}},p={},m=[{image:"img/snowflake/load/1.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Source Component")},{image:"img/snowflake/load/2.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"img/snowflake/load/3.png",description:(0,r.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the SNOWFLAKE format under WAREHOUSE type")},{image:"img/snowflake/load/4.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 4 - Enter Connection details")},{image:"img/snowflake/load/5.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 5 - Click 'Infer Schema' to fetch schema details")},{image:"img/snowflake/load/6.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 6 - Hit 'Refresh' to preview data ")}],c=[{value:"Source",id:"source",level:2},{value:"Source Parameters",id:"source-parameters",level:3},{value:"Example",id:"source-example",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target",id:"target",level:2},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Supported Write Modes",id:"supported-write-modes",level:3},{value:"Example",id:"target-example",level:3},{value:"Generated Code",id:"target-code",level:3}],k=[{image:"/img/snowflake/write/1.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Target Component")},{image:"/img/snowflake/write/2.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"/img/snowflake/write/3.png",description:(0,r.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the SNOWFLAKE format under WAREHOUSE type")},{image:"/img/snowflake/write/4.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 4 - Enter Connection details")},{image:"/img/snowflake/write/5.png",description:(0,r.kt)("h3",{style:{padding:"10px"}},"Step 5 - Define 'Write Mode' and optionally provide 'Post-Script SQL'")}],g={ImageData:m,toc:c,ImageData2:k},f="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Allows read and write operations on ",(0,r.kt)("inlineCode",{parentName:"p"},"Snowflake")),(0,r.kt)("h2",{id:"source"},"Source"),(0,r.kt)("h3",{id:"source-parameters"},"Source Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Credential Type"),(0,r.kt)("td",{parentName:"tr",align:null},"Credential Type: ",(0,r.kt)("inlineCode",{parentName:"td"},"Databricks Secrets")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"Username & Password")),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Credentials"),(0,r.kt)("td",{parentName:"tr",align:null},"Databricks credential name , else username and password for the snowflake account"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"Databricks Secrets"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Username"),(0,r.kt)("td",{parentName:"tr",align:null},"Login name for the Snowflake user"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Password"),(0,r.kt)("td",{parentName:"tr",align:null},"Password for the Snowflake user"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Url"),(0,r.kt)("td",{parentName:"tr",align:null},"Hostname for your account in the format: ",(0,r.kt)("inlineCode",{parentName:"td"},"<account_identifier>.snowflakecomputing.com"),". ",(0,r.kt)("br",null)," Eg: ",(0,r.kt)("inlineCode",{parentName:"td"},"https://DJ07623.ap-south-1.aws.snowflakecomputing.com")),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Database"),(0,r.kt)("td",{parentName:"tr",align:null},"Database to use for the session after connecting"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Schema"),(0,r.kt)("td",{parentName:"tr",align:null},"Schema to use for the session after connecting"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Warehouse"),(0,r.kt)("td",{parentName:"tr",align:null},"The default virtual warehouse to use for the session after connecting"),(0,r.kt)("td",{parentName:"tr",align:null},"False")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Data Source"),(0,r.kt)("td",{parentName:"tr",align:null},"Strategy to read data: ",(0,r.kt)("inlineCode",{parentName:"td"},"DB Table")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"SQL Query"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Table"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the table to be read. All columns and records are retrieved (i.e. it is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SELECT * FROM table"),")."),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Data Source")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"DB Table"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SQL Query"),(0,r.kt)("td",{parentName:"tr",align:null},"The exact query (",(0,r.kt)("inlineCode",{parentName:"td"},"SELECT")," statement) to run"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Data Source")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"SQL Query"))))),(0,r.kt)("h3",{id:"source-example"},"Example"),(0,r.kt)(l.Z,{ImageData:m,mdxType:"App"}),(0,r.kt)("h3",{id:"source-code"},"Generated Code"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def sf_customer(spark: SparkSession) -> DataFrame:\n    from pyspark.dbutils import DBUtils\n    return spark.read\\\n        .format("snowflake")\\\n        .options(\n          **{\n            "sfUrl": "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n            "sfUser": "anshuman",\n            "sfPassword": "*******",\n            "sfDatabase": "SNOWFLAKE_SAMPLE_DATA",\n            "sfSchema": "TPCDS_SF100TCL",\n            "sfWarehouse": "COMPUTE_WH"\n          }\n        )\\\n        .option("dbtable", "CUSTOMER")\\\n        .load()\n'))),(0,r.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object sf_customer {\n  def apply(spark: SparkSession): DataFrame = {\n    import com.databricks.dbutils_v1.DBUtilsHolder.dbutils\n    var reader = spark.read\n      .format("snowflake")\n      .options(\n        Map(\n          "sfUrl" \u2192 "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n          "sfUser" \u2192 "anshuman",\n          "sfPassword" \u2192 "******",\n          "sfDatabase" \u2192 "SNOWFLAKE_SAMPLE_DATA",\n          "sfSchema" \u2192 "TPCDS_SF100TCL",\n          "sfWarehouse" \u2192 "COMPUTE_WH"\n        )\n      )\n    reader = reader.option("dbtable", "CUSTOMER")\n    reader.load()\n  }\n}\n')))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"target"},"Target"),(0,r.kt)("h3",{id:"target-parameters"},"Target Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Credential Type"),(0,r.kt)("td",{parentName:"tr",align:null},"Credential Type: ",(0,r.kt)("inlineCode",{parentName:"td"},"Databricks Secrets")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"Username & Password")),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Credentials"),(0,r.kt)("td",{parentName:"tr",align:null},"Databricks credential name , else username and password for the snowflake account"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"Databricks Secrets"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Username"),(0,r.kt)("td",{parentName:"tr",align:null},"Login name for the snowflake user"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Password"),(0,r.kt)("td",{parentName:"tr",align:null},"Password for the snowflake user"),(0,r.kt)("td",{parentName:"tr",align:null},"Required if ",(0,r.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Url"),(0,r.kt)("td",{parentName:"tr",align:null},"Hostname for your account in the format: ",(0,r.kt)("inlineCode",{parentName:"td"},"<account_identifier>.snowflakecomputing.com"),". ",(0,r.kt)("br",null)," Eg: ",(0,r.kt)("inlineCode",{parentName:"td"},"https://DJ07623.ap-south-1.aws.snowflakecomputing.com")),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Database"),(0,r.kt)("td",{parentName:"tr",align:null},"Database to use for the session after connecting"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Schema"),(0,r.kt)("td",{parentName:"tr",align:null},"Schema to use for the session after connecting"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Warehouse"),(0,r.kt)("td",{parentName:"tr",align:null},"The default virtual warehouse to use for the session after connecting"),(0,r.kt)("td",{parentName:"tr",align:null},"False")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Table"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the table to which data is to be written."),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Write Mode"),(0,r.kt)("td",{parentName:"tr",align:null},"How to handle existing data. See ",(0,r.kt)("a",{parentName:"td",href:"#supported-write-modes"},"this table")," for a list of available options."),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Post-Script SQL"),(0,r.kt)("td",{parentName:"tr",align:null},"DDL/DML SQL statements to execute before writing data.",(0,r.kt)("br",null)," It is intended for statements that do not return a result set, for example DDL statements like ",(0,r.kt)("inlineCode",{parentName:"td"},"CREATE TABLE")," and DML statements like ",(0,r.kt)("inlineCode",{parentName:"td"},"INSERT, UPDATE, and DELETE"),".",(0,r.kt)("br",null)," It is not useful for statements that return a result set, such as ",(0,r.kt)("inlineCode",{parentName:"td"},"SELECT")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"SHOW")),(0,r.kt)("td",{parentName:"tr",align:null},"False")))),(0,r.kt)("h3",{id:"supported-write-modes"},"Supported Write Modes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Write Mode"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"overwrite"),(0,r.kt)("td",{parentName:"tr",align:null},"If data already exists, overwrite with the contents of the DataFrame")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"append"),(0,r.kt)("td",{parentName:"tr",align:null},"If data already exists, append the contents of the DataFrame")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ignore"),(0,r.kt)("td",{parentName:"tr",align:null},"If data already exists, do nothing with the contents of the DataFrame. This is similar to a ",(0,r.kt)("inlineCode",{parentName:"td"},"CREATE TABLE IF NOT EXISTS")," in SQL.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"error"),(0,r.kt)("td",{parentName:"tr",align:null},"If data already exists, throw an exception.")))),(0,r.kt)("h3",{id:"target-example"},"Example"),(0,r.kt)(l.Z,{ImageData:k,mdxType:"App"}),(0,r.kt)("h3",{id:"target-code"},"Generated Code"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def sf_customer(spark: SparkSession, in0: DataFrame):\n    from pyspark.dbutils import DBUtils\n    options = {\n        "sfUrl": "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n        "sfUser": "anshuman",\n        "sfPassword": "******",\n        "sfDatabase": "SNOWFLAKE_SAMPLE_DATA",\n        "sfSchema": "TPCDS_SF100TCL",\n        "sfWarehouse": "COMPUTE_WH"\n    }\n    spark.sparkContext._jvm.net.snowflake.spark.snowflake.Utils.runQuery(\n        spark.sparkContext._jvm.PythonUtils.toScalaMap(options),\n        "CREATE TABLE test_table(id INTEGER)"\n    )\n    writer = in0.write.format("snowflake").options(**options)\n    writer.option("dbtable", "test_table").mode("overwrite").save()\n'))),(0,r.kt)(i.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object sf_customer {\n  def apply(spark: SparkSession, in: DataFrame): Unit = {\n    import net.snowflake.spark.snowflake.Utils\n    import com.databricks.dbutils_v1.DBUtilsHolder.dbutils\n    val options = Map("sfUrl" \u2192 "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n                      "sfUser" \u2192 "anshuman",\n                      "sfPassword" \u2192 "******",\n                      "sfDatabase" \u2192 "SNOWFLAKE_SAMPLE_DATA",\n                      "sfSchema" \u2192 "TPCDS_SF100TCL",\n                      "sfWarehouse" \u2192 "COMPUTE_WH"\n    )\n    var writer = in.write.format("snowflake").options(options)\n    writer = writer.option("dbtable", "test_table")\n    writer = writer.mode("overwrite")\n    Utils.runQuery(options, "CREATE TABLE test_table(id INTEGER)")\n    writer.save()\n  }\n}\n')))))}b.isMDXComponent=!0}}]);