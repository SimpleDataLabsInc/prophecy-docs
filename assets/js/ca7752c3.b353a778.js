"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[5518],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>s});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var g=r.createContext({}),d=function(e){var t=r.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(g.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,g=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(a),m=n,s=u["".concat(g,".").concat(m)]||u[m]||y[m]||l;return a?r.createElement(s,o(o({ref:t},p),{},{components:a})):r.createElement(s,o({ref:t},p))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var g in t)hasOwnProperty.call(t,g)&&(i[g]=t[g]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},36910:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=a(58168),n=(a(96540),a(15680));const l={title:"Source & Target",id:"source-target",description:"Set of gems related to the input and output of data",tags:[]},o=void 0,i={unversionedId:"Spark/gems/source-target/source-target",id:"Spark/gems/source-target/source-target",title:"Source & Target",description:"Set of gems related to the input and output of data",source:"@site/docs/Spark/gems/source-target/source-target.md",sourceDirName:"Spark/gems/source-target",slug:"/Spark/gems/source-target/",permalink:"/Spark/gems/source-target/",draft:!1,tags:[],version:"current",frontMatter:{title:"Source & Target",id:"source-target",description:"Set of gems related to the input and output of data",tags:[]},sidebar:"defaultSidebar",previous:{title:"Standard Gems",permalink:"/Spark/gems/"},next:{title:"CSV",permalink:"/Spark/gems/source-target/file/csv"}},g={},d=[{value:"File",id:"file",level:2},{value:"Warehouse",id:"warehouse",level:2},{value:"Catalog",id:"catalog",level:2},{value:"Lookup",id:"lookup",level:2}],p={toc:d},u="wrapper";function y(e){let{components:t,...a}=e;return(0,n.yg)(u,(0,r.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Constitutes the set of Gems that help with loading and saving data."),(0,n.yg)("h2",{id:"file"},"File"),(0,n.yg)("p",null,"A collection of Gems related to working with various file-based formats."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/csv"},"CSV")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write a delimited file (often called Comma Separated File, CSV)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/parquet"},"Parquet")),(0,n.yg)("td",{parentName:"tr",align:null},"Parquet is an open source file format built to handle flat columnar storage data formats.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/avro"},"Avro")),(0,n.yg)("td",{parentName:"tr",align:null},"Avro format is a row-based storage format for Hadoop, which is widely used as a serialization platform.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/text"},"Text")),(0,n.yg)("td",{parentName:"tr",align:null},"This Gem allows you to read from or write to text file.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/delta"},"Delta")),(0,n.yg)("td",{parentName:"tr",align:null},"Reads data from Delta files present at a path and writes Delta files to a path based on configuration.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/json"},"JSON")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write a delimited file (often called Comma Separated File, CSV)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/orc"},"ORC")),(0,n.yg)("td",{parentName:"tr",align:null},"ORC (Optimized Row Columnar) is a columnar file format designed for Spark/Hadoop workloads.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/fixed-format"},"Fixed Format")),(0,n.yg)("td",{parentName:"tr",align:null},"Read data from fixed format files with expected schema, or write data to fixed format files with expected schema.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/kafka"},"Kafka")),(0,n.yg)("td",{parentName:"tr",align:null},"This source currently connects with Kafka Brokers in Batch mode.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/xlsx"},"XLSX (Excel)")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write Excel-compatible files.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./file/ftp"},"FTP")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write files (csv, text and binary) on a remote location")))),(0,n.yg)("h2",{id:"warehouse"},"Warehouse"),(0,n.yg)("p",null,"A collection of Gems specializing in connecting to warehouse-style data sources."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/snowflake"},"Snowflake")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the Snowflake warehouse, using a high-performance connector. Enterprise only.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/redshift"},"Redshift")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the Redshift warehouse, using a high-performance connector. Enterprise only.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/teradata"},"Teradata")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the Teradata warehouse, using a high-performance connector. Enterprise only.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/jdbc"},"JDBC")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the JDBC database.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/oracle"},"Oracle")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the Oracle warehouse, using a high-performance connector. Enterprise only.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/db2"},"DB2")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the DB2 warehouse, using a high-performance connector. Enterprise only.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./warehouse/bigquery"},"BigQuery")),(0,n.yg)("td",{parentName:"tr",align:null},"Allows you to read or write data to the BigQuery warehouse, using a high-performance connector. Enterprise only.")))),(0,n.yg)("h2",{id:"catalog"},"Catalog"),(0,n.yg)("p",null,"A collection of Gems related to working with various table-based formats."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./catalog-table/hive"},"Hive")),(0,n.yg)("td",{parentName:"tr",align:null},"Read from or write to Tables managed by a Hive metastore")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"./catalog-table/delta"},"Delta")),(0,n.yg)("td",{parentName:"tr",align:null},"Reads data from Delta tables saved in data catalog and writes data into Delta table in a managed Metastore.")))),(0,n.yg)("h2",{id:"lookup"},"Lookup"),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"./lookup"},"Lookup")," is a special component that allows you to broadcast any data, to later be used anywhere in your Pipeline."))}y.isMDXComponent=!0}}]);