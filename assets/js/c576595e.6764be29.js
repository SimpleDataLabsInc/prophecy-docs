"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[1556],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>N});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,N=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(N,o(o({ref:t},u),{},{components:n})):r.createElement(N,o({ref:t},u))}));function N(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},50766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={title:"Execution Metrics",id:"execution-metrics",description:"Execution Metrics",sidebar_position:2,tags:["execution","metrics","spark"]},o=void 0,s={unversionedId:"low-code-spark/execution/execution-metrics",id:"low-code-spark/execution/execution-metrics",title:"Execution Metrics",description:"Execution Metrics",source:"@site/docs/low-code-spark/execution/execution-metrics.md",sourceDirName:"low-code-spark/execution",slug:"/low-code-spark/execution/execution-metrics",permalink:"/low-code-spark/execution/execution-metrics",draft:!1,tags:[{label:"execution",permalink:"/tags/execution"},{label:"metrics",permalink:"/tags/metrics"},{label:"spark",permalink:"/tags/spark"}],version:"current",sidebarPosition:2,frontMatter:{title:"Execution Metrics",id:"execution-metrics",description:"Execution Metrics",sidebar_position:2,tags:["execution","metrics","spark"]},sidebar:"defaultSidebar",previous:{title:"Interactive Execution",permalink:"/low-code-spark/execution/interactive-execution"},next:{title:"Execution on Databricks",permalink:"/low-code-spark/execution/executions_on_databricks_clusters"}},l={},c=[{value:"What are execution metrics?",id:"what-are-execution-metrics",level:3},{value:"Team level access-control",id:"team-level-access-control",level:3},{value:"Pre-requisite",id:"pre-requisite",level:3},{value:"Create Table",id:"create-table",level:3},{value:"Restrictions",id:"restrictions",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"what-are-execution-metrics"},"What are execution metrics?"),(0,a.kt)("p",null,"When running Pipelines and Jobs, you may be interested to know few metrics related to execution like records\nread/written, bytes read/written, total time taken and Data samples between components. These Dataset, Pipeline-run and\nJob-run related metrics are accumulated and stored on your data plane and can be viewed later from Prophecy UI."),(0,a.kt)("h3",{id:"team-level-access-control"},"Team level access-control"),(0,a.kt)("p",null,"For clusters with table ACL enabled, users may have limited access on catalogs, schemas and tables. Here we advise\nusers to setup the execution metrics tables beforehand. Data is stored in the workspace storage itself and the\ntables can be chosen from Team view in Prophecy UI.\nYou will have the option to choose the following at the time of team creation:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Pipeline Metrics Table - contains metrics and code for Pipeline runs"),(0,a.kt)("li",{parentName:"ol"},"Component (Dataset) Metrics Table - contains metrics for individual component runs"),(0,a.kt)("li",{parentName:"ol"},"Interim Table - contains samples of data, depending on the interim mode selected")),(0,a.kt)("h3",{id:"pre-requisite"},"Pre-requisite"),(0,a.kt)("p",null,"Workspace / Catalog Admin will have to create tables and grant appropriate permissions to the users if they choose\nto mention tables of their choice.\nIt is recommended that this should be done at the time of team creation itself, to ensure best experience for the users.\nDDLs and Grant accesses are defined below"),(0,a.kt)("h3",{id:"create-table"},"Create Table"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Pipeline Metrics"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"  CREATE TABLE IF NOT EXISTS <database.pipeline_runs_table_name>\n  (\n      uid STRING NOT NULL,\n      pipeline_uri STRING NOT NULL,\n      job_uri STRING,\n      job_run_uid STRING NOT NULL,\n      task_run_uid STRING NOT NULL,\n      status STRING,\n      fabric_uid STRING NOT NULL,\n      time_taken LONG,\n      rows_read LONG,\n      rows_written LONG,\n      created_at TIMESTAMP,\n      created_by STRING NOT NULL,\n      run_type STRING,\n      input_datasets ARRAY<STRING>,\n      output_datasets ARRAY<STRING>,\n      workflow_code MAP<STRING, STRING>,\n      expired Boolean,\n      branch STRING,\n      pipeline_config STRING,\n      user_config STRING\n  )\n  USING DELTA\n  PARTITIONED BY (fabric_uid, pipeline_uri, created_by)\n  LOCATION '<table_path>'\n  TBLPROPERTIES (delta.autoOptimize.optimizeWrite = true, delta.autoOptimize.autoCompact = true)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Component Metrics"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"  CREATE TABLE IF NOT EXISTS <database.component_runs_table_name>\n  (\n      uid STRING NOT NULL,\n      component_uri STRING NOT NULL,\n      pipeline_uri STRING NOT NULL,\n      pipeline_run_uid String NOT NULL,\n      fabric_uid String NOT NULL,\n      component_name STRING NOT NULL,\n      interim_component_name STRING NOT NULL,\n      component_type STRING NOT NULL,\n      interim_subgraph_name STRING NOT NULL,\n      interim_process_id STRING NOT NULL,\n      interim_out_port STRING NOT NULL,\n      created_at TIMESTAMP NOT NULL,\n      created_by STRING NOT NULL,\n      records LONG,\n      bytes LONG,\n      partitions LONG,\n      expired BOOLEAN NOT NULL,\n      run_type STRING,\n      job_uri STRING,\n      branch STRING\n  )\n  USING DELTA\n  PARTITIONED BY (fabric_uid, component_uri, created_by)\n  LOCATION '<table_path>\n  TBLPROPERTIES (delta.autoOptimize.optimizeWrite = true, delta.autoOptimize.autoCompact = true)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Interims"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"  CREATE TABLE IF NOT EXISTS <database.interims_table_name>\n  (\n      uid STRING NOT NULL,\n      interim STRING NOT NULL,\n      created_by STRING NOT NULL,\n      created_at TIMESTAMP,\n      fabric_uid STRING NOT NULL\n  )\n  USING DELTA\n  PARTITIONED BY (created_by, fabric_uid)\n  LOCATION '<table_path>'\n  TBLPROPERTIES (delta.autoOptimize.optimizeWrite = true, delta.autoOptimize.autoCompact = true)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Grant permissions"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"  GRANT USAGE ON SCHEMA <database> TO group1;\n  GRANT USAGE ON SCHEMA <database> TO group2;\n\n  GRANT SELECT ON <database.component-runs-table> TO group1;\n  GRANT SELECT ON <database.component-runs-table> TO group2;\n  GRANT MODIFY ON <database.component-runs-table> TO group1;\n  GRANT MODIFY ON <database.component-runs-table> TO group2;\n\n  GRANT SELECT ON <database.pipeline-runs-table> TO group1;\n  GRANT SELECT ON <database.pipeline-runs-table> TO group2;\n  GRANT MODIFY ON <database.pipeline-runs-table> TO group1;\n  GRANT MODIFY ON <database.pipeline-runs-table> TO group2;\n\n  GRANT SELECT ON <database.interims-table> TO group1;\n  GRANT SELECT ON <database.interims-table> TO group2;\n  GRANT MODIFY ON <database.interims-table> TO group1;\n  GRANT MODIFY ON <database.interims-table> TO group2;\n")),(0,a.kt)("h3",{id:"restrictions"},"Restrictions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reading execution metrics from High-Concurrency Clusters with Table-ACL enabled is supported in Databricks\nRuntimes 11.0 or below"),(0,a.kt)("li",{parentName:"ul"},"Shared Access mode in Unity Catalog enabled workspaces is not supported")))}d.isMDXComponent=!0}}]);