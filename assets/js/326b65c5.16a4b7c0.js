"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[10735],{15680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>c});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var g=n.createContext({}),p=function(e){var t=n.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(g.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,g=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(a),y=r,c=s["".concat(g,".").concat(y)]||s[y]||d[y]||l;return a?n.createElement(c,i(i({ref:t},m),{},{components:a})):n.createElement(c,i({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=y;var o={};for(var g in t)hasOwnProperty.call(t,g)&&(o[g]=t[g]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>i});var n=a(96540),r=a(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,i),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>D});var n=a(58168),r=a(96540),l=a(20053),i=a(23104),o=a(56347),g=a(57485),p=a(31682),m=a(89466);function s(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??s(a);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function y(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function c(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.W6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,g.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=d(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!y({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[g,p]=c({queryString:a,groupId:n}),[s,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,m.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),u=(()=>{const e=g??s;return y({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{u&&o(u)}),[u]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!y({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),f(e)}),[p,f,l]),tabValues:l}}var u=a(92303);const N={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:a,selectedValue:o,selectValue:g,tabValues:p}=e;const m=[],{blockElementScrollPositionUntilNextRender:s}=(0,i.a_)(),d=e=>{const t=e.currentTarget,a=m.indexOf(t),n=p[a].value;n!==o&&(s(t),g(n))},y=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=m.indexOf(e.currentTarget)+1;t=m[a]??m[0];break}case"ArrowLeft":{const a=m.indexOf(e.currentTarget)-1;t=m[a]??m[m.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>m.push(e),onKeyDown:y,onClick:d},i,{className:(0,l.A)("tabs__item",N.tabItem,i?.className,{"tabs__item--active":o===t})}),a??t)})))}function b(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function _(e){const t=f(e);return r.createElement("div",{className:(0,l.A)("tabs-container",N.tabList)},r.createElement(h,(0,n.A)({},e,t)),r.createElement(b,(0,n.A)({},e,t)))}function D(e){const t=(0,u.A)();return r.createElement(_,(0,n.A)({key:String(t)},e))}},50728:(e,t,a)=>{a.d(t,{A:()=>r});var n=a(96540);function r(e){return n.createElement("div",null,e.python_package_name&&e.python_package_version&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},e.python_package_name),n.createElement("span",{className:"right"},e.python_package_version))),e.scala_package_name&&e.scala_package_version&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},e.scala_package_name),n.createElement("span",{className:"right"},e.scala_package_version))),e.python_lib&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},"ProphecyLibsPython"),n.createElement("span",{className:"right"},e.python_lib))),e.scala_lib&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},"ProphecyLibsScala"),n.createElement("span",{className:"right"},e.scala_lib))),e.uc_single&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Databricks UC Single Cluster"),n.createElement("span",{className:"right"},e.uc_single))),e.uc_shared&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/ucshared"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Databricks UC Shared"),n.createElement("span",{className:"right"},e.uc_shared))),e.livy&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/livy"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Livy"),n.createElement("span",{className:"right"},e.livy))),n.createElement("br",null),n.createElement("br",null))}},38998:(e,t,a)=>{a.r(t),a.d(t,{ImageData:()=>b,assets:()=>N,contentTitle:()=>f,default:()=>v,frontMatter:()=>c,metadata:()=>u,toc:()=>h});var n=a(58168),r=a(96540),l=a(15680),i=a(50728),o=a(11470),g=a(19365),p=a(86025);const m=e=>{let{children:t}=e;return r.createElement("div",{style:{position:"relative",display:"flex","justify-content":"center","align-items":"center"}},t)},s=e=>{let{source:t,children:a}=e;return r.createElement("img",{src:(0,p.A)(t),style:{"object-fit":"cover"}})},d=e=>{let{slides:t}=e;const[a,n]=(0,r.useState)(0);return r.createElement(m,null,r.createElement("i",{class:"fa fa-chevron-left",onClick:()=>{n(0===a?t.length-1:a-1)},style:{position:"absolute",top:"50%",left:"0px","font-size":"2rem"}}),r.createElement("i",{class:"fa fa-chevron-right",onClick:()=>{n(a===t.length-1?0:a+1)},style:{position:"absolute",top:"50%",right:"0px","font-size":"2rem"}}),r.createElement("div",{style:{padding:"30px"}},r.createElement(s,{source:t[a].image}),t[a].description))};function y(e){let{ImageData:t}=e;return r.createElement(d,{slides:t,style:{"font-family":" sans-serif","text-align":"center"}})}const c={title:"Join",id:"join",description:"Join one or more DataFrames on conditions",tags:["gems","join","inner","outer","left join","right join","hints","merge"]},f=void 0,u={unversionedId:"Spark/gems/join-split/join",id:"Spark/gems/join-split/join",title:"Join",description:"Join one or more DataFrames on conditions",source:"@site/docs/Spark/gems/join-split/join.md",sourceDirName:"Spark/gems/join-split",slug:"/Spark/gems/join-split/join",permalink:"/Spark/gems/join-split/join",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"join",permalink:"/tags/join"},{label:"inner",permalink:"/tags/inner"},{label:"outer",permalink:"/tags/outer"},{label:"left join",permalink:"/tags/left-join"},{label:"right join",permalink:"/tags/right-join"},{label:"hints",permalink:"/tags/hints"},{label:"merge",permalink:"/tags/merge"}],version:"current",frontMatter:{title:"Join",id:"join",description:"Join one or more DataFrames on conditions",tags:["gems","join","inner","outer","left join","right join","hints","merge"]},sidebar:"mySidebar",previous:{title:"CompareColumns",permalink:"/Spark/gems/join-split/compare-columns"},next:{title:"Repartition",permalink:"/Spark/gems/join-split/Repartition"}},N={},h=[{value:"Parameters",id:"parameters",level:2},{value:"Adding a new input",id:"adding-a-new-input",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1 - Join with three DataFrame inputs",id:"example-1---join-with-three-dataframe-inputs",level:3},{value:"Example 2 - Join with Hints",id:"example-2---join-with-hints",level:3},{value:"Example 3 - Join with Propagate Columns",id:"example-3---join-with-propagate-columns",level:3},{value:"Types of Join",id:"types-of-join",level:2},{value:"Table A",id:"table-a",level:3},{value:"Table B",id:"table-b",level:3},{value:"INNER JOIN",id:"inner-join",level:3},{value:"LEFT JOIN",id:"left-join",level:3},{value:"RIGHT JOIN",id:"right-join",level:3},{value:"FULL OUTER JOIN",id:"full-outer-join",level:3},{value:"LEFT SEMI JOIN",id:"left-semi-join",level:3},{value:"LEFT ANTI JOIN",id:"left-anti-join",level:3}],b=[{image:"/img/join/join-eg3-conditions.png",description:(0,l.yg)("h3",{style:{padding:"10px"}},"Step 1 - Specify join condition")},{image:"/img/join/join-eg3-expressions.png",description:(0,l.yg)("h3",{style:{padding:"10px"}},"Step 2 - Choose required columns from dataframe")},{image:"/img/join/join-eg3-advanced.png",description:(0,l.yg)("h3",{style:{padding:"10px"}},"Step 3 - Select Propagate all columns from in0")},{image:"/img/join/join-eg3-output.png",description:(0,l.yg)("h3",{style:{padding:"10px"}},"Output - Output with all columns from in0 and selected columns from in1")}],_={toc:h,ImageData:b},D="wrapper";function v(e){let{components:t,...r}=e;return(0,l.yg)(D,(0,n.A)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,l.yg)(i.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+",mdxType:"Requirements"}),(0,l.yg)("p",null,"Joins 2 or more DataFrames based on the given configuration."),(0,l.yg)("h2",{id:"parameters"},"Parameters"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Required"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"DataFrame 1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"First input DataFrame"),(0,l.yg)("td",{parentName:"tr",align:"left"},"True")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"DataFrame 2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Second input DataFrame"),(0,l.yg)("td",{parentName:"tr",align:"left"},"True")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"DataFrame N"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Nth input DataFrame"),(0,l.yg)("td",{parentName:"tr",align:"left"},"False")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Join Condition (Conditions tab)"),(0,l.yg)("td",{parentName:"tr",align:"left"},"The join condition specifies how the rows will be combined."),(0,l.yg)("td",{parentName:"tr",align:"left"},"True")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Type (Conditions tab)"),(0,l.yg)("td",{parentName:"tr",align:"left"},"The type of JOIN ",(0,l.yg)("inlineCode",{parentName:"td"},"(Inner, Full Outer, Left , Right , Left Semi, Left Anti)")),(0,l.yg)("td",{parentName:"tr",align:"left"},"True")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Where Clause (Conditions tab)"),(0,l.yg)("td",{parentName:"tr",align:"left"},(0,l.yg)("inlineCode",{parentName:"td"},"Filter")," applied after the Join operation"),(0,l.yg)("td",{parentName:"tr",align:"left"},"False")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Target column (Expressions)"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Output column name"),(0,l.yg)("td",{parentName:"tr",align:"left"},"False")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Expression (Expressions)"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Expression to compute target column. If no expression is given, then all columns from all DataFrames would reflect in output."),(0,l.yg)("td",{parentName:"tr",align:"left"},"False")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Hint Type (Advanced)"),(0,l.yg)("td",{parentName:"tr",align:"left"},"The type of Join Hint (",(0,l.yg)("inlineCode",{parentName:"td"},"Broadcast"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"Merge"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"Shuffle Hash"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"Shuffle Replicate NL")," or ",(0,l.yg)("inlineCode",{parentName:"td"},"None"),"). To read more about join hints ",(0,l.yg)("a",{parentName:"td",href:"https://developpaper.com/analysis-of-five-join-strategies-of-spark/"},"click here")),(0,l.yg)("td",{parentName:"tr",align:"left"},"False")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"Propagate All Columns (Advanced)"),(0,l.yg)("td",{parentName:"tr",align:"left"},"If ",(0,l.yg)("inlineCode",{parentName:"td"},"true"),", all columns from that DataFrame would be propagated to output DataFrame. Equivalent to selecting ",(0,l.yg)("inlineCode",{parentName:"td"},"df.*")," for the selected DataFrame."),(0,l.yg)("td",{parentName:"tr",align:"left"},"False")))),(0,l.yg)("h2",{id:"adding-a-new-input"},"Adding a new input"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"Click on the plus icon to add a new input."),(0,l.yg)("li",{parentName:"ol"},"Then add your condition expression for the newly added input.\n",(0,l.yg)("img",{alt:"Example usage of Join - Add new input to join gem",src:a(92826).A,width:"1616",height:"802"}))),(0,l.yg)("h2",{id:"examples"},"Examples"),(0,l.yg)("h3",{id:"example-1---join-with-three-dataframe-inputs"},"Example 1 - Join with three DataFrame inputs"),(0,l.yg)("p",null,(0,l.yg)("img",{alt:"Example usage of Join - Join three DataFrame inputs",src:a(87303).A,width:"1618",height:"806"})),(0,l.yg)(o.A,{mdxType:"Tabs"},(0,l.yg)(g.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},'def Join_1(spark: SparkSession, in0: DataFrame) -> DataFrame:\n        return in0\\\n        .alias("in0")\\\n        .join(in1.alias("in1"), (col("in0.customer_id") == col("in1.customer_id")), "inner")\\\n        .join(in2.alias("in2"), (col("in1.customer_id") == col("in2.customer_id")), "inner")\n'))),(0,l.yg)(g.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-scala"},'object Join_1 {\n   def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame, in2: DataFrame): DataFrame =\n    in0\n      .as("in0")\n      .join(in1.as("in1"), col("in0.customer_id") === col("in1.customer_id"), "inner")\n      .join(in2.as("in2"), col("in1.customer_id") === col("in2.customer_id"), "inner")\n}\n')))),(0,l.yg)("h3",{id:"example-2---join-with-hints"},"Example 2 - Join with Hints"),(0,l.yg)("p",null,"Join hints allow users to suggest the join strategy that Spark should use. For a quick overview, see Spark's Join Hints ",(0,l.yg)("a",{parentName:"p",href:"https://spark.apache.org/docs/3.0.0/sql-ref-syntax-qry-select-hints.html#join-hints"},"documentation"),"."),(0,l.yg)("p",null,(0,l.yg)("img",{alt:"Example usage of Join - Join with hints",src:a(68065).A,width:"1644",height:"668"})),(0,l.yg)(o.A,{mdxType:"Tabs"},(0,l.yg)(g.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},'def Join_1(spark: SparkSession, in0: DataFrame, in1: DataFrame, in2: DataFrame) -> DataFrame:\n    df1 = in1.hint("merge")\n\n    return in0\\\n        .alias("in0")\\\n        .hint("broadcast")\\\n        .join(df1.alias("in1"), col("in0.customer_id") == col("in1.customer_id"), "inner")\\\n        .join(in2.alias("in2"), col("in0.customer_id") == col("in1.customer_id"), "inner")\n'))),(0,l.yg)(g.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-scala"},'object Join_1 {\n   def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame, in2: DataFrame): DataFrame =\n    in0\n      .as("in0")\n      .hint("broadcast")\n      .join(in1.as("in1").hint("merge"), col("in0.customer_id") === col("in1.customer_id"), "inner")\n      .join(in2.as("in2"),               col("in1.customer_id") === col("in2.customer_id"), "inner")\n}\n')))),(0,l.yg)("h3",{id:"example-3---join-with-propagate-columns"},"Example 3 - Join with Propagate Columns"),(0,l.yg)(y,{ImageData:b,mdxType:"App"}),(0,l.yg)(o.A,{mdxType:"Tabs"},(0,l.yg)(g.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},'def Join_1(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:\n    return in0\\\n        .alias("in0")\\\n        .join(in1.alias("in1"), (col("in0.customer_id") == col("in1.customer_id")), "inner")\\\n        .select(*[col("in1.email").alias("email"), col("in1.phone").alias("phone")], col("in0.*"))\n'))),(0,l.yg)(g.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-scala"},'object Join_1 {\n\n  def apply(spark: SparkSession, in0: DataFrame, in1: DataFrame): DataFrame =\n    in0\n      .as("in0")\n      .join(in1.as("in1"), col("in0.customer_id") === col("in1.customer_id"), "inner")\n      .select(col("in1.phone").as("phone"), col("in1.email").as("email"), col("in0.*"))\n\n}\n')))),(0,l.yg)("h2",{id:"types-of-join"},"Types of Join"),(0,l.yg)("p",null,"Suppose there are 2 tables TableA and TableB with only 2 columns (Ref, Data) and following contents:"),(0,l.yg)("h3",{id:"table-a"},"Table A"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A12")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A13")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"3"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A31")))),(0,l.yg)("h3",{id:"table-b"},"Table B"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B22")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B23")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"4"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B41")))),(0,l.yg)("h3",{id:"inner-join"},"INNER JOIN"),(0,l.yg)("p",null,"Inner Join on column Ref will return columns from both the tables and only the matching records as long as the condition is satisfied:"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A11"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A12"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A13"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B22")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B23")))),(0,l.yg)("h3",{id:"left-join"},"LEFT JOIN"),(0,l.yg)("p",null,"Left Join (or Left Outer join) on column Ref will return columns from both the tables and match records with records from the left table. The result-set will contain null for the rows for which there is no matching row on the right side."),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A11"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A12"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A13"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B22")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B23")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"3"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A31"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL")))),(0,l.yg)("h3",{id:"right-join"},"RIGHT JOIN"),(0,l.yg)("p",null,"Right Join (or Right Outer join) on column Ref will return columns from both the tables and match records with records from the right table. The result-set will contain null for the rows for which there is no matching row on the left side."),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A11"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A12"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A13"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B22")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B23")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"4"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B41")))),(0,l.yg)("h3",{id:"full-outer-join"},"FULL OUTER JOIN"),(0,l.yg)("p",null,"Full Outer Join on column Ref will return columns from both the tables and matching records with records from the left table and records from the right table . The result-set will contain NULL values for the rows for which there is no matching."),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A11"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A12"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A13"),(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B22")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A21"),(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B23")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"3"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A31"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"4"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B41")))),(0,l.yg)("h3",{id:"left-semi-join"},"LEFT SEMI JOIN"),(0,l.yg)("p",null,"Left Semi Join on column Ref will return columns only from left table and matching records only from left table."),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B21")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"1"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B22")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"2"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B23")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"3"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_B41")))),(0,l.yg)("h3",{id:"left-anti-join"},"LEFT ANTI JOIN"),(0,l.yg)("p",null,"Left anti join on column Ref will return columns from the left for non-matched records :"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Ref"),(0,l.yg)("th",{parentName:"tr",align:"left"},"Data"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"3"),(0,l.yg)("td",{parentName:"tr",align:"left"},"Data_A31"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL"),(0,l.yg)("td",{parentName:"tr",align:"left"},"NULL")))))}v.isMDXComponent=!0},92826:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/add_new_input-2ce622c38f55019de1600c2bd52c1041.png"},68065:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/join_with_hints-0bed10c358bdb7a5a6710f283cf3704b.png"},87303:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/join_without_hints-3c24895b7c58f07bea0b290f5ca459f7.png"}}]);