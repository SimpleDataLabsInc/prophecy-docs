"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[41279],{8321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"analysts/development/gems/source-target/source-target","title":"Sources and Targets","description":"Source and target gems","source":"@site/docs/analysts/development/gems/source-target/source-target.md","sourceDirName":"analysts/development/gems/source-target","slug":"/analysts/source-target","permalink":"/analysts/source-target","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Sources and Targets","id":"source-target","slug":"/analysts/source-target","description":"Source and target gems","tags":[]},"sidebar":"mySidebar","previous":{"title":"Gems","permalink":"/analysts/gems"},"next":{"title":"Databricks","permalink":"/analysts/databricks-table"}}');var r=n(74848),a=n(28453),o=n(99563),i=n(89791);const c={title:"Sources and Targets",id:"source-target",slug:"/analysts/source-target",description:"Source and target gems",tags:[]},l=void 0,d={},u=[{value:"Gem types",id:"gem-types",level:2},{value:"Data formats",id:"data-formats",level:2},{value:"What&#39;s next",id:"whats-next",level:2}];function h(e){const t={a:"a",admonition:"admonition",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Table, Source, and Target gems define how Prophecy pipelines read data from a source or writing data to a destination. These gems handle interactions with both external systems and the ",(0,r.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/#connections",children:"SQL Warehouse Connection"})," defined in your Prophecy fabric."]}),"\n",(0,r.jsx)(t.p,{children:"Regardless of gem type, none of the data you read and write in a pipeline is persisted in Prophecy. All data is transformed in memory, and no data gets written to disk."}),"\n",(0,r.jsx)(t.h2,{id:"gem-types",children:"Gem types"}),"\n",(0,r.jsx)(t.p,{children:"Prophecy supports different gem types for reading from and writing to data sources."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Gem type"}),(0,r.jsx)(t.th,{children:"Data provider"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Table gem"}),(0,r.jsx)(t.td,{children:"Data warehouse"}),(0,r.jsxs)(t.td,{children:["Represents datasets in the in the ",(0,r.jsx)(t.a,{href:"/administration/fabrics/prophecy-fabrics/#connections",children:"SQL Warehouse Connection"})," of a Prophecy fabric. Tables can act as sources, targets, or intermediate stages in a pipeline."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Source gem"}),(0,r.jsx)(t.td,{children:"External system"}),(0,r.jsx)(t.td,{children:"Represents data (tables or files) stored in external platforms outside the SQL warehouse. Source gems provide input to a pipeline."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Target gem"}),(0,r.jsx)(t.td,{children:"External system"}),(0,r.jsx)(t.td,{children:"Represents data (tables or files) stored in external platforms outside the SQL warehouse. Target gems consume output from a pipeline."})]})]})]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"Source and target gems cannot serve as intermediate steps in a pipeline. Source gems only have output ports, and Target gems only have input ports."})}),"\n",(0,r.jsx)(t.admonition,{type:"caution",children:(0,r.jsx)(t.p,{children:"Pipeline performance depends on how your connections are configured. Processing native tables within the warehouse is more efficient than accessing external sources. Avoid setting up an external connection that points to the same warehouse defined in your fabric. This redundancy can lead to slower performance."})}),"\n",(0,r.jsx)(t.h2,{id:"data-formats",children:"Data formats"}),"\n",(0,r.jsx)(t.p,{children:"Prophecy supports the following data formats:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Tables from the connected SQL warehouse. These are accessed with Table gems."}),"\n",(0,r.jsx)(t.li,{children:"Tables from external systems. These are accessed with Source and Target gems."}),"\n",(0,r.jsx)(t.li,{children:"Files from external systems. These are accessed with Source and Target gems."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["To use external systems, you need to set up corresponding ",(0,r.jsx)(t.a,{href:"/analysts/connections",children:"connections"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"whats-next",children:"What's next"}),"\n",(0,r.jsx)(t.p,{children:"View the complete set of sources and targets in the following sections."}),"\n","\n",(0,r.jsx)(o.A,{items:(0,i.$S)().items})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(96540);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}},81430:(e,t,n)=>{n.d(t,{W:()=>l});var s=n(96540),r=n(40797);const a=["zero","one","two","few","many","other"];function o(e){return a.filter((t=>e.includes(t)))}const i={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,s.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),i}}),[e])}function l(){const e=c();return{selectMessage:(t,n)=>function(e,t,n){const s=e.split("|");if(1===s.length)return s[0];s.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${s.length}: ${e}`);const r=n.select(t),a=n.pluralForms.indexOf(r);return s[Math.min(a,s.length-1)]}(n,t,e)}}},89791:(e,t,n)=>{n.d(t,{$S:()=>s});n(40797);function s(){return n(56942).$S(...arguments)}},99563:(e,t,n)=>{n.d(t,{A:()=>y});n(96540);var s=n(18215),r=n(93751),a=n(56289),o=n(81430),i=n(22887),c=n(50539),l=n(9303);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=n(74848);function h(e){let{href:t,children:n}=e;return(0,u.jsx)(a.A,{href:t,className:(0,s.A)("card padding--lg",d.cardContainer),children:n})}function m(e){let{href:t,icon:n,title:r,description:a}=e;return(0,u.jsxs)(h,{href:t,children:[(0,u.jsxs)(l.A,{as:"h2",className:(0,s.A)("text--truncate",d.cardTitle),title:r,children:[n," ",r]}),a&&(0,u.jsx)("p",{className:(0,s.A)("text--truncate",d.cardDescription),title:a,children:a})]})}function p(e){let{item:t}=e;const n=(0,r.Nr)(t),s=function(){const{selectMessage:e}=(0,o.W)();return t=>e(t,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,u.jsx)(m,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??s(t.items.length)}):null}function f(e){let{item:t}=e;const n=(0,i.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",s=(0,r.cC)(t.docId??void 0);return(0,u.jsx)(m,{href:t.href,icon:n,title:t.label,description:t.description??s?.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return(0,u.jsx)(f,{item:t});case"category":return(0,u.jsx)(p,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function x(e){let{className:t}=e;const n=(0,r.$S)();return(0,u.jsx)(y,{items:n.items,className:t})}function y(e){const{items:t,className:n}=e;if(!t)return(0,u.jsx)(x,{...e});const a=(0,r.d1)(t);return(0,u.jsx)("section",{className:(0,s.A)("row",n),children:a.map(((e,t)=>(0,u.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,u.jsx)(g,{item:e})},t)))})}}}]);