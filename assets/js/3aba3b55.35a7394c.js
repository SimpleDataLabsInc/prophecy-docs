"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[15697],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>g});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return a?n.createElement(g,i(i({ref:t},p),{},{components:a})):n.createElement(g,i({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},50728:(e,t,a)=>{a.d(t,{A:()=>r});var n=a(96540);function r(e){return n.createElement("div",null,e.python_package_name&&e.python_package_version&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},e.python_package_name),n.createElement("span",{className:"right"},e.python_package_version))),e.scala_package_name&&e.scala_package_version&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/package-hub/"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},e.scala_package_name),n.createElement("span",{className:"right"},e.scala_package_version))),e.python_lib&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},"ProphecyLibsPython"),n.createElement("span",{className:"right"},e.python_lib))),e.scala_lib&&n.createElement("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries"},n.createElement("span",{className:"badge-dependency"},n.createElement("span",{className:"left"},"ProphecyLibsScala"),n.createElement("span",{className:"right"},e.scala_lib))),e.uc_single&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Databricks UC Single Cluster"),n.createElement("span",{className:"right"},e.uc_single))),e.uc_shared&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/databricks/ucshared"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Databricks UC Shared"),n.createElement("span",{className:"right"},e.uc_shared))),e.livy&&n.createElement("a",{href:"https://docs.prophecy.io/administration/Spark-fabrics/livy"},n.createElement("span",{className:"badge-spark"},n.createElement("span",{className:"left"},"Livy"),n.createElement("span",{className:"right"},e.livy))),n.createElement("br",null),n.createElement("br",null))}},34078:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(58168),r=(a(96540),a(15680)),l=a(50728);const i={title:"DataQualityCheck",id:"data-quality-check",description:"Ensure your data adhere to predefined constraints",tags:["gems","data quality"]},o=void 0,s={unversionedId:"Spark/gems/transform/data-quality-check",id:"Spark/gems/transform/data-quality-check",title:"DataQualityCheck",description:"Ensure your data adhere to predefined constraints",source:"@site/docs/Spark/gems/transform/data-quality-check.md",sourceDirName:"Spark/gems/transform",slug:"/Spark/gems/transform/data-quality-check",permalink:"/Spark/gems/transform/data-quality-check",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"data quality",permalink:"/tags/data-quality"}],version:"current",frontMatter:{title:"DataQualityCheck",id:"data-quality-check",description:"Ensure your data adhere to predefined constraints",tags:["gems","data quality"]},sidebar:"mySidebar",previous:{title:"DataCleansing",permalink:"/Spark/gems/transform/data-cleansing"},next:{title:"Deduplicate",permalink:"/Spark/gems/transform/deduplicate"}},c={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Cluster requirements",id:"cluster-requirements",level:3},{value:"Input and Output",id:"input-and-output",level:2},{value:"Data Quality Checks",id:"data-quality-checks",level:2},{value:"Post Actions",id:"post-actions",level:2},{value:"Code",id:"code",level:2}],u={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.yg)(m,(0,n.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)(l.A,{python_package_name:"ProphecySparkDataQualityPython",python_package_version:"0.0.1+",scala_package_name:"",scala_package_version:"",scala_lib:"8.2.1",python_lib:"1.9.16",uc_single:"14.3+",uc_shared:"Not Supported",livy:"Not Supported",mdxType:"Requirements"}),(0,r.yg)("p",null,"The DataQualityCheck gem includes a variety of checks that are built on the open source tool ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/awslabs/deequ"},"Deequ"),". Use this gem to make sure your data adheres to predefined constraints."),(0,r.yg)("h2",{id:"requirements"},"Requirements"),(0,r.yg)("h3",{id:"dependencies"},"Dependencies"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"ProphecySparkDataQualityPython 0.0.1+")),(0,r.yg)("h3",{id:"cluster-requirements"},"Cluster requirements"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Set the ",(0,r.yg)("inlineCode",{parentName:"li"},"SPARK_VERSION")," environment variable to a Spark version 3.3+"),(0,r.yg)("li",{parentName:"ul"},"Install the ",(0,r.yg)("a",{parentName:"li",href:"https://pypi.org/project/pydeequ/#:~:text=1.8%2B%2C%20we%20now%20officially%20support%20Spark3%20!"},"PyDeequ")," library on the cluster"),(0,r.yg)("li",{parentName:"ul"},"Install the ",(0,r.yg)("a",{parentName:"li",href:"https://mvnrepository.com/artifact/com.amazon.deequ/deequ"},"Maven Deequ")," library on the cluster (choose the version that matches your Spark version)")),(0,r.yg)("h2",{id:"input-and-output"},"Input and Output"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"DataFrame"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("strong",{parentName:"td"},"in0")),(0,r.yg)("td",{parentName:"tr",align:null},"Includes the DataFrame for which the data quality will be checked.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("strong",{parentName:"td"},"out0")),(0,r.yg)("td",{parentName:"tr",align:null},"Passes through the ",(0,r.yg)("strong",{parentName:"td"},"in0")," DataFrame unchanged.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("strong",{parentName:"td"},"out1")),(0,r.yg)("td",{parentName:"tr",align:null},"Outputs a DataFrame with the verification results and failure messages (if applicable) that you can define per check.")))),(0,r.yg)("h2",{id:"data-quality-checks"},"Data Quality Checks"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Check Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Success Criteria"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Completeness"),(0,r.yg)("td",{parentName:"tr",align:null},"Fraction of non-null values is greater than ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),". The default is 100% non-null.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Row count"),(0,r.yg)("td",{parentName:"tr",align:null},"Input DataFrame has at least ",(0,r.yg)("inlineCode",{parentName:"td"},"X")," number of rows.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Distinct count"),(0,r.yg)("td",{parentName:"tr",align:null},"Number of distinct values in selected columns is equal to ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Uniqueness"),(0,r.yg)("td",{parentName:"tr",align:null},"Values in selected columns are unique (occurring exactly once).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Data type"),(0,r.yg)("td",{parentName:"tr",align:null},"Selected columns have a certain data type.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Min-max length"),(0,r.yg)("td",{parentName:"tr",align:null},"Strings in selected columns have a minimum length of ",(0,r.yg)("inlineCode",{parentName:"td"},"X")," and a maximum length of ",(0,r.yg)("inlineCode",{parentName:"td"},"Y"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Total sum"),(0,r.yg)("td",{parentName:"tr",align:null},"Sum of values in selected columns is equal to ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Mean value"),(0,r.yg)("td",{parentName:"tr",align:null},"Mean of values in selected columns is equal to ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Standard deviation"),(0,r.yg)("td",{parentName:"tr",align:null},"Standard deviation of values in selected columns is equal to ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Non-negative value"),(0,r.yg)("td",{parentName:"tr",align:null},"Fraction of non-negative values is at least ",(0,r.yg)("inlineCode",{parentName:"td"},"X")," percent.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Positive value"),(0,r.yg)("td",{parentName:"tr",align:null},"Fraction of positive values is at least ",(0,r.yg)("inlineCode",{parentName:"td"},"X")," percent.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Lookup"),(0,r.yg)("td",{parentName:"tr",align:null},"Fraction of values in selected columns that match lookup values is at least ",(0,r.yg)("inlineCode",{parentName:"td"},"X")," percent.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to constant value greater than"),(0,r.yg)("td",{parentName:"tr",align:null},"Selected column values are greater than a constant value ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to constant value greater than or equal to"),(0,r.yg)("td",{parentName:"tr",align:null},"Selected column values are greater than or equal to a constant value ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to constant value less than"),(0,r.yg)("td",{parentName:"tr",align:null},"Selected column values are less than a constant value ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to constant value less than or equal to"),(0,r.yg)("td",{parentName:"tr",align:null},"Selected column values are less than or equal to a constant value ",(0,r.yg)("inlineCode",{parentName:"td"},"X"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to column greater than"),(0,r.yg)("td",{parentName:"tr",align:null},"All values in left column are greater than all values in right column.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to column greater than or equal to"),(0,r.yg)("td",{parentName:"tr",align:null},"All values in left column are greater than or equal to all values in right column.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to column less than"),(0,r.yg)("td",{parentName:"tr",align:null},"All values in left column are less than all values in right column.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Column to column less than or equal to"),(0,r.yg)("td",{parentName:"tr",align:null},"All values in left column are less than or equal to all values in right column.")))),(0,r.yg)("h2",{id:"post-actions"},"Post Actions"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Action"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Continue execution"),(0,r.yg)("td",{parentName:"tr",align:null},"Continue pipeline execution regardless of data quality success or failure.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Terminate execution"),(0,r.yg)("td",{parentName:"tr",align:null},"Stop pipeline execution after the DataQualityCheck gem runs based on a maximum number of failed checks. Review ",(0,r.yg)("a",{parentName:"td",href:"/concepts/project/gems#gem-phase"},"gem phases")," to understand the order in which gems run.")))),(0,r.yg)("h2",{id:"code"},"Code"),(0,r.yg)("p",null,"Each check is compiled into highly decipherable code. When you switch to the code view and open the DataQualityCheck file, you can see that every check includes a ",(0,r.yg)("strong",{parentName:"p"},"hint")," that populates the ",(0,r.yg)("strong",{parentName:"p"},"out1")," ",(0,r.yg)("em",{parentName:"p"},"constraint_message")," column if you do not define a custom failure message."))}d.isMDXComponent=!0}}]);