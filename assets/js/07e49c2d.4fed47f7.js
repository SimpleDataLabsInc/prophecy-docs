"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[48045],{15680:(e,a,t)=>{t.d(a,{xA:()=>l,yg:()=>m});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=r.createContext({}),p=function(e){var a=r.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},l=function(e){var a=p(e.components);return r.createElement(u.Provider,{value:a},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},h=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),g=p(t),h=n,m=g["".concat(u,".").concat(h)]||g[h]||c[h]||o;return t?r.createElement(m,s(s({ref:a},l),{},{components:t})):r.createElement(m,s({ref:a},l))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=h;var i={};for(var u in a)hasOwnProperty.call(a,u)&&(i[u]=a[u]);i.originalType=e,i[g]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},82987:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(58168),n=(t(96540),t(15680));const o={title:"Subgraph",id:"subgraph",description:"Work with Subgraphs by grouping your Gems in Parent Gems",tags:["subgraph","group","SQL"]},s=void 0,i={unversionedId:"SQL/gems/subgraph/subgraph",id:"SQL/gems/subgraph/subgraph",title:"Subgraph",description:"Work with Subgraphs by grouping your Gems in Parent Gems",source:"@site/docs/SQL/gems/subgraph/subgraph.md",sourceDirName:"SQL/gems/subgraph",slug:"/SQL/gems/subgraph/",permalink:"/SQL/gems/subgraph/",draft:!1,tags:[{label:"subgraph",permalink:"/tags/subgraph"},{label:"group",permalink:"/tags/group"},{label:"SQL",permalink:"/tags/sql"}],version:"current",frontMatter:{title:"Subgraph",id:"subgraph",description:"Work with Subgraphs by grouping your Gems in Parent Gems",tags:["subgraph","group","SQL"]},sidebar:"defaultSidebar",previous:{title:"Custom",permalink:"/SQL/gems/custom/"},next:{title:"Execution",permalink:"/SQL/execution/"}},u={},p=[{value:"Basic Subgraph",id:"basic-subgraph",level:2},{value:"Create a Basic Subgraph",id:"create-a-basic-subgraph",level:3},{value:"Run a Basic Subgraph",id:"run-a-basic-subgraph",level:3},{value:"Add/Remove Port",id:"addremove-port",level:3},{value:"Code view",id:"code-view",level:2},{value:"Subgraph Configurations",id:"subgraph-configurations",level:2}],l={toc:p},g="wrapper";function c(e){let{components:a,...o}=e;return(0,n.yg)(g,(0,r.A)({},l,o,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Subgraph allows you to take multiple distinct Gems and wrap them under a single parent Gem. Doing so can help you decompose complex logic into more manageable components and simplify the Visual view of your model."),(0,n.yg)("h2",{id:"basic-subgraph"},"Basic Subgraph"),(0,n.yg)("p",null,"Basic Subgraphs are single-use containers that capture one or more Gems within a model. They are the equivalent of a nested CTE."),(0,n.yg)("p",null,"If you want to create a complex model with large sets of Transform and Join Gems, you can use a Basic Subgraph to group them together. This organizational approach enhances the visual clarity of your model by grouping various sections together under a common parent Gem. Additionally, it empowers you to break down intricate logic into modular components, thereby streamlining your data transformation processes."),(0,n.yg)("h3",{id:"create-a-basic-subgraph"},"Create a Basic Subgraph"),(0,n.yg)("p",null,"You can create a Basic Subgraph the same way you create other Gems."),(0,n.yg)("p",null,"To create a Basic Subgraph, follow these steps:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Drag and drop the ",(0,n.yg)("strong",{parentName:"li"},"Subgraph")," Gem from the Subgraph menu, and connect it to any previously created Gem on your canvas.")),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"create_basic_subgraph",src:t(47784).A,width:"2620",height:"1507"})),(0,n.yg)("ol",{start:2},(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Once you've added the Gem, click on it to open the subgraph canvas.")),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"On the subgraph canvas, add Gems to your Basic Subgraph by dragging and dropping from the Gems menu. You can even add a subgraph within the subgraph to create a nested subgraph."))),(0,n.yg)("h3",{id:"run-a-basic-subgraph"},"Run a Basic Subgraph"),(0,n.yg)("p",null,"A Basic Subgraph is functionally equivalent to the sequence of Gems that it contains. You can run a Basic Subgraph to see the output."),(0,n.yg)("p",null,"To run a Basic Subgraph, follow this step:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"On the Basic Subgraph Gem, click on the play button,")),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"run_basic_subgraph",src:t(98713).A,width:"2620",height:"1536"})),(0,n.yg)("h3",{id:"addremove-port"},"Add/Remove Port"),(0,n.yg)("p",null,"Gems and subgraphs are operations or transformations that takes one or more tables as inputs. Therefore, Input ports signify the number of tables that a Basic Subgraph is taking in as inputs. There is no limit to the number of Input ports you can add."),(0,n.yg)("p",null,"While using a Subgraph, you can configure the number of Input ports as per the requirements. However, as with all SQL Gems, there can only be one Output port."),(0,n.yg)("p",null,"To add an Input port, follow these steps:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"On the subgraph canvas, click on the ",(0,n.yg)("strong",{parentName:"li"},"+")," button to add a new port."),(0,n.yg)("li",{parentName:"ol"},"Optional: You can click the ",(0,n.yg)("strong",{parentName:"li"},"Delete")," icon next to the input port you want to remove.")),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"add_remove_port",src:t(18008).A,width:"2620",height:"1507"})),(0,n.yg)("h2",{id:"code-view"},"Code view"),(0,n.yg)("p",null,"Normally from the Code view, we create one Gem per CTE. However, since subgraphs are represented as nested CTEs in code, one subgraph can represent multiple nested SQL statements."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"subgraph_code_view",src:t(47013).A,width:"2620",height:"1507"})),(0,n.yg)("p",null,"If you'd like, you can create a subgraph from the Code view by writing multiple nested statements. Then toggle back to the Visual view to see an auto-generated Subgraph Gem based on your defined transformations."),(0,n.yg)("h2",{id:"subgraph-configurations"},"Subgraph Configurations"),(0,n.yg)("p",null,"You can configure your subgraphs by using either:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Model-level configurations"),(0,n.yg)("li",{parentName:"ul"},"Project-level configurations")))}c.isMDXComponent=!0},18008:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/add-remove-subgraph-port-c5ddff6e74896bc46009b676a569e5d8.png"},47784:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/create-subgraph-95d23622a42f7cec13d7ec7253ef0f0b.png"},98713:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/run-subgraph-44ab1c625c5fe4d7af88d34f2452f051.png"},47013:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/subgraph-code-view-76a8d39380eae1e54bad5a9aea6b58de.png"}}]);