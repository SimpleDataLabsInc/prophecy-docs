"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[3115],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),u=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(a),p=n,f=m["".concat(i,".").concat(p)]||m[p]||d[p]||o;return a?r.createElement(f,l(l({ref:t},c),{},{components:a})):r.createElement(f,l({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[m]="string"==typeof e?e:n,l[1]=s;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(67294),n=a(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,l),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>w});var r=a(87462),n=a(67294),o=a(86010),l=a(12466),s=a(16550),i=a(91980),u=a(67392),c=a(50012);function m(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const r=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=d(e),[l,s]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[i,u]=f({queryString:a,groupId:r}),[m,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),b=(()=>{const e=i??m;return p({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var b=a(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==s&&(m(t),i(r))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:d},l,{className:(0,o.Z)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":s===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function y(e){const t=g(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},n.createElement(k,(0,r.Z)({},e,t)),n.createElement(v,(0,r.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return n.createElement(y,(0,r.Z)({key:String(t)},e))}},96625:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>u,toc:()=>m});var r=a(87462),n=(a(67294),a(3905)),o=a(74866),l=a(85162);const s={sidebar_position:1,title:"Reformat",id:"reformat",description:"Select one or more columns or values using expressions and functions.",tags:["gems","select","reformat","transform"]},i=void 0,u={unversionedId:"low-code-spark/gems/transform/reformat",id:"low-code-spark/gems/transform/reformat",title:"Reformat",description:"Select one or more columns or values using expressions and functions.",source:"@site/docs/low-code-spark/gems/transform/reformat.md",sourceDirName:"low-code-spark/gems/transform",slug:"/low-code-spark/gems/transform/reformat",permalink:"/low-code-spark/gems/transform/reformat",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"select",permalink:"/tags/select"},{label:"reformat",permalink:"/tags/reformat"},{label:"transform",permalink:"/tags/transform"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Reformat",id:"reformat",description:"Select one or more columns or values using expressions and functions.",tags:["gems","select","reformat","transform"]},sidebar:"defaultSidebar",previous:{title:"Transform",permalink:"/low-code-spark/gems/transform/"},next:{title:"Filter",permalink:"/low-code-spark/gems/transform/filter"}},c={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Spark Code",id:"spark-code",level:2},{value:"Advanced Import",id:"advanced-import",level:2},{value:"Using Advanced Import",id:"using-advanced-import",level:3},{value:"Format",id:"format",level:3}],d={toc:m},p="wrapper";function f(e){let{components:t,...s}=e;return(0,n.kt)(p,(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Transforms one or more column names or values by using expressions and/or functions. It's useful when we need to extract only the required columns or make changes column-wise."),(0,n.kt)("h2",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"DataFrame"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Input DataFrame on which changes are required"),(0,n.kt)("td",{parentName:"tr",align:"left"},"True")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Target column"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Output column name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"False")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Expression"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Expression to compute target column"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Required if a ",(0,n.kt)("inlineCode",{parentName:"td"},"Target column")," is present")))),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"If no columns are selected, then all columns are passed through to the output")),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Example usage of Reformat",src:a(60214).Z,width:"1209",height:"724"})),(0,n.kt)("h2",{id:"spark-code"},"Spark Code"),(0,n.kt)("p",null,"Reformat converts to a SQL ",(0,n.kt)("inlineCode",{parentName:"p"},"Select")," or in relational terms into a projection, unlike ",(0,n.kt)("inlineCode",{parentName:"p"},"SchemaTransform")," Gem which uses underlying ",(0,n.kt)("inlineCode",{parentName:"p"},"withColumn")," construct"),(0,n.kt)(o.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},'def Reformat(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.select(\n        col("id"),\n        col("email").alias("email_address"),\n        col("name"),\n        col("updated_at"),\n        concat_ws("$$$", col("address_line1"), col("address_line2"), col("postal_code"))\n            .alias("address_string")\n    )\n'))),(0,n.kt)(l.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'object Reformat {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.select(\n      col("id"),\n      col("email").as("email_address"),\n      col("name"),\n      col("updated_at"),\n      expr("concat_ws(\'$$$\', address_line1, address_line2, postal_code)").as("address_string")\n    )\n }\n\n')))),(0,n.kt)("h2",{id:"advanced-import"},"Advanced Import"),(0,n.kt)("p",null,"The Advanced Import feature allows you to bulk import statements that are structured similarly to CSV/TSV files. This can be useful if you have your expressions/transformation logic in another format and just want to quickly configure a ",(0,n.kt)("inlineCode",{parentName:"p"},"Reformat")," Gem based on this logic."),(0,n.kt)("h3",{id:"using-advanced-import"},"Using Advanced Import"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Click the ",(0,n.kt)("inlineCode",{parentName:"li"},"Advanced")," button in the `Reformat UI")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Advanced import toggle",src:a(74789).Z,width:"2090",height:"1395"})),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Enter the expressions into the text area using the format as described below:")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Advanced import mode",src:a(17324).Z,width:"2618",height:"2026"})),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Use the button at the top (labeled ",(0,n.kt)("inlineCode",{parentName:"li"},"Expressions"),") to switch back to the expressions view. This will translate the expressions from the CSV format to the table format and will show any errors detected.")),(0,n.kt)("h3",{id:"format"},"Format"),(0,n.kt)("p",null,"The format of these expressions is ",(0,n.kt)("inlineCode",{parentName:"p"},"target_name,target_expr"),", where ",(0,n.kt)("inlineCode",{parentName:"p"},"target_name")," is the desired new column name and ",(0,n.kt)("inlineCode",{parentName:"p"},"target_expr")," is the Spark expression that will be used to generate the new column."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"For ",(0,n.kt)("inlineCode",{parentName:"p"},"target_expr")," values that contain a comma ",(0,n.kt)("inlineCode",{parentName:"p"},",")," or span multiple lines, you must surround them by ",(0,n.kt)("inlineCode",{parentName:"p"},"``")," on either side. For example:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},"customer_id,customer_id\nfull_name,``concat(first_name, ' ', last_name)``\n"))))}f.isMDXComponent=!0},74789:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/reformat_advanced-c65c99761ced1311392e26c6c335bf7b.png"},17324:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/reformat_advanced_2-c906ca7673c85cf3c013bdd6923d471b.png"},60214:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/reformat_eg_1-9a9344e1d3174c50427768400047df6c.png"}}]);