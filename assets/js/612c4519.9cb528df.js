"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[46198],{28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>d});var t=r(96540);const n={},a=t.createContext(n);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(a.Provider,{value:s},e.children)}},46781:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>h,contentTitle:()=>c,default:()=>j,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"Spark/gems/source-target/warehouse/jdbc","title":"JDBC","description":"JDBC","source":"@site/docs/Spark/gems/source-target/warehouse/jdbc.md","sourceDirName":"Spark/gems/source-target/warehouse","slug":"/Spark/gems/source-target/warehouse/jdbc","permalink":"/Spark/gems/source-target/warehouse/jdbc","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"warehouse","permalink":"/tags/warehouse"},{"inline":true,"label":"jdbc","permalink":"/tags/jdbc"}],"version":"current","frontMatter":{"title":"JDBC","id":"jdbc","description":"JDBC","tags":["gems","warehouse","jdbc"]},"sidebar":"mySidebar","previous":{"title":"DB2","permalink":"/Spark/gems/source-target/warehouse/db2"},"next":{"title":"MongoDB","permalink":"/Spark/gems/source-target/warehouse/mongodb"}}');var n=r(74848),a=r(28453),i=r(49235),d=r(65537),o=r(79329);const l={title:"JDBC",id:"jdbc",description:"JDBC",tags:["gems","warehouse","jdbc"]},c=void 0,h={},u=[{value:"Source",id:"source",level:2},{value:"Source Parameters",id:"source-parameters",level:3},{value:"Source Table",id:"source-table",level:3},{value:"Source Query",id:"source-query",level:3},{value:"Example",id:"source-example",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target",id:"target",level:2},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Supported Write Modes",id:"supported-write-modes",level:3},{value:"Target Example",id:"target-example",level:3},{value:"Generated Code",id:"target-code",level:3}];function p(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,n.jsx)(s.p,{children:"Reads and writes data from other databases using JDBC."}),"\n",(0,n.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,n.jsx)(s.h3,{id:"source-parameters",children:"Source Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Required"}),(0,n.jsx)(s.th,{children:"Default"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Credential Type"}),(0,n.jsx)(s.td,{children:"Credential Type provider (Databricks Secrets or Username/Password or Environment variables for Username and Password). These can be set in the config options/via Databricks secrets or Environment variables for security purpose, so that it's not visible in code."}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Credential Scope"}),(0,n.jsx)(s.td,{children:"Scope to use for Databricks secrets"}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"url"}),(0,n.jsxs)(s.td,{children:["The JDBC URL in the form ",(0,n.jsx)(s.code,{children:"jdbc:subprotocol:subname"})," to connect to. The source-specific connection properties may be specified in the URL. e.g., ",(0,n.jsx)("br",{})," ",(0,n.jsx)(s.code,{children:"jdbc:postgresql://test.us-east-1.rds.amazonaws.com:5432/postgres"}),",",(0,n.jsx)("br",{})," ",(0,n.jsx)(s.code,{children:"jdbc:mysql://database-mysql.test.us-east-1.rds.amazonaws.com:3306/mysql"}),"."]}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"dbtable"}),(0,n.jsxs)(s.td,{children:["The JDBC table that should be read from. See ",(0,n.jsx)(s.a,{href:"#source-table",children:"here"})," for more details."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"query"}),(0,n.jsxs)(s.td,{children:["The query that will be used to read data into Spark. See ",(0,n.jsx)(s.a,{href:"#source-query",children:"here"})," for more details."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"driver"}),(0,n.jsxs)(s.td,{children:["The class name of the JDBC driver to use to connect to this URL. e.g., ",(0,n.jsx)("br",{})," For postgres : ",(0,n.jsx)(s.code,{children:"org.postgresql.Driver"})," ",(0,n.jsx)("br",{})," For mysql: ",(0,n.jsx)(s.code,{children:"com.mysql.cj.jdbc.Driver"})]}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Partition Column, Lower Bound, Upper Bound"}),(0,n.jsxs)(s.td,{children:["These options must all be specified if any of them is specified. In addition, numPartitions must be specified. They describe how to partition the table when reading in parallel from multiple workers. ",(0,n.jsx)(s.code,{children:"partitionColumn"})," must be a numeric, date, or timestamp column from the table in question. Notice that ",(0,n.jsx)(s.code,{children:"lowerBound"})," and ",(0,n.jsx)(s.code,{children:"upperBound"})," are just used to decide the partition stride, ",(0,n.jsx)(s.em,{children:"not"})," for filtering the rows in table. So all rows in the table will be partitioned and returned. This option applies only to reading. ",(0,n.jsx)("br",{})," ",(0,n.jsx)(s.code,{children:"Note: Dropdown to choose column in partition column will only be populated once schema is inferred."})]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Number of partitions"}),(0,n.jsx)(s.td,{children:"The maximum number of partitions that can be used for parallelism in table reading. This also determines the maximum number of concurrent JDBC connections."}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Query Timeout"}),(0,n.jsxs)(s.td,{children:["The number of seconds the driver will wait for a Statement object to execute. Zero means there is no limit. As a ",(0,n.jsx)(s.code,{children:"Target"}),", this option depends on how JDBC drivers implement the API setQueryTimeout, e.g., the h2 JDBC driver checks the timeout of each query instead of an entire JDBC batch."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"0"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Fetch size"}),(0,n.jsx)(s.td,{children:"The JDBC fetch size, which determines how many rows to fetch per round trip. This can help performance on JDBC drivers which default to low fetch size (e.g. Oracle with 10 rows)."}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"0"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Session Init Statement"}),(0,n.jsxs)(s.td,{children:["After each database session is opened to the remote DB and before starting to read data, this parameter executes a custom SQL statement (or a PL/SQL block). Use this to implement session initialization code. Example: ",(0,n.jsx)(s.code,{children:'option("sessionInitStatement", """BEGIN execute immediate \'alter session set "_serial_direct_read"=true\'; END;""")'}),"."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Push-Down Predicate"}),(0,n.jsxs)(s.td,{children:["Enable or disable predicate push-down into the JDBC data source. The default value is ",(0,n.jsx)(s.code,{children:"true"}),", in which case Spark will push down filters to the JDBC data source as much as possible. Otherwise, if set to false, no filter will be pushed down to the JDBC data source and thus all filters will be handled by Spark. Predicate push-down is usually turned off when the predicate filtering is performed faster by Spark than by the JDBC data source."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"True"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Push-Down Aggregate"}),(0,n.jsxs)(s.td,{children:["Enable or disable aggregate push-down in V2 JDBC data source. The default value is ",(0,n.jsx)(s.code,{children:"false"}),", in which case Spark will not push down aggregates to the JDBC data source. Aggregate push-down is usually turned off when the aggregate is performed faster by Spark than by the JDBC data source. Please note that aggregates can be pushed down if and only if all the aggregate functions and the related filters can be pushed down. Spark assumes that the data source can't fully complete the aggregate and does a final aggregate over the data source output."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"False"})})]})]})]}),"\n",(0,n.jsx)(s.admonition,{type:"caution",children:(0,n.jsxs)(s.p,{children:["If you get ",(0,n.jsx)(s.code,{children:"class not found"})," error during running of pipeline then your dependency might be missing in the cluster.\nTo read more about how to add dependencies for specific jdbc jar ",(0,n.jsx)(s.a,{href:"/engineers/dependencies",children:(0,n.jsx)(s.strong,{children:"click here"})}),"."]})}),"\n",(0,n.jsx)(s.h3,{id:"source-table",children:"Source Table"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"dbtable"})," parameter dictates which Table will be used as the source to read from. Anything that is valid in a ",(0,n.jsx)(s.code,{children:"FROM"})," clause of a SQL query can also be used. For example, instead of a table name you could use a subquery in parentheses."]}),"\n",(0,n.jsx)(s.admonition,{type:"danger",children:(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"dbtable"})," parameter and the ",(0,n.jsx)(s.code,{children:"query"})," parameter are mutually exclusive, they cannot both be specified at the same time."]})}),"\n",(0,n.jsx)(s.h3,{id:"source-query",children:"Source Query"}),"\n",(0,n.jsxs)(s.p,{children:["The specified query will be used as a subquery in the ",(0,n.jsx)(s.code,{children:"FROM"})," clause. Spark will also assign an alias to the subquery clause. For example, Spark will issue a query of the following form to the JDBC Source. ",(0,n.jsx)(s.code,{children:"SELECT columns FROM (<user_specified_query>) spark_gen_alias"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"There are a couple of restrictions while using this option:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"query"})," and ",(0,n.jsx)(s.code,{children:"partitionColumn"})," options cannot be used at the same time."]}),"\n",(0,n.jsxs)(s.li,{children:["When specifying the ",(0,n.jsx)(s.code,{children:"partitionColumn"})," option is required, the subquery can be specified using ",(0,n.jsx)(s.code,{children:"dbtable"})," option instead and partition columns can be qualified using the subquery alias provided as part of ",(0,n.jsx)(s.code,{children:"dbtable"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"source-example",children:"Example"}),"\n",(0,n.jsx)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"},children:(0,n.jsx)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"},children:(0,n.jsx)("iframe",{src:"https://user-images.githubusercontent.com/103921419/173814656-1c857949-cd5a-4032-922b-5a621d77fd75.mp4",title:"JDBC source",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"})})}),"\n",(0,n.jsx)(s.h3,{id:"source-code",children:"Generated Code"}),"\n","\n",(0,n.jsxs)(d.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-py",children:'def Source(spark: SparkSession) -> DataFrame:\n    return spark.read\\\n        .format("jdbc")\\\n        .option("url", f"{Config.jdbc_url}")\\\n        .option("user", f"{Config.jdbc_username}")\\\n        .option("password", f"{Config.jdbc_password}")\\\n        .option("dbtable", "public.demo_customers_raw")\\\n        .option("pushDownPredicate", True)\\\n        .option("driver", "org.postgresql.Driver")\\\n        .load()\n\n'})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",children:'object Source {\n\n  def apply(spark: SparkSession): DataFrame = {\n    var reader = spark.read\n      .format("jdbc")\n      .option("url",  s"${Config.jdbc_url}")\n      .option("user", s"${Config.jdbc_username}")\n      .option("password", s"${Config.jdbc_password}")\n      .option("dbtable", "public.demo_customers_raw")\n    reader = reader\n      .option("pushDownPredicate", true)\n      .option("driver", "org.postgresql.Driver")\n    reader.load()\n  }\n\n}\n'})})})]}),"\n",(0,n.jsx)(s.h2,{id:"target",children:"Target"}),"\n",(0,n.jsx)(s.h3,{id:"target-parameters",children:"Target Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Required"}),(0,n.jsx)(s.th,{children:"Default"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Credential Type"}),(0,n.jsx)(s.td,{children:"Credential Type provider (Databricks Secrets or Username/Password or Environment variables for Username and Password). These can be set in the config options/via Databricks secrets or Environment variables for security purpose, so that it's not visible in code."}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Credential Scope"}),(0,n.jsx)(s.td,{children:"Scope to use for Databricks secrets"}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"url"}),(0,n.jsxs)(s.td,{children:["The JDBC URL in the form ",(0,n.jsx)(s.code,{children:"jdbc:subprotocol:subname"})," to connect to. The source-specific connection properties may be specified in the URL. e.g., ",(0,n.jsx)("br",{})," ",(0,n.jsx)(s.code,{children:"jdbc:postgresql://test.us-east-1.rds.amazonaws.com:5432/postgres"}),",",(0,n.jsx)("br",{})," ",(0,n.jsx)(s.code,{children:"jdbc:mysql://database-mysql.test.us-east-1.rds.amazonaws.com:3306/mysql"}),"."]}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"table"}),(0,n.jsx)(s.td,{children:"The JDBC table that should be written into."}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"driver"}),(0,n.jsxs)(s.td,{children:["The class name of the JDBC driver to use to connect to this URL. e.g., ",(0,n.jsx)("br",{})," For Postgres : ",(0,n.jsx)(s.code,{children:"org.postgresql.Driver"})," ",(0,n.jsx)("br",{})," For MySQL: ",(0,n.jsx)(s.code,{children:"com.mysql.cj.jdbc.Driver"})]}),(0,n.jsx)(s.td,{children:"True"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Number of Partitions"}),(0,n.jsxs)(s.td,{children:["The maximum number of partitions that can be used for parallelism in table writing. This also determines the maximum number of concurrent JDBC connections. If the number of partitions to write exceeds this limit, we decrease it to this limit by calling ",(0,n.jsx)(s.code,{children:"coalesce(numPartitions)"})," before writing."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Query Timeout"}),(0,n.jsx)(s.td,{children:"The number of seconds the driver will wait for a Statement object to execute. Zero means there is no limit. This option depends on how JDBC drivers implement the API setQueryTimeout, e.g., the h2 JDBC driver checks the timeout of each query instead of an entire JDBC batch."}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"0"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Batch Size"}),(0,n.jsx)(s.td,{children:"The JDBC batch size, which determines how many rows to insert per round trip. This can help performance on JDBC drivers. This option applies only to writing."}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"1000"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Isolation Level"}),(0,n.jsxs)(s.td,{children:["The transaction isolation level, which applies to current connection. It can be one of ",(0,n.jsx)(s.code,{children:"NONE"}),", ",(0,n.jsx)(s.code,{children:"READ_COMMITTED"}),", ",(0,n.jsx)(s.code,{children:"READ_UNCOMMITTED"}),", ",(0,n.jsx)(s.code,{children:"REPEATABLE_READ"}),", or ",(0,n.jsx)(s.code,{children:"SERIALIZABLE"}),", corresponding to standard transaction isolation levels defined by JDBC's Connection object. Please refer to the ",(0,n.jsx)(s.a,{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.sql/java/sql/Connection.html",children:"documentation"})," for more information."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"READ_UNCOMMITTED"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Truncate"}),(0,n.jsxs)(s.td,{children:["When ",(0,n.jsx)(s.code,{children:"SaveMode"})," is set to ",(0,n.jsx)(s.code,{children:"Overwrite"}),", this option causes Spark to truncate an existing table instead of dropping and recreating it. This can be more efficient, and prevents the table metadata (e.g., indices) from being removed. However, it will not work in some cases, such as when the new data has a different schema. In case of failures, users should turn off truncate option to use ",(0,n.jsx)(s.code,{children:"DROP TABLE"})," again. Also, due to the different behavior of ",(0,n.jsx)(s.code,{children:"TRUNCATE TABLE"})," among DBMS, it's not always safe to use this. ",(0,n.jsx)(s.code,{children:"MySQLDialect"}),", ",(0,n.jsx)(s.code,{children:"DB2Dialect"}),", ",(0,n.jsx)(s.code,{children:"MsSqlServerDialect"}),", ",(0,n.jsx)(s.code,{children:"DerbyDialect"}),", and ",(0,n.jsx)(s.code,{children:"OracleDialect"})," supports this while ",(0,n.jsx)(s.code,{children:"PostgresDialect"})," and the default ",(0,n.jsx)(s.code,{children:"JDBCDialect"})," doesn't. For unknown and unsupported ",(0,n.jsx)(s.code,{children:"JDBCDialect"}),", the user option truncate is ignored."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"False"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Cascade Truncate"}),(0,n.jsxs)(s.td,{children:["If enabled and supported by the JDBC database (PostgreSQL and Oracle at the moment), this options allows execution of a ",(0,n.jsx)(s.code,{children:"TRUNCATE TABLE t CASCADE"})," (in the case of PostgreSQL a ",(0,n.jsx)(s.code,{children:"TRUNCATE TABLE ONLY t CASCADE"})," is executed to prevent inadvertently truncating descendant tables). This will affect other tables, and thus should be used with care."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsxs)(s.td,{children:["Default according to the ",(0,n.jsx)(s.code,{children:"JDBCDialect"})," in use"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Create Table Options"}),(0,n.jsxs)(s.td,{children:["If specified, this option allows setting of database-specific table and partition options when creating a table (e.g., ",(0,n.jsx)(s.code,{children:"CREATE TABLE t (name string) ENGINE=InnoDB."}),")."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Create Table Column Types"}),(0,n.jsxs)(s.td,{children:["The database column data types to use instead of the defaults when creating the table. Data type information should be specified in the same format as ",(0,n.jsx)(s.code,{children:"CREATE TABLE"})," columns syntax (e.g: ",(0,n.jsx)(s.code,{children:'"name CHAR(64), comments VARCHAR(1024)"'}),"). The specified types should be valid Spark SQL data types."]}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:"(none)"})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"supported-write-modes",children:"Supported Write Modes"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Write Mode"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"overwrite"}),(0,n.jsx)(s.td,{children:"If data already exists, overwrite with the contents of the DataFrame."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"append"}),(0,n.jsx)(s.td,{children:"If data already exists, append the contents of the DataFrame."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"ignore"}),(0,n.jsxs)(s.td,{children:["If data already exists, do nothing with the contents of the DataFrame. This is similar to a ",(0,n.jsx)(s.code,{children:"CREATE TABLE IF NOT EXISTS"})," in SQL."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"error"}),(0,n.jsx)(s.td,{children:"If data already exists, throw an exception."})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"target-example",children:"Target Example"}),"\n",(0,n.jsx)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"},children:(0,n.jsx)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"},children:(0,n.jsx)("iframe",{src:"https://user-images.githubusercontent.com/103921419/173814665-f932bbae-cc4a-4b4b-90e8-09749b714a76.mp4",title:"JDBC target",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"})})}),"\n",(0,n.jsx)(s.h3,{id:"target-code",children:"Generated Code"}),"\n",(0,n.jsxs)(d.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-py",children:'def Target(spark: SparkSession, in0: DataFrame):\n   in0.write\\\n      .format("jdbc")\\\n      .option("url", f"{Config.jdbc_url}")\\\n      .option("dbtable", "public.demo_customers_raw_output")\\\n      .option("user", f"{Config.jdbc_username}")\\\n      .option("password", f"{Config.jdbc_password}")\\\n      .option("driver", "org.postgresql.Driver")\\\n      .save()\n\n'})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",children:'object Target {\n\n  def apply(spark: SparkSession, in: DataFrame): Unit = {\n    in.write\n      .format("jdbc")\n      .option("url", s"${Config.jdbc_url}")\n      .option("dbtable", "public.demo_customers_raw_output")\n      .option("user", s"${Config.jdbc_username}")\n      .option("password", s"${Config.jdbc_password}")\n      .option("driver", "org.postgresql.Driver")\n      .save()\n  }\n\n}\n\n'})})})]})]})}function j(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},49235:(e,s,r)=>{r.d(s,{A:()=>n});r(96540);var t=r(74848);function n(e){return(0,t.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/extensibility/package-hub/",children:(0,t.jsxs)("span",{className:"badge-dependency",children:[(0,t.jsx)("span",{className:"left",children:e.python_package_name}),(0,t.jsx)("span",{className:"right",children:e.python_package_version})]})}),e.scala_package_name&&e.scala_package_version&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/extensibility/package-hub/",children:(0,t.jsxs)("span",{className:"badge-dependency",children:[(0,t.jsx)("span",{className:"left",children:e.scala_package_name}),(0,t.jsx)("span",{className:"right",children:e.scala_package_version})]})}),e.python_lib&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,t.jsxs)("span",{className:"badge-dependency",children:[(0,t.jsx)("span",{className:"left",children:"ProphecyLibsPython"}),(0,t.jsx)("span",{className:"right",children:e.python_lib})]})}),e.scala_lib&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,t.jsxs)("span",{className:"badge-dependency",children:[(0,t.jsx)("span",{className:"left",children:"ProphecyLibsScala"}),(0,t.jsx)("span",{className:"right",children:e.scala_lib})]})}),e.uc_single&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/",children:(0,t.jsxs)("span",{className:"badge-spark",children:[(0,t.jsx)("span",{className:"left",children:"Databricks UC Single Cluster"}),(0,t.jsx)("span",{className:"right",children:e.uc_single})]})}),e.uc_shared&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,t.jsxs)("span",{className:"badge-spark",children:[(0,t.jsx)("span",{className:"left",children:"Databricks UC Shared"}),(0,t.jsx)("span",{className:"right",children:e.uc_shared})]})}),e.livy&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,t.jsxs)("span",{className:"badge-spark",children:[(0,t.jsx)("span",{className:"left",children:"Livy"}),(0,t.jsx)("span",{className:"right",children:e.livy})]})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]})}},65537:(e,s,r)=>{r.d(s,{A:()=>w});var t=r(96540),n=r(18215),a=r(65627),i=r(56347),d=r(50372),o=r(30604),l=r(11861),c=r(78749);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:s,children:r}=e;return(0,t.useMemo)((()=>{const e=s??function(e){return h(e).map((e=>{let{props:{value:s,label:r,attributes:t,default:n}}=e;return{value:s,label:r,attributes:t,default:n}}))}(r);return function(e){const s=(0,l.XI)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,r])}function p(e){let{value:s,tabValues:r}=e;return r.some((e=>e.value===s))}function j(e){let{queryString:s=!1,groupId:r}=e;const n=(0,i.W6)(),a=function(e){let{queryString:s=!1,groupId:r}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:s,groupId:r});return[(0,o.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const s=new URLSearchParams(n.location.search);s.set(a,e),n.replace({...n.location,search:s.toString()})}),[a,n])]}function x(e){const{defaultValue:s,queryString:r=!1,groupId:n}=e,a=u(e),[i,o]=(0,t.useState)((()=>function(e){let{defaultValue:s,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!p({value:s,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:s,tabValues:a}))),[l,h]=j({queryString:r,groupId:n}),[x,m]=function(e){let{groupId:s}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(s),[n,a]=(0,c.Dv)(r);return[n,(0,t.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:n}),b=(()=>{const e=l??x;return p({value:e,tabValues:a})?e:null})();(0,d.A)((()=>{b&&o(b)}),[b]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),m(e)}),[h,m,a]),tabValues:a}}var m=r(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(74848);function g(e){let{className:s,block:r,selectedValue:t,selectValue:i,tabValues:d}=e;const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),c=e=>{const s=e.currentTarget,r=o.indexOf(s),n=d[r].value;n!==t&&(l(s),i(n))},h=e=>{let s=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;s=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;s=o[r]??o[o.length-1];break}}s?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":r},s),children:d.map((e=>{let{value:s,label:r,attributes:a}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===s?0:-1,"aria-selected":t===s,ref:e=>{o.push(e)},onKeyDown:h,onClick:c,...a,className:(0,n.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":t===s}),children:r??s},s)}))})}function y(e){let{lazy:s,children:r,selectedValue:a}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(s){const e=i.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,s)=>(0,t.cloneElement)(e,{key:s,hidden:e.props.value!==a})))})}function v(e){const s=x(e);return(0,f.jsxs)("div",{className:(0,n.A)("tabs-container",b.tabList),children:[(0,f.jsx)(g,{...s,...e}),(0,f.jsx)(y,{...s,...e})]})}function w(e){const s=(0,m.A)();return(0,f.jsx)(v,{...e,children:h(e.children)},String(s))}},79329:(e,s,r)=>{r.d(s,{A:()=>i});r(96540);var t=r(18215);const n={tabItem:"tabItem_Ymn6"};var a=r(74848);function i(e){let{children:s,hidden:r,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.A)(n.tabItem,i),hidden:r,children:s})}}}]);