"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[1122],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||r;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8880:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],s={title:"Multi Fabric Deployments"},l=void 0,p={unversionedId:"tutorials/low-code-jobs/multi-fabric-deployments",id:"tutorials/low-code-jobs/multi-fabric-deployments",title:"Multi Fabric Deployments",description:"Often, organizations have multiple different execution environments for the various stages of development. A common",source:"@site/docs/08-tutorials/02-low-code-jobs/02-multi-fabric-deployments.md",sourceDirName:"08-tutorials/02-low-code-jobs",slug:"/tutorials/low-code-jobs/multi-fabric-deployments",permalink:"/tutorials/low-code-jobs/multi-fabric-deployments",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Multi Fabric Deployments"},sidebar:"defaultSidebar",previous:{title:"Multi Jobs Trigger",permalink:"/tutorials/low-code-jobs/multi-jobs-trigger"},next:{title:"Low-code Spark",permalink:"/tutorials/low-code-spark/intro"}},u={},m=[{value:"Single-fabric Development",id:"single-fabric-development",level:2},{value:"Multi-fabric Deployment with Prophecy",id:"multi-fabric-deployment-with-prophecy",level:2},{value:"Why so many environments?",id:"why-so-many-environments",level:3},{value:"Development and Production",id:"development-and-production",level:3},{value:"Entities setup",id:"entities-setup",level:4},{value:"Development &amp; Testing",id:"development--testing",level:4},{value:"Deployment to Production",id:"deployment-to-production",level:4},{value:"Multi-fabric Deployment with GitHub",id:"multi-fabric-deployment-with-github",level:2}],c={toc:m};function d(e){var t=e.components,s=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Often, organizations have multiple different execution environments for the various stages of development. A common\nexample is a setup with three stages: ",(0,r.kt)("strong",{parentName:"p"},"Development"),", ",(0,r.kt)("strong",{parentName:"p"},"QA"),", ",(0,r.kt)("strong",{parentName:"p"},"Production"),". Each environment has usually its own\nindependent data, metastore, clusters, and even permissions."),(0,r.kt)("p",null,"Historically, reliable promotion to production has been a challenge, many organizations have faced. With the\nintroduction of ",(0,r.kt)("strong",{parentName:"p"},"modern software engineering practises"),", many engineers, have been able to resolve it. However, data\nengineers & practitioners in particular are often stuck in the old days. Thus, missing out on what's became a standard\nin their sister industries."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Data Pipeline",src:n(6057).Z,width:"3000",height:"1580"})),(0,r.kt)("p",null,"Since, with Prophecy any data pipeline or job created is stored directly on GIT, we enable any data practitioners\nto leverage the best deployment practises."),(0,r.kt)("h2",{id:"single-fabric-development"},"Single-fabric Development"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Minimum project setup",src:n(9886).Z,width:"3200",height:"1338"})),(0,r.kt)("p",null,"At minimum, you will find yourself building your ",(0,r.kt)("strong",{parentName:"p"},"pipelines")," and ",(0,r.kt)("strong",{parentName:"p"},"jobs")," as per usual. Your team might want to build\nmultiple different ",(0,r.kt)("strong",{parentName:"p"},"pipelines")," that perform different processing logic, and they orchestrate those pipelines - set\ntheir dependencies, add various gluing scripts (e.g. notifications, simple data movement components), and set the time\nwhen they should be executed using ",(0,r.kt)("strong",{parentName:"p"},"jobs"),"."),(0,r.kt)("p",null,"In the simplest scenario, you work with a single execution environment only (e.g a single Databricks workspace). In\nthose cases, usually everyone on your team has access to that Databricks workspace. Everyone does both development and\nproductionization of your pipelines in the same place."),(0,r.kt)("p",null,"In Prophecy, at minimum, you will find yourself having:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"multiple data pipelines")," - various ETL / ELT tasks written in Spark"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"multiple jobs")," - orchestration of your data pipelines written in Databricks Jobs or Airflow"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"a single team")," - all your teammates in the same place, with the same accesses"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"a single fabric")," - the connection to your Databricks workspace")),(0,r.kt)("p",null,"This is great for simple setups and very small teams, but can quickly lead to many problems. In such a setup, it's very\neasy for you and your teammates to make mistakes and accidentally affect production pipelines. There's also no data\nseparation, so any PII information becomes visible to everyone!"),(0,r.kt)("p",null,"A better approach is to have physical environments, connected to different stages of development. A common example is a\nsetup with three stages: ",(0,r.kt)("strong",{parentName:"p"},"Development"),", ",(0,r.kt)("strong",{parentName:"p"},"QA"),", ",(0,r.kt)("strong",{parentName:"p"},"Production"),". Each environment has usually its own independent data,\nmetastore, clusters, and even permissions."),(0,r.kt)("h2",{id:"multi-fabric-deployment-with-prophecy"},"Multi-fabric Deployment with Prophecy"),(0,r.kt)("p",null,"Let's consider a better alternative to a single environment development."),(0,r.kt)("h3",{id:"why-so-many-environments"},"Why so many environments?"),(0,r.kt)("p",null,"Simplest alternative involves adding just one more execution environment called ",(0,r.kt)("strong",{parentName:"p"},"production"),". Now you can separate\nyour ",(0,r.kt)("strong",{parentName:"p"},"development use-cases"),", where you can use near-real data (e.g. without PII information), smaller data samples\n(for faster development), smaller cluster sizes (to reduce cost), from the ",(0,r.kt)("strong",{parentName:"p"},"production use-cases"),", where you push your\ncode only after you're confident it's going to work well. Only the production environment has access to your real data,\nuses large optimal clusters, and has significantly restricted access. In some cases, only the operational support teams\nshould have access to your production environment."),(0,r.kt)("p",null,"If you'd like to involve more stages, to even further increase the reliability of your development process, you can add\na ",(0,r.kt)("strong",{parentName:"p"},"QA environment"),". That environment should have data, hardware, and software that closely simulate the Production\nenvironment (e.g. data slices directly taken from production), and should serve as a holding area. Using QA, your\nengineers make sure that the jobs are going to run smoothly in the production environment, without actually potentially\nbreaking production, if some code is wrong."),(0,r.kt)("h3",{id:"development-and-production"},"Development and Production"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Prophecy Setup",src:n(3810).Z,width:"3200",height:"2006"})),(0,r.kt)("p",null,"For our example, however, let's focus on a setup with two environments: ",(0,r.kt)("strong",{parentName:"p"},"Development")," & ",(0,r.kt)("strong",{parentName:"p"},"Production"),". Our\n",(0,r.kt)("strong",{parentName:"p"},"Development environment")," is accessible to our whole organization (developers, analysts, support) and is connected to\nour development databricks workspace, which contains only dummy customer's data. Whereas, our ",(0,r.kt)("strong",{parentName:"p"},"Production environment"),"\nis only accessible to our production support team and is connected to our production databricks workspace, which has\nreal customer's data."),(0,r.kt)("h4",{id:"entities-setup"},"Entities setup"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create two ",(0,r.kt)("strong",{parentName:"p"},"teams"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"developers")," - superset of all the teams, which contains your developers and members of the ",(0,r.kt)("em",{parentName:"li"},"prod_support")," team"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"prod_support")," - team composed of members who have privileged production access permissions"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create two ",(0,r.kt)("strong",{parentName:"p"},"fabrics"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"development")," - owned by the ",(0,r.kt)("em",{parentName:"li"},"developers")," team"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"production")," - owned by the ",(0,r.kt)("em",{parentName:"li"},"prod_support")," team"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set up your ",(0,r.kt)("strong",{parentName:"p"},"projects")," - create your projects, as you would before. Projects should be owned by the ",(0,r.kt)("em",{parentName:"p"},"developers"),"\nteam.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set up your ",(0,r.kt)("strong",{parentName:"p"},"jobs")," - for every single set of pipelines you'd like to schedule, create two jobs:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"job_development")," - jobs built by the ",(0,r.kt)("em",{parentName:"li"},"developers")," for integration and testing purposes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"job_production")," - jobs built by the ",(0,r.kt)("em",{parentName:"li"},"prod_support")," team, based on the development jobs - they will run in the\nproduction environment")))),(0,r.kt)("div",{style:{position:"relative","padding-bottom":"56.25%",height:0}},(0,r.kt)("iframe",{src:"https://www.loom.com/embed/b9669f374f504e469b2f88374bcf35d3",frameborder:"0",webkitallowfullscreen:!0,mozallowfullscreen:!0,allowfullscreen:!0,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}})),(0,r.kt)("h4",{id:"development--testing"},"Development & Testing"),(0,r.kt)("p",null,"Phew, that was a lot of work! But the biggest chunk is behind us \ud83d\udcaa."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Run Progress",src:n(7417).Z,width:"8212",height:"2322"})),(0,r.kt)("p",null,"Now that we have set up our fabrics and teams, built some pipelines, it's time to test the whole data flow on our\ndevelopment environment."),(0,r.kt)("p",null,"Testing your pipelines and jobs is very simple. Simple click on the play button and watch your code run!"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Coming Soon")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Note, that currently, we're spinning up a new cluster for each of the tasks, therefore your job might take a few minutes\nto complete. However, soon, you will be able to have a granular control over which pipeline runs on which cluster."))),(0,r.kt)("h4",{id:"deployment-to-production"},"Deployment to Production"),(0,r.kt)("p",null,"Once we're confident that our job works correctly, and we have tested it well, we can start deploying it to our\n",(0,r.kt)("strong",{parentName:"p"},"production")," environment. In our setup only a production support engineer can do that. Therefore, login as them,\nduplicate your job on the production fabric, set appropriate pipeline configurations and enable it."),(0,r.kt)("p",null,"That's it! Now you can commit any remaining changes and release your pipeline. Prophecy automatically takes care of the\nrelease process, by building your pipelines, running unit tests, and finally deploying the pipeline jars/wheels\nalongside the job definition directly to Databricks (or AirFlow)."),(0,r.kt)("p",null,"If you're new to this process, check out, our ",(0,r.kt)("a",{parentName:"p",href:"/metadata/git"},"GIT"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"/low-code-jobs/databricks-jobs#deployment"},"jobs deployment")," documentation."),(0,r.kt)("div",{style:{position:"relative","padding-bottom":"56.25%",height:0}},(0,r.kt)("iframe",{src:"https://www.loom.com/embed/28153636876f409184e6ba2dcbc8f273",frameborder:"0",webkitallowfullscreen:!0,mozallowfullscreen:!0,allowfullscreen:!0,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}})),(0,r.kt)("h2",{id:"multi-fabric-deployment-with-github"},"Multi-fabric Deployment with GitHub"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Coming Soon")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"})))}d.isMDXComponent=!0},6057:function(e,t,n){t.Z=n.p+"assets/images/dev-qa-prod-7212cf391f7bfba04dc8a87253973304.png"},9886:function(e,t,n){t.Z=n.p+"assets/images/min-project-setup-4098dd2390227337f38e9acda6980177.png"},3810:function(e,t,n){t.Z=n.p+"assets/images/prophecy-setup-73170a1782cb0235e9e92461bb2741c9.png"},7417:function(e,t,n){t.Z=n.p+"assets/images/run-progress-e5e5c558ac5f7224b0cff9b62f14eecb.png"}}]);