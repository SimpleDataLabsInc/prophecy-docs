"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[4111],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(a),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return a?n.createElement(k,o(o({ref:t},p),{},{components:a})):n.createElement(k,o({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},72360:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(67294),r=a(86010),l="tabItem_OmH5";function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(87462),r=a(67294),l=a(72389),o=a(67392),i=a(7094),s=a(12466),d=a(86010),p="tabList_uSqn",u="tabItem_LplD";function m(e){var t,a,l,m=e.lazy,c=e.block,k=e.defaultValue,f=e.values,g=e.groupId,N=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),w=(0,o.l)(b,(function(e,t){return e.value===t.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===k?k:null!=(t=null!=k?k:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=h[0])?void 0:l.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,i.U)(),T=v.tabGroupChoices,S=v.setTabGroupChoices,C=(0,r.useState)(y),E=C[0],D=C[1],x=[],P=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var O=T[g];null!=O&&O!==E&&b.some((function(e){return e.value===O}))&&D(O)}var L=function(e){var t=e.currentTarget,a=x.indexOf(t),n=b[a].value;n!==E&&(P(t),D(n),null!=g&&S(g,n))},_=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=x.indexOf(e.currentTarget)+1;a=x[n]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;a=x[r]||x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,d.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":c},N)},b.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return x.push(e)},onKeyDown:_,onFocus:L,onClick:L},l,{className:(0,d.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),m?(0,r.cloneElement)(h.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function c(e){var t=(0,l.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},1217:function(e,t,a){a.d(t,{Z:function(){return s}});var n=a(67294),r=a(44996),l=function(e){var t=e.children;return n.createElement("div",{style:{position:"relative",display:"flex","justify-content":"center","align-items":"center"}},t)},o=function(e){var t=e.source;e.children;return n.createElement("img",{src:(0,r.Z)(t),style:{"object-fit":"cover"}})},i=function(e){var t=e.slides,a=(0,n.useState)(0),r=a[0],i=a[1];return n.createElement(l,null,n.createElement("i",{class:"fa fa-chevron-left",onClick:function(){i(0===r?t.length-1:r-1)},style:{position:"absolute",top:"50%",left:"0px","font-size":"2rem"}}),n.createElement("i",{class:"fa fa-chevron-right",onClick:function(){i(r===t.length-1?0:r+1)},style:{position:"absolute",top:"50%",right:"0px","font-size":"2rem"}}),n.createElement("div",{style:{padding:"30px"}},n.createElement(o,{source:t[r].image}),t[r].description))};function s(e){var t=e.ImageData;return n.createElement(i,{slides:t,style:{"font-family":" sans-serif","text-align":"center"}})}},38992:function(e,t,a){a.r(t),a.d(t,{ImageData:function(){return k},ImageData2:function(){return g},assets:function(){return c},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return f}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),o=a(1217),i=a(9877),s=a(72360),d=["components"],p={title:"Snowflake",id:"snowflake",description:"Snowflake",sidebar_position:1,tags:["gems","warehouse","snowflake"]},u=void 0,m={unversionedId:"low-code-spark/gems/source-target/warehouse/snowflake",id:"low-code-spark/gems/source-target/warehouse/snowflake",title:"Snowflake",description:"Snowflake",source:"@site/docs/low-code-spark/gems/source-target/warehouse/snowflake.md",sourceDirName:"low-code-spark/gems/source-target/warehouse",slug:"/low-code-spark/gems/source-target/warehouse/snowflake",permalink:"/low-code-spark/gems/source-target/warehouse/snowflake",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"warehouse",permalink:"/tags/warehouse"},{label:"snowflake",permalink:"/tags/snowflake"}],version:"current",sidebarPosition:1,frontMatter:{title:"Snowflake",id:"snowflake",description:"Snowflake",sidebar_position:1,tags:["gems","warehouse","snowflake"]},sidebar:"defaultSidebar",previous:{title:"XLSX (Excel)",permalink:"/low-code-spark/gems/source-target/file/xlsx"},next:{title:"Redshift",permalink:"/low-code-spark/gems/source-target/warehouse/redshift"}},c={},k=[{image:"img/snowflake/load/1.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Source Component")},{image:"img/snowflake/load/2.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"img/snowflake/load/3.png",description:(0,l.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the SNOWFLAKE format under WAREHOUSE type")},{image:"img/snowflake/load/4.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 4 - Enter Connection details")},{image:"img/snowflake/load/5.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 5 - Click 'Infer Schema' to fetch schema details")},{image:"img/snowflake/load/6.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 6 - Hit 'Refresh' to preview data ")}],f=[{value:"Source",id:"source",level:2},{value:"Source Parameters",id:"source-parameters",level:3},{value:"Example",id:"source-example",level:3},{value:"Generated Code",id:"source-code",level:3},{value:"Target",id:"target",level:2},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Supported Write Modes",id:"supported-write-modes",level:3},{value:"Example",id:"target-example",level:3},{value:"Generated Code",id:"target-code",level:3}],g=[{image:"/img/snowflake/write/1.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Target Component")},{image:"/img/snowflake/write/2.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"/img/snowflake/write/3.png",description:(0,l.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the SNOWFLAKE format under WAREHOUSE type")},{image:"/img/snowflake/write/4.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 4 - Enter Connection details")},{image:"/img/snowflake/write/5.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 5 - Define 'Write Mode' and optionally provide 'Post-Script SQL'")}],N={ImageData:k,toc:f,ImageData2:g};function h(e){var t=e.components,a=(0,r.Z)(e,d);return(0,l.kt)("wrapper",(0,n.Z)({},N,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Enterprise Only")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Please ",(0,l.kt)("a",{parentName:"p",href:"https://www.prophecy.io/request-a-demo"},"contact us")," to learn more about the Enterprise offering."))),(0,l.kt)("p",null,"Allows read and write operations on ",(0,l.kt)("inlineCode",{parentName:"p"},"Snowflake")),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("h3",{id:"source-parameters"},"Source Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Credential Type"),(0,l.kt)("td",{parentName:"tr",align:null},"Credential Type: ",(0,l.kt)("inlineCode",{parentName:"td"},"Databricks Secrets")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"Username & Password")),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Credentials"),(0,l.kt)("td",{parentName:"tr",align:null},"Databricks credential name , else username and password for the snowflake account"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"Databricks Secrets"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Username"),(0,l.kt)("td",{parentName:"tr",align:null},"Login name for the Snowflake user"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Password"),(0,l.kt)("td",{parentName:"tr",align:null},"Password for the Snowflake user"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Url"),(0,l.kt)("td",{parentName:"tr",align:null},"Hostname for your account in the format: ",(0,l.kt)("inlineCode",{parentName:"td"},"<account_identifier>.snowflakecomputing.com"),". ",(0,l.kt)("br",null)," Eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"https://DJ07623.ap-south-1.aws.snowflakecomputing.com")),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Database"),(0,l.kt)("td",{parentName:"tr",align:null},"Database to use for the session after connecting"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Schema"),(0,l.kt)("td",{parentName:"tr",align:null},"Schema to use for the session after connecting"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Warehouse"),(0,l.kt)("td",{parentName:"tr",align:null},"The default virtual warehouse to use for the session after connecting"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Data Source"),(0,l.kt)("td",{parentName:"tr",align:null},"Strategy to read data: ",(0,l.kt)("inlineCode",{parentName:"td"},"DB Table")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"SQL Query"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Table"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the table to be read. All columns and records are retrieved (i.e. it is equivalent to ",(0,l.kt)("inlineCode",{parentName:"td"},"SELECT * FROM table"),")."),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Data Source")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"DB Table"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SQL Query"),(0,l.kt)("td",{parentName:"tr",align:null},"The exact query (",(0,l.kt)("inlineCode",{parentName:"td"},"SELECT")," statement) to run"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Data Source")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"SQL Query"))))),(0,l.kt)("h3",{id:"source-example"},"Example"),(0,l.kt)(o.Z,{ImageData:k,mdxType:"App"}),(0,l.kt)("h3",{id:"source-code"},"Generated Code"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def sf_customer(spark: SparkSession) -> DataFrame:\n    from pyspark.dbutils import DBUtils\n    return spark.read\\\n        .format("snowflake")\\\n        .options(\n          **{\n            "sfUrl": "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n            "sfUser": "anshuman",\n            "sfPassword": "*******",\n            "sfDatabase": "SNOWFLAKE_SAMPLE_DATA",\n            "sfSchema": "TPCDS_SF100TCL",\n            "sfWarehouse": "COMPUTE_WH"\n          }\n        )\\\n        .option("dbtable", "CUSTOMER")\\\n        .load()\n'))),(0,l.kt)(s.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'object sf_customer {\n  def apply(spark: SparkSession): DataFrame = {\n    import com.databricks.dbutils_v1.DBUtilsHolder.dbutils\n    var reader = spark.read\n      .format("snowflake")\n      .options(\n        Map(\n          "sfUrl" \u2192 "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n          "sfUser" \u2192 "anshuman",\n          "sfPassword" \u2192 "******",\n          "sfDatabase" \u2192 "SNOWFLAKE_SAMPLE_DATA",\n          "sfSchema" \u2192 "TPCDS_SF100TCL",\n          "sfWarehouse" \u2192 "COMPUTE_WH"\n        )\n      )\n    reader = reader.option("dbtable", "CUSTOMER")\n    reader.load()\n  }\n}\n')))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"target"},"Target"),(0,l.kt)("h3",{id:"target-parameters"},"Target Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the Dataset"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Credential Type"),(0,l.kt)("td",{parentName:"tr",align:null},"Credential Type: ",(0,l.kt)("inlineCode",{parentName:"td"},"Databricks Secrets")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"Username & Password")),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Credentials"),(0,l.kt)("td",{parentName:"tr",align:null},"Databricks credential name , else username and password for the snowflake account"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"Databricks Secrets"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Username"),(0,l.kt)("td",{parentName:"tr",align:null},"Login name for the snowflake user"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Password"),(0,l.kt)("td",{parentName:"tr",align:null},"Password for the snowflake user"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if ",(0,l.kt)("inlineCode",{parentName:"td"},"Credential Type")," is ",(0,l.kt)("inlineCode",{parentName:"td"},"Username & Password"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Url"),(0,l.kt)("td",{parentName:"tr",align:null},"Hostname for your account in the format: ",(0,l.kt)("inlineCode",{parentName:"td"},"<account_identifier>.snowflakecomputing.com"),". ",(0,l.kt)("br",null)," Eg: ",(0,l.kt)("inlineCode",{parentName:"td"},"https://DJ07623.ap-south-1.aws.snowflakecomputing.com")),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Database"),(0,l.kt)("td",{parentName:"tr",align:null},"Database to use for the session after connecting"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Schema"),(0,l.kt)("td",{parentName:"tr",align:null},"Schema to use for the session after connecting"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Warehouse"),(0,l.kt)("td",{parentName:"tr",align:null},"The default virtual warehouse to use for the session after connecting"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Table"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the table to which data is to be written."),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Write Mode"),(0,l.kt)("td",{parentName:"tr",align:null},"How to handle existing data. See ",(0,l.kt)("a",{parentName:"td",href:"#supported-write-modes"},"this table")," for a list of available options."),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Post-Script SQL"),(0,l.kt)("td",{parentName:"tr",align:null},"DDL/DML SQL statements to execute before writing data.",(0,l.kt)("br",null)," It is intended for statements that do not return a result set, for example DDL statements like ",(0,l.kt)("inlineCode",{parentName:"td"},"CREATE TABLE")," and DML statements like ",(0,l.kt)("inlineCode",{parentName:"td"},"INSERT, UPDATE, and DELETE"),".",(0,l.kt)("br",null)," It is not useful for statements that return a result set, such as ",(0,l.kt)("inlineCode",{parentName:"td"},"SELECT")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"SHOW")),(0,l.kt)("td",{parentName:"tr",align:null},"False")))),(0,l.kt)("h3",{id:"supported-write-modes"},"Supported Write Modes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Write Mode"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"overwrite"),(0,l.kt)("td",{parentName:"tr",align:null},"If data already exists, overwrite with the contents of the DataFrame")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"append"),(0,l.kt)("td",{parentName:"tr",align:null},"If data already exists, append the contents of the DataFrame")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ignore"),(0,l.kt)("td",{parentName:"tr",align:null},"If data already exists, do nothing with the contents of the DataFrame. This is similar to a ",(0,l.kt)("inlineCode",{parentName:"td"},"CREATE TABLE IF NOT EXISTS")," in SQL.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"error"),(0,l.kt)("td",{parentName:"tr",align:null},"If data already exists, throw an exception.")))),(0,l.kt)("h3",{id:"target-example"},"Example"),(0,l.kt)(o.Z,{ImageData:g,mdxType:"App"}),(0,l.kt)("h3",{id:"target-code"},"Generated Code"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def sf_customer(spark: SparkSession, in0: DataFrame):\n    from pyspark.dbutils import DBUtils\n    options = {\n        "sfUrl": "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n        "sfUser": "anshuman",\n        "sfPassword": "******",\n        "sfDatabase": "SNOWFLAKE_SAMPLE_DATA",\n        "sfSchema": "TPCDS_SF100TCL",\n        "sfWarehouse": "COMPUTE_WH"\n    }\n    spark.sparkContext._jvm.net.snowflake.spark.snowflake.Utils.runQuery(\n        spark.sparkContext._jvm.PythonUtils.toScalaMap(options),\n        "CREATE TABLE test_table(id INTEGER)"\n    )\n    writer = in0.write.format("snowflake").options(**options)\n    writer.option("dbtable", "test_table").mode("overwrite").save()\n'))),(0,l.kt)(s.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'object sf_customer {\n  def apply(spark: SparkSession, in: DataFrame): Unit = {\n    import net.snowflake.spark.snowflake.Utils\n    import com.databricks.dbutils_v1.DBUtilsHolder.dbutils\n    val options = Map("sfUrl" \u2192 "https://DJ07623.ap-south-1.aws.snowflakecomputing.com",\n                      "sfUser" \u2192 "anshuman",\n                      "sfPassword" \u2192 "******",\n                      "sfDatabase" \u2192 "SNOWFLAKE_SAMPLE_DATA",\n                      "sfSchema" \u2192 "TPCDS_SF100TCL",\n                      "sfWarehouse" \u2192 "COMPUTE_WH"\n    )\n    var writer = in.write.format("snowflake").options(options)\n    writer = writer.option("dbtable", "test_table")\n    writer = writer.mode("overwrite")\n    Utils.runQuery(options, "CREATE TABLE test_table(id INTEGER)")\n    writer.save()\n  }\n}\n')))))}h.isMDXComponent=!0}}]);