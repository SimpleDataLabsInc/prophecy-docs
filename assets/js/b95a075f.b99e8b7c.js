"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[98344],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>u});var o=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,o,i=function(e,t){if(null==e)return{};var a,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=o.createContext({}),c=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),h=i,u=d["".concat(l,".").concat(h)]||d[h]||g[h]||r;return a?o.createElement(u,n(n({ref:t},p),{},{components:a})):o.createElement(u,n({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,n=new Array(r);n[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,n[1]=s;for(var c=2;c<r;c++)n[c]=a[c];return o.createElement.apply(null,n)}return o.createElement.apply(null,a)}h.displayName="MDXCreateElement"},33362:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=a(58168),i=(a(96540),a(15680));const r={title:"Git",id:"Git",description:"Source Control",sidebar_position:2,tags:["metadata","Git"]},n=void 0,s={unversionedId:"metadata/Git",id:"metadata/Git",title:"Git",description:"Source Control",source:"@site/docs/metadata/git.md",sourceDirName:"metadata",slug:"/metadata/Git",permalink:"/metadata/Git",draft:!1,tags:[{label:"metadata",permalink:"/tags/metadata"},{label:"Git",permalink:"/tags/git"}],version:"current",sidebarPosition:2,frontMatter:{title:"Git",id:"Git",description:"Source Control",sidebar_position:2,tags:["metadata","Git"]},sidebar:"defaultSidebar",previous:{title:"Project Metadata",permalink:"/metadata/Project Metadata"},next:{title:"Metadata Connections",permalink:"/metadata/metadata-connections"}},l={},c=[{value:"How to connect to external Git",id:"how-to-connect-to-external-git",level:2},{value:"Authorizing Prophecy Oauth App",id:"authorizing-prophecy-oauth-app",level:2},{value:"How to create a new Project with external Git provider",id:"how-to-create-a-new-project-with-external-git-provider",level:2},{value:"How to commit changes",id:"how-to-commit-changes",level:2},{value:"How to create/checkout branch",id:"how-to-createcheckout-branch",level:2},{value:"How to merge changes",id:"how-to-merge-changes",level:2},{value:"How to Pull changes",id:"how-to-pull-changes",level:2},{value:"How to release a branch",id:"how-to-release-a-branch",level:2},{value:"How to resolve conflicts during merging",id:"how-to-resolve-conflicts-during-merging",level:2},{value:"How to use fork per user Git storage model",id:"how-to-use-fork-per-user-git-storage-model",level:2}],p={toc:c},d="wrapper";function g(e){let{components:t,...r}=e;return(0,i.yg)(d,(0,o.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"how-to-connect-to-external-git"},"How to connect to external Git"),(0,i.yg)("p",null,"Configure your user's ",(0,i.yg)("a",{parentName:"p",href:"https://app.prophecy.io/metadata/settings"},"Settings")," with a new ",(0,i.yg)("inlineCode",{parentName:"p"},"Git")," provider: enter ",(0,i.yg)("inlineCode",{parentName:"p"},"Email"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Username")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"Personal Access Token"),", or simply ",(0,i.yg)("inlineCode",{parentName:"p"},"Login with Github"),"."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"GitConnector",src:a(13250).A,width:"543",height:"702"})),(0,i.yg)("p",null,"The video below walks through connecting to an external Git provider:"),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/121796483/216262458-a2c4a45b-d999-4fe8-99eb-f39a494062ca.mp4",title:"External Git",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("p",null,"Every user will have a ",(0,i.yg)("inlineCode",{parentName:"p"},"Prophecy Managed")," Git provider already created in their account. You can just use this if you don't want to store your code to an external Git."),(0,i.yg)("h2",{id:"authorizing-prophecy-oauth-app"},"Authorizing Prophecy Oauth App"),(0,i.yg)("p",null,"If you are a member of a GitHub Organization, it's important to note that you may need to ",(0,i.yg)("a",{parentName:"p",href:"https://docs.github.com/en/apps/oauth-apps/using-oauth-apps/authorizing-oauth-apps"},"authorize our application")," to access your organization. This authorization step is necessary to ensure that our application can authenticate the APIs required to access the repositories."),(0,i.yg)("p",null,"To grant authorization, follow the steps below:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Go to the ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/settings/applications"},"Authorized OAuth Apps settings page")," on GitHub."),(0,i.yg)("li",{parentName:"ol"},"Look for our application named Prophecy in the list of authorized apps and click on the entry to view its details.")),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"GitOauthApps",src:a(8939).A,width:"941",height:"515"})),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},"On the application details page, you should see an option to grant access to your organizations. Enable the necessary organization access permissions to allow our application to interact with your organization's repositories effectively. Please refer below image for permissions required.")),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Permissions",src:a(74778).A,width:"920",height:"518"})),(0,i.yg)("p",null,"After selecting the appropriate organization access permissions, click the Save or Authorize button to save your changes and grant access to our application."),(0,i.yg)("p",null,"If you encounter any issues during the authorization process or have any questions regarding organization access, please reach out to us at ",(0,i.yg)("a",{parentName:"p",href:"mailto:success@Prophecy.io"},"contact us")," for assistance."),(0,i.yg)("h2",{id:"how-to-create-a-new-project-with-external-git-provider"},"How to create a new Project with external Git provider"),(0,i.yg)("p",null,"Once a Git Credential is created, it can be used during Project creation (video below). Later, this credential will be used to commit and release changes to Git for the entire Project."),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/121796483/216262055-a2507bfa-b363-4e41-8a32-c11896606173.mp4",title:"External Git",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("p",null,"If you have not created your Git credentials already, you also have an option to create a Git credential from the Project creation screen directly. This Git credential can be reused for new Projects."),(0,i.yg)("p",null,"Note that each Project is associated with a repository. This is the location Prophecy will store the Project's code. Select a default branch and path within that repository."),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"To see a dropdown of repositories accessible to the Git user, be sure to connect from Prophecy using the native GitHub Oauth method, ie ",(0,i.yg)("strong",{parentName:"p"},"Login with GitHub"),". The dropdown list of repositories is not accessible to Prophecy if the Git connection uses the Personal Access Token method of authentication.")),(0,i.yg)("h2",{id:"how-to-commit-changes"},"How to commit changes"),(0,i.yg)("p",null,"When you create your first Project, ",(0,i.yg)("inlineCode",{parentName:"p"},"dev")," branch is automatically created for you. This is to ensure that no edits/commits are made directly on the ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," ",(0,i.yg)("a",{parentName:"p",href:"/concepts/Project/#Project-commits"},"branch"),"."),(0,i.yg)("p",null,"Within a Project, create a Pipeline and commit changes to the ",(0,i.yg)("inlineCode",{parentName:"p"},"dev/$USERNAME")," branch:"),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/121796483/216262123-8f1c71d2-f4d9-40a4-bc6f-a11b81e2b68c.mp4",title:"How to commit",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("h2",{id:"how-to-createcheckout-branch"},"How to create/checkout branch"),(0,i.yg)("p",null,"Currently we are on ",(0,i.yg)("inlineCode",{parentName:"p"},"dev")," branch which has our ",(0,i.yg)("inlineCode",{parentName:"p"},"first_Pipeline"),".\nNow let's see how to go back to our ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," branch and also create a new ",(0,i.yg)("inlineCode",{parentName:"p"},"second_branch")," from the main branch."),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174550774-0f71fd10-da7c-4ed5-bd7a-d724fe5aa7b7.mp4",title:"How to create branch",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("h2",{id:"how-to-merge-changes"},"How to merge changes"),(0,i.yg)("p",null,"Let's merge our ",(0,i.yg)("inlineCode",{parentName:"p"},"first_Pipeline")," from ",(0,i.yg)("inlineCode",{parentName:"p"},"dev")," branch into ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," branch."),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174550866-10de3632-0576-417f-99dd-8a71a916bed6.mp4",title:"How to merge changes",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("h2",{id:"how-to-pull-changes"},"How to Pull changes"),(0,i.yg)("p",null,"Pulling changes from a branch is as simple as in any GUI based Git interface.\nLet's pull our ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," branch into the empty ",(0,i.yg)("inlineCode",{parentName:"p"},"second_branch")," which we created earlier. Please refer the below video for step-by-step example:"),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174550900-b1f701bc-f1ef-4c5f-a39f-bd0378f71c27.mp4",title:"How to pull changes",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Currently pull only from ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," branch to any specific branch is supported.")),(0,i.yg)("h2",{id:"how-to-release-a-branch"},"How to release a branch"),(0,i.yg)("p",null,"Once the changes are merged, we can ",(0,i.yg)("inlineCode",{parentName:"p"},"release")," a branch straight from the UI itself."),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174550916-7d8beb20-2013-401d-be30-67c02983958f.mp4",title:"How to release a branch",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Git after release",src:a(55295).A,width:"2490",height:"1182"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Databricks scheduler changes would only come into effect once the Project is released.")),(0,i.yg)("h2",{id:"how-to-resolve-conflicts-during-merging"},"How to resolve conflicts during merging"),(0,i.yg)("p",null,"Now let's create a Project in ",(0,i.yg)("inlineCode",{parentName:"p"},"third_branch")," with same name as ",(0,i.yg)("inlineCode",{parentName:"p"},"first_Pipeline")," and put a different path in Dataset.\nPost this once we pull the changes from ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," into this branch, it would have conflicts as ",(0,i.yg)("inlineCode",{parentName:"p"},"first_Pipeline")," exists both in\n",(0,i.yg)("inlineCode",{parentName:"p"},"main")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"current")," branch."),(0,i.yg)("p",null,"One way is to use the Git interface directly to resolve conflicts between branches."),(0,i.yg)("p",null,"Or we can use the simple merge UI on Prophecy to resolve the conflicts"),(0,i.yg)("p",null,"Let's see in the video below on how to resolve conflicts using simple merge on Prophecy:"),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174733075-b878a77d-97df-4bc9-8baf-5fcc72e268db.mp4",title:"How to resolve conflicts",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("h2",{id:"how-to-use-fork-per-user-git-storage-model"},"How to use fork per user Git storage model"),(0,i.yg)("p",null,"During the creation of Project there is an option to choose fork per usage as Git Storage model.\nWhen you fork a repository, you create a copy of the original repository (upstream repository) but the repository remains on your GitHub account."),(0,i.yg)("p",null,"When using the fork per usage Git storage model while creating a new Project, apart from the ",(0,i.yg)("inlineCode",{parentName:"p"},"upstream repository")," details, some additional information is needed for the ",(0,i.yg)("inlineCode",{parentName:"p"},"forked repository"),"."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Fork repo setup",src:a(81793).A,width:"1148",height:"812"})),(0,i.yg)("p",null,"Let's create a fork of our original repository and pull ",(0,i.yg)("inlineCode",{parentName:"p"},"main")," branch from original repository to our newly created forked repository."),(0,i.yg)("div",{class:"wistia_responsive_padding",style:{padding:"56.25% 0 0 0",position:"relative"}},(0,i.yg)("div",{class:"wistia_responsive_wrapper",style:{height:"100%",left:0,position:"absolute",top:0,width:"100%"}},(0,i.yg)("iframe",{src:"https://user-images.Githubusercontent.com/103921419/174733053-a45b61e3-1ebb-4ca2-99d9-5ad0d8b67ddb.mp4",title:"How to create fork",allow:"autoplay;fullscreen",allowtransparency:"true",frameborder:"0",scrolling:"no",class:"wistia_embed",name:"wistia_embed",msallowfullscreen:!0,width:"100%",height:"100%"}))),(0,i.yg)("p",null,"Now to pull main branch from upstream repository or from origin of current repository is as simple as clicking on below\n",(0,i.yg)("inlineCode",{parentName:"p"},"Pull Upstream")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"Pull Origin")," options"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Fork repo extra options",src:a(32810).A,width:"616",height:"452"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("ol",{parentName:"admonition"},(0,i.yg)("li",{parentName:"ol"},"Any changes made in forked repository would not effect the ",(0,i.yg)("inlineCode",{parentName:"li"},"upstream repository")," and would only reflect in the ",(0,i.yg)("inlineCode",{parentName:"li"},"forked repository"),"."),(0,i.yg)("li",{parentName:"ol"},"Please follow the normal G\xdfit flow for raising pull requests to the ",(0,i.yg)("inlineCode",{parentName:"li"},"original repository")," (upstream repository) from the ",(0,i.yg)("inlineCode",{parentName:"li"},"forked repository"),"."))))}g.isMDXComponent=!0},81793:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/fork_repo_eg1-3056a906cb2ce1d1ab0bc505e8e27f9c.png"},32810:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/fork_repo_eg2-5465d84b97f430cf7a77e7e82951dd8a.png"},13250:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/git_connector-8927b9e3c41b7a8244e59b89d1211dce.png"},8939:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/git_oauth_apps-836aabb5c4bd2d61d2429ce5bd583453.png"},55295:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/git_release1-fde76496ab95be070c67b2d24357174c.png"},74778:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/oauth_permissions-82a30e5a5bfa6bb89989f8301b8909ed.png"}}]);