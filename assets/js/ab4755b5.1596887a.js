"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[82548],{19087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"analysts/development/gems/source-target/file/xml","title":"XML","description":"Read and write XML files","source":"@site/docs/analysts/development/gems/source-target/file/xml.md","sourceDirName":"analysts/development/gems/source-target/file","slug":"/analysts/xml","permalink":"/analysts/xml","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"XML","id":"xml","slug":"/analysts/xml","description":"Read and write XML files","tags":[]},"sidebar":"mySidebar","previous":{"title":"JSON","permalink":"/analysts/json"},"next":{"title":"Databricks","permalink":"/analysts/databricks"}}');var r=n(74848),i=n(28453);const a={title:"XML",id:"xml",slug:"/analysts/xml",description:"Read and write XML files",tags:[]},o=void 0,c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Source properties",id:"source-properties",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("span",{class:"badge",children:"Prophecy Automate"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.p,{children:"Read or write an XML file from an S3, SFTP, SharePoint, or Databricks connection."}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["You can also use the ",(0,r.jsx)(t.a,{href:"/analysts/upload-file",children:"upload file"})," feature to use XML files. These will be stored in the SQL warehouse configured in your fabric."]})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Location type"}),(0,r.jsx)(t.td,{children:"Location you want to connect from."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Select or create connection"}),(0,r.jsx)(t.td,{children:"Whether to select an existing connection, or to create a new one."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Filepath"}),(0,r.jsx)(t.td,{children:"The file path according to the connection type."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"source-properties",children:"Source properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Default"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Description"}),(0,r.jsx)(t.td,{children:"Description of the table."}),(0,r.jsx)(t.td,{children:"None"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Row Tag"}),(0,r.jsx)(t.td,{children:"XML tag that identifies a single row or record in the dataset."}),(0,r.jsx)(t.td,{children:"None"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Inference Data Sampling Limit"}),(0,r.jsx)(t.td,{children:"Maximum number of rows to sample for inferring the schema."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"0"})})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);