"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[5171],{15680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>c});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=m(a),g=r,c=p["".concat(s,".").concat(g)]||p[g]||u[g]||l;return a?n.createElement(c,o(o({ref:t},d),{},{components:a})):n.createElement(c,o({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>o});var n=a(96540),r=a(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,o),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>w});var n=a(58168),r=a(96540),l=a(20053),o=a(23104),i=a(56347),s=a(57485),m=a(31682),d=a(89466);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,m.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function g(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function c(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.W6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=u(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,m]=c({queryString:a,groupId:n}),[p,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,d.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),f=(()=>{const e=s??p;return g({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),m(e),y(e)}),[m,y,l]),tabValues:l}}var f=a(92303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:m}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.a_)(),u=e=>{const t=e.currentTarget,a=d.indexOf(t),n=m[a].value;n!==i&&(p(t),s(n))},g=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":a},t)},m.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:g,onClick:u},o,{className:(0,l.A)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function N(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=y(e);return r.createElement("div",{className:(0,l.A)("tabs-container",h.tabList)},r.createElement(b,(0,n.A)({},e,t)),r.createElement(N,(0,n.A)({},e,t)))}function w(e){const t=(0,f.A)();return r.createElement(v,(0,n.A)({key:String(t)},e))}},45202:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>m,toc:()=>p});var n=a(58168),r=(a(96540),a(15680)),l=a(11470),o=a(19365);const i={sidebar_position:5,title:"Schema Transform",id:"schema-transform",description:"Add, Edit, Rename or Drop Columns",tags:["gems","withColumn","transform","schema"]},s=void 0,m={unversionedId:"Spark/gems/transform/schema-transform",id:"Spark/gems/transform/schema-transform",title:"Schema Transform",description:"Add, Edit, Rename or Drop Columns",source:"@site/docs/Spark/gems/transform/schema-transform.md",sourceDirName:"Spark/gems/transform",slug:"/Spark/gems/transform/schema-transform",permalink:"/Spark/gems/transform/schema-transform",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"withColumn",permalink:"/tags/with-column"},{label:"transform",permalink:"/tags/transform"},{label:"schema",permalink:"/tags/schema"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Schema Transform",id:"schema-transform",description:"Add, Edit, Rename or Drop Columns",tags:["gems","withColumn","transform","schema"]},sidebar:"defaultSidebar",previous:{title:"Flatten Schema",permalink:"/Spark/gems/transform/flatten-schema"},next:{title:"Limit",permalink:"/Spark/gems/transform/limit"}},d={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Operation types",id:"operation-types",level:2},{value:"Example",id:"example",level:2},{value:"Spark Code",id:"spark-code",level:2},{value:"Advanced Import",id:"advanced-import",level:2},{value:"Using Advanced Import",id:"using-advanced-import",level:3},{value:"Format",id:"format",level:3},{value:"Advanced Import Operation types",id:"advanced-import-operation-types",level:3}],u={toc:p},g="wrapper";function c(e){let{components:t,...i}=e;return(0,r.yg)(g,(0,n.A)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"SchemaTransform is used to add, edit, rename or drop columns from the incoming DataFrame."),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"Unlike Reformat which is a set operation where all the transforms are applied in parallel, transformations here are applied ",(0,r.yg)("em",{parentName:"p"},"in order"),".\nReformat is a SQL ",(0,r.yg)("inlineCode",{parentName:"p"},"select")," and is preferable when making many changes.")),(0,r.yg)("h2",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"DataFrame"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Input DataFrame"),(0,r.yg)("td",{parentName:"tr",align:"left"},"True")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"Add/Replace Column"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"Rename Column")," and ",(0,r.yg)("inlineCode",{parentName:"td"},"Drop Column")),(0,r.yg)("td",{parentName:"tr",align:"left"},"Required if a transformation is added")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"New Column"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Output column name (when Add/Replace operation is selected)"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Required if ",(0,r.yg)("inlineCode",{parentName:"td"},"Add/Replace Column")," is selected")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Expression"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Expression to generate new column (when Add/Replace operation is selected)"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Required if ",(0,r.yg)("inlineCode",{parentName:"td"},"Add/Replace Column")," is selected")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Old Column Name"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Column to be renamed (when Rename operation is selected)"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Required if ",(0,r.yg)("inlineCode",{parentName:"td"},"Rename Column")," is selected")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"New Column Name"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Output column name (when Rename operation is selected)"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Required if ",(0,r.yg)("inlineCode",{parentName:"td"},"Rename Column")," is selected")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Column to drop"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Column to be dropped (when Drop operation is selected)"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Required if ",(0,r.yg)("inlineCode",{parentName:"td"},"Drop Column")," is selected")))),(0,r.yg)("h2",{id:"operation-types"},"Operation types"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Operation Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add/Replace"),(0,r.yg)("td",{parentName:"tr",align:null},"Add a new column or replace an existing one based on an expression")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Drop"),(0,r.yg)("td",{parentName:"tr",align:null},"Removes a single column from the next stages of the pipeline. This is useful if you need 9 out of 10 columns, for example.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Rename"),(0,r.yg)("td",{parentName:"tr",align:null},"Renames an existing column")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add if Missing"),(0,r.yg)("td",{parentName:"tr",align:null},"Provide a default value for a column if it's missing from the source. For example, if reading from a CSV file daily and want to ensure a column has a value even if it's not in the source files use this option.")))),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Example usage of SchemaTransform",src:a(34994).A,width:"940",height:"365"})),(0,r.yg)("h2",{id:"spark-code"},"Spark Code"),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},'def transform(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0\\\n        .withColumn("business_date", to_date(lit("2022-05-05"), "yyyy-MM-dd"))\\\n        .withColumnRenamed("bonus_rate", "bonus")\\\n        .drop("slug")\n\n'))),(0,r.yg)(o.A,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'object transform {\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.withColumn("business_date", to_date(lit("2022-05-05"), "yyyy-MM-dd"))\n      .withColumnRenamed("bonus_rate", "bonus")\n      .drop("slug")\n}\n')))),(0,r.yg)("h2",{id:"advanced-import"},"Advanced Import"),(0,r.yg)("p",null,"The Advanced Import feature allows you to bulk import statements that are structured similarly to CSV/TSV files. This can be useful if you have your expressions/transformation logic in another format and just want to quickly configure a ",(0,r.yg)("inlineCode",{parentName:"p"},"Schema Transform")," Gem based on existing logic."),(0,r.yg)("h3",{id:"using-advanced-import"},"Using Advanced Import"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Click the ",(0,r.yg)("inlineCode",{parentName:"li"},"Advanced")," button in the ",(0,r.yg)("inlineCode",{parentName:"li"},"Schema Transform")," Gem UI")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Advanced import toggle",src:a(91092).A,width:"1418",height:"603"})),(0,r.yg)("ol",{start:2},(0,r.yg)("li",{parentName:"ol"},"Enter the expressions into the text area using the format as described below:")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Advanced import mode",src:a(96207).A,width:"1433",height:"255"})),(0,r.yg)("ol",{start:3},(0,r.yg)("li",{parentName:"ol"},"Use the button at the top (labeled ",(0,r.yg)("inlineCode",{parentName:"li"},"Expressions"),") to switch back to the expressions view. This will translate the expressions from the CSV format to the table format and will show any errors detected.")),(0,r.yg)("h3",{id:"format"},"Format"),(0,r.yg)("p",null,"The format of these expressions is ",(0,r.yg)("inlineCode",{parentName:"p"},"op_type,target_name,target_expr"),", where ",(0,r.yg)("inlineCode",{parentName:"p"},"op_type")," is the type of operation (see below); ",(0,r.yg)("inlineCode",{parentName:"p"},"target_name")," is the desired new column name and ",(0,r.yg)("inlineCode",{parentName:"p"},"target_expr")," is the Spark expression that will be used to generate the new column. Each ",(0,r.yg)("inlineCode",{parentName:"p"},"op_type")," has a different number of extra columns that have to be provided, see below for more details."),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"For ",(0,r.yg)("inlineCode",{parentName:"p"},"target_expr")," values that contain a comma ",(0,r.yg)("inlineCode",{parentName:"p"},",")," or span multiple lines, you must surround them by ",(0,r.yg)("inlineCode",{parentName:"p"},"``")," on either side. For example:"),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"addrep,customer_id,customer_id\naddrep,full_name,``concat(first_name, ' ', last_name)``\n"))),(0,r.yg)("h3",{id:"advanced-import-operation-types"},"Advanced Import Operation types"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Operation Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Advanced Import name"),(0,r.yg)("th",{parentName:"tr",align:null},":Arguments:"),(0,r.yg)("th",{parentName:"tr",align:null},"Example"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add/Replace"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addrep")),(0,r.yg)("td",{parentName:"tr",align:null},"2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addrep,foo,CAST(NULL as int)"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Drop"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"drop")),(0,r.yg)("td",{parentName:"tr",align:null},"1"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"drop bar"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Rename"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"rename")),(0,r.yg)("td",{parentName:"tr",align:null},"2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"rename,foo,bar"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Add if missing"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"missing")),(0,r.yg)("td",{parentName:"tr",align:null},"2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"missing,foo,current_timestamp()"))))))}c.isMDXComponent=!0},34994:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/schemaTransform_eg_1-c37ea99ca92e266556a154dd1bc961ad.png"},91092:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/schematransform_advanced_1-fd79241dd8f49aaf0887ea382dadc2a9.png"},96207:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/schematransform_advanced_2-a4cbe3cff9433842b21d5e17509a3939.png"}}]);