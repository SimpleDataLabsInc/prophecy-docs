"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[2931],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7780:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={title:"Projects & Git",id:"project",description:"Keeping your Pipelines, Datasets and Jobs under (source) control",sidebar_position:5,tags:["concepts","project","git"]},p=void 0,s={unversionedId:"core-concepts/project",id:"core-concepts/project",title:"Projects & Git",description:"Keeping your Pipelines, Datasets and Jobs under (source) control",source:"@site/docs/core-concepts/project.md",sourceDirName:"core-concepts",slug:"/core-concepts/project",permalink:"/core-concepts/project",draft:!1,tags:[{label:"concepts",permalink:"/tags/concepts"},{label:"project",permalink:"/tags/project"},{label:"git",permalink:"/tags/git"}],version:"current",sidebarPosition:5,frontMatter:{title:"Projects & Git",id:"project",description:"Keeping your Pipelines, Datasets and Jobs under (source) control",sidebar_position:5,tags:["concepts","project","git"]},sidebar:"defaultSidebar",previous:{title:"Fabrics",permalink:"/core-concepts/fabric"},next:{title:"Jobs",permalink:"/core-concepts/job"}},l={},u=[{value:"Project is Code on Git",id:"project-is-code-on-git",level:2},{value:"Development &amp; Deployment",id:"development--deployment",level:2},{value:"1. Create new project",id:"1-create-new-project",level:3},{value:"2. Create, edit &amp; commit the pipeline",id:"2-create-edit--commit-the-pipeline",level:3},{value:"3. Merge your changes",id:"3-merge-your-changes",level:3}],d={toc:u};function m(e){var t=e.components,c=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Project is the primary unit of development and deployment to production in Prophecy."),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"project")," contains"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Data pipelines")," that read, transform and write data using Spark"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Datasets")," point to the data that is read and written to by the ",(0,a.kt)("em",{parentName:"li"},"Data Pipelines")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Jobs")," run ",(0,a.kt)("em",{parentName:"li"},"Data Pipelines")," based on a ",(0,a.kt)("strong",{parentName:"li"},"schedule"))),(0,a.kt)("h2",{id:"project-is-code-on-git"},"Project is Code on Git"),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"project")," is ",(0,a.kt)("strong",{parentName:"p"},"code")," on ",(0,a.kt)("strong",{parentName:"p"},"git"),". This means that within a project, the business logic of all the assets\nincluding ",(0,a.kt)("em",{parentName:"p"},"data pipelines"),", ",(0,a.kt)("em",{parentName:"p"},"datasets"),", and ",(0,a.kt)("em",{parentName:"p"},"jobs")," is stored as code on Git. This might be a repository on Github\nor a folder in a repository."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Project is code",src:n(7453).Z,width:"1556",height:"438"})),(0,a.kt)("h2",{id:"development--deployment"},"Development & Deployment"),(0,a.kt)("p",null,"Prophecy provides a standard and recommended mechanism for using Git based development\n(though other mechanisms are possible - including fork based development in our Enterprise product)"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Project deply",src:n(5234).Z,width:"1556",height:"1380"})),(0,a.kt)("p",null,"Here are the steps explained:"),(0,a.kt)("h3",{id:"1-create-new-project"},"1. Create new project"),(0,a.kt)("p",null,"First you'll create a new project as shown below. It is strongly recommended that you connect to your Git repository\nto ensure that there is a secure copy of the code that you have direct access to."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"New project",src:n(2495).Z,width:"3584",height:"2022"})),(0,a.kt)("h3",{id:"2-create-edit--commit-the-pipeline"},"2. Create, edit & commit the pipeline"),(0,a.kt)("p",null,"When you ",(0,a.kt)("strong",{parentName:"p"},"create a new pipeline"),", you have to choose the ",(0,a.kt)("strong",{parentName:"p"},"branch")," where it will be created - an existing one or a new one. "),(0,a.kt)("p",null,"Then you will ",(0,a.kt)("strong",{parentName:"p"},"develop")," this pipeline - you will make ",(0,a.kt)("strong",{parentName:"p"},"changes")," & ",(0,a.kt)("strong",{parentName:"p"},"commit")," them in this branch multiple times.\nThe commit dialog opens when you click the bottom bar - orange color indicates uncommitted changes."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Commit",src:n(2848).Z,width:"3560",height:"2021"})),(0,a.kt)("p",null,"Now you've made all the changes back and are ready to push them back to the main repository"),(0,a.kt)("h3",{id:"3-merge-your-changes"},"3. Merge your changes"),(0,a.kt)("p",null,"When you create a new workflow, a default branch is created for you."))}m.isMDXComponent=!0},2848:function(e,t,n){t.Z=n.p+"assets/images/commit-9f74e8ce23c6f496eaa7e1000212a023.png"},2495:function(e,t,n){t.Z=n.p+"assets/images/new_project-115ae2ecd89509d9352bb8743eded21d.png"},5234:function(e,t,n){t.Z=n.p+"assets/images/project_deploy-1517e774a32578432f811211c5ad6b14.png"},7453:function(e,t,n){t.Z=n.p+"assets/images/project_is_code-2725f715e5d36169f4feafad4464a82f.png"}}]);