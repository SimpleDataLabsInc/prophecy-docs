"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[38379],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>c});var n=r(96540);const s={},a=n.createContext(s);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:t},e.children)}},43336:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"analysts/development/gems/source-target/external-table/oracle","title":"Oracle","description":"Read and write from Oracle","source":"@site/docs/analysts/development/gems/source-target/external-table/oracle.md","sourceDirName":"analysts/development/gems/source-target/external-table","slug":"/analysts/oracle","permalink":"/analysts/oracle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Oracle","id":"oracle","slug":"/analysts/oracle","description":"Read and write from Oracle","tags":[]},"sidebar":"mySidebar","previous":{"title":"MongoDB","permalink":"/analysts/mongodb"},"next":{"title":"Redshift","permalink":"/analysts/redshift"}}');var s=r(74848),a=r(28453);const o={title:"Oracle",id:"oracle",slug:"/analysts/oracle",description:"Read and write from Oracle",tags:[]},c=void 0,l={},d=[{value:"Source parameters",id:"source-parameters",level:2}];function i(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("span",{class:"badge",children:"Prophecy Automate"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"Use a table from Oracle as an external source."}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Oracle target not supported."})}),"\n",(0,s.jsx)(t.h2,{id:"source-parameters",children:"Source parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Tab"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Connection type"}),(0,s.jsx)(t.td,{children:"Type"}),(0,s.jsx)(t.td,{children:"Location you want to connect from."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Format type"}),(0,s.jsx)(t.td,{children:"Source location"}),(0,s.jsxs)(t.td,{children:["Format of the gem. In this case, ",(0,s.jsx)(t.code,{children:"oracle"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Select or create connection"}),(0,s.jsx)(t.td,{children:"Source location"}),(0,s.jsx)(t.td,{children:"Whether to select an existing connection, or to create a new one."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Read using"}),(0,s.jsx)(t.td,{children:"Source location"}),(0,s.jsxs)(t.td,{children:["Choose table or query.",(0,s.jsxs)("ul",{class:"table-list",children:[(0,s.jsxs)("li",{children:[(0,s.jsx)(t.strong,{children:"Table"}),": Provide the schema and name of the table you want to read."]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(t.strong,{children:"Query"}),": Enter a SQL query directly in the gem to select a table."]})]})]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}}}]);