"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[3029],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>u});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),g=a,u=m["".concat(l,".").concat(g)]||m[g]||d[g]||i;return t?r.createElement(u,o(o({ref:n},p),{},{components:t})):r.createElement(u,o({ref:n},p))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[m]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3514:(e,n,t)=>{t.d(n,{A:()=>y});var r=t(96540),a=t(20053),i=t(84142),o=t(75489),c=t(16654),l=t(21312);const s={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:n,children:t}=e;return r.createElement(o.A,{href:n,className:(0,a.A)("card padding--lg",s.cardContainer)},t)}function m(e){let{href:n,icon:t,title:i,description:o}=e;return r.createElement(p,{href:n},r.createElement("h2",{className:(0,a.A)("text--truncate",s.cardTitle),title:i},t," ",i),o&&r.createElement("p",{className:(0,a.A)("text--truncate",s.cardDescription),title:o},o))}function d(e){let{item:n}=e;const t=(0,i._o)(n);return t?r.createElement(m,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??(0,l.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function g(e){let{item:n}=e;const t=(0,c.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.cC)(n.docId??void 0);return r.createElement(m,{href:n.href,icon:t,title:n.label,description:n.description??a?.description})}function u(e){let{item:n}=e;switch(n.type){case"link":return r.createElement(g,{item:n});case"category":return r.createElement(d,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function h(e){let{className:n}=e;const t=(0,i.$S)();return r.createElement(y,{items:t.items,className:n})}function y(e){const{items:n,className:t}=e;if(!n)return r.createElement(h,e);const o=(0,i.d1)(n);return r.createElement("section",{className:(0,a.A)("row",t)},o.map(((e,n)=>r.createElement("article",{key:n,className:"col col--6 margin-bottom--lg"},r.createElement(u,{item:e})))))}},64553:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>m});var r=t(58168),a=(t(96540),t(15680)),i=t(3514),o=t(84142);const c={title:"Machine Learning",id:"Machine Learning",description:"Preparing and Using Data for Machine Learning",tags:["generative-ai","machine-learning","llm","pinecone","openai"]},l=void 0,s={unversionedId:"low-code-spark/gems/machine-learning/Machine Learning",id:"low-code-spark/gems/machine-learning/Machine Learning",title:"Machine Learning",description:"Preparing and Using Data for Machine Learning",source:"@site/docs/low-code-spark/gems/machine-learning/machine-learning.md",sourceDirName:"low-code-spark/gems/machine-learning",slug:"/low-code-spark/gems/machine-learning/",permalink:"/low-code-spark/gems/machine-learning/",draft:!1,tags:[{label:"generative-ai",permalink:"/tags/generative-ai"},{label:"machine-learning",permalink:"/tags/machine-learning"},{label:"llm",permalink:"/tags/llm"},{label:"pinecone",permalink:"/tags/pinecone"},{label:"openai",permalink:"/tags/openai"}],version:"current",frontMatter:{title:"Machine Learning",id:"Machine Learning",description:"Preparing and Using Data for Machine Learning",tags:["generative-ai","machine-learning","llm","pinecone","openai"]},sidebar:"defaultSidebar",previous:{title:"Rest API Enrich",permalink:"/low-code-spark/gems/custom/rest-api-enrich"},next:{title:"Text Processing",permalink:"/low-code-spark/gems/machine-learning/ml-text-processing"}},p={},m=[{value:"Cluster library dependencies",id:"cluster-library-dependencies",level:3}],d={toc:m},g="wrapper";function u(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Each page below describes one of the set of Gems that prepare or use data for Machine Learning. These Gems have a required ",(0,a.yg)("a",{parentName:"p",href:"/low-code-spark/gems/machine-learning/#cluster-library-dependencies"},"Cluster library dependency"),". For an example set of Pipelines that use these Gems to create a Generative AI Chatbot, see this ",(0,a.yg)("a",{parentName:"p",href:"/getting-started/gen-ai-chatbot"},"guide.")),(0,a.yg)(i.A,{items:(0,o.$S)().items,mdxType:"DocCardList"}),(0,a.yg)("h3",{id:"cluster-library-dependencies"},"Cluster library dependencies"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/prophecy-io/spark-ai/tree/main"},(0,a.yg)("strong",{parentName:"a"},"Spark-AI"))," - Toolbox for building Generative AI applications on top of Apache Spark. This library dependency is required for the Machine Learning Gem functionality. Setup this dependency in one of two ways:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Option a. Import a project with the spark-ai dependency preconfigured, as in this ",(0,a.yg)("a",{parentName:"p",href:"/getting-started/gen-ai-chatbot#1c-load-the-git-repository"},"guide."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Option b. Alternatively, add ",(0,a.yg)("inlineCode",{parentName:"p"},"prophecy-spark-ai==0.1.8")," as a Python library, and ",(0,a.yg)("inlineCode",{parentName:"p"},"io.prophecy:spark-ai_2.12:0.1.8")," as a Maven library to the Pipeline ",(0,a.yg)("a",{parentName:"p",href:"/low-code-spark/extensibility/dependencies#add-dependency"},"dependencies.")))),(0,a.yg)("p",null,"Click ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/prophecy-io/spark-ai/tree/main#roadmap"},"here")," to see the roadmap for what's coming in the future with the Spark-AI toolbox."))}u.isMDXComponent=!0}}]);