"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[69027],{26699:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"analysts/development/gems/parse/regex","title":"Regex gem","description":"Pattern matching and text extraction using regular expressions","source":"@site/docs/analysts/development/gems/parse/regex.md","sourceDirName":"analysts/development/gems/parse","slug":"/analysts/regex","permalink":"/analysts/regex","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"transform","permalink":"/tags/transform"}],"version":"current","frontMatter":{"title":"Regex gem","sidebar_label":"Regex","id":"regex","slug":"/analysts/regex","description":"Pattern matching and text extraction using regular expressions","tags":["gems","analyst","transform"]},"sidebar":"platformSidebar","previous":{"title":"TextToColumns","permalink":"/analysts/text-to-column"},"next":{"title":"Report gems","permalink":"/analysts/report-gems"}}');var r=s(74848),i=s(28453),l=s(77956);const d={title:"Regex gem",sidebar_label:"Regex",id:"regex",slug:"/analysts/regex",description:"Pattern matching and text extraction using regular expressions",tags:["gems","analyst","transform"]},c=void 0,h={},o=[{value:"Input and Output",id:"input-and-output",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Common configuration",id:"common-configuration",level:3},{value:"Replace configuration",id:"replace-configuration",level:3},{value:"Example",id:"example-replace",level:4},{value:"Tokenize configuration",id:"tokenize-configuration",level:3},{value:"Example",id:"example-tokenize",level:4},{value:"Parse configuration",id:"parse-configuration",level:3},{value:"Example",id:"example-parse",level:4},{value:"Match configuration",id:"match-configuration",level:3},{value:"Example",id:"example-match",level:4}];function a(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.A,{execution_engine:"SQL Warehouse",sql_package_name:"ProphecyDatabricksSqlBasics",sql_package_version:"0.0.13+"}),"\n",(0,r.jsxs)(n.p,{children:["The Regex gem enables pattern matching and text extraction using regular expressions. This gem provides four distinct output methods for processing text data: ",(0,r.jsx)(n.strong,{children:"Replace"}),", ",(0,r.jsx)(n.strong,{children:"Tokenize"}),", ",(0,r.jsx)(n.strong,{children:"Parse"}),", and ",(0,r.jsx)(n.strong,{children:"Match"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"input-and-output",children:"Input and Output"}),"\n",(0,r.jsx)(n.p,{children:"The Regex gem uses the following ports:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Port"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"in0"})}),(0,r.jsx)(n.td,{children:"The source table containing text data that needs to be processed with regex patterns."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"out"})}),(0,r.jsxs)(n.td,{children:["The output table containing: ",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Original columns preserved"}),(0,r.jsx)("li",{children:"New columns created based on the selected output method (Replace, Tokenize, Parse, or Match)"})]}),"The output schema depends on the chosen method and configuration."]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.p,{children:"Configure the Regex gem using the following parameters."}),"\n",(0,r.jsx)(n.h3,{id:"common-configuration",children:"Common configuration"}),"\n",(0,r.jsx)(n.p,{children:"These parameters are available for all regex operations:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Select Column to Split"}),(0,r.jsx)(n.td,{children:"Choose the input column containing the text data you want to process with regex patterns."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Output Method"}),(0,r.jsxs)(n.td,{children:["Select how the regex operation should handle matches: ",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("a",{href:"#replace-configuration",children:"Replace"}),": Substitute matched text with replacement values."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("a",{href:"#tokenize-configuration",children:"Tokenize"}),": Split text into tokens or columns based on regex patterns."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("a",{href:"#parse-configuration",children:"Parse"}),": Extract specific groups from regex matches into separate columns."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("a",{href:"#match-configuration",children:"Match"}),": Determine whether text matches the pattern."]})]})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Regex"}),(0,r.jsx)(n.td,{children:"Enter your regular expression pattern. The field supports standard regex syntax with capture groups for extracting specific portions of matched text."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Case Insensitive Matching"}),(0,r.jsx)(n.td,{children:"Enable this option to perform pattern matching without regard to letter case."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"replace-configuration",children:"Replace configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Replace"})," method substitutes matched portions of text with specified replacement values. When using this method, the gem outputs an additional column with the replaced values."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Replacement Text"}),(0,r.jsx)(n.td,{children:"Specify replacement text or use capture group references."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Copy Unmatched Text to Output"}),(0,r.jsx)(n.td,{children:"When enabled, non-matching text is preserved in the appended output column."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-replace",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Use this method to standardize phone number formats from ",(0,r.jsx)(n.code,{children:"555-123-4567"})," to ",(0,r.jsx)(n.code,{children:"(555) 123-4567"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Select Column to Split"}),": ",(0,r.jsx)(n.code,{children:"phone_number"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Regex"}),": ",(0,r.jsx)(n.code,{children:"(\\d{3})-(\\d{3})-(\\d{4})"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Replacement text"}),": ",(0,r.jsx)(n.code,{children:"($1)$2-$3"})]}),"\n",(0,r.jsxs)(n.p,{children:["This inserts capture groups ",(0,r.jsx)(n.code,{children:"1"}),", ",(0,r.jsx)(n.code,{children:"2"}),", and ",(0,r.jsx)(n.code,{children:"3"})," into the replacement pattern to create the new formatted string. The result is written to a new output column, while the original value is preserved."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Input table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"phone_number"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"555-332-1234"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"555-034-9876"})]})]})]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"phone_number"}),(0,r.jsx)(n.th,{children:"phone_number_replaced"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"555-332-1234"}),(0,r.jsx)(n.td,{children:"(555)332-1234"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"555-034-9876"}),(0,r.jsx)(n.td,{children:"(555)034-9876"})]})]})]})}),"\n",(0,r.jsx)(n.h3,{id:"tokenize-configuration",children:"Tokenize configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Tokenize"})," method splits text into tokens based on regex patterns and capture groups. Each capture group becomes a token. This method creates either new columns or rows depending on your configuration."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Select Split Strategy"}),(0,r.jsxs)(n.td,{children:["Choose how to split the data: ",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)(n.strong,{children:"Split to columns"}),": Breaks text into tokens and places each token into a new column in the same row. Requires a fixed number of columns."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)(n.strong,{children:"Split to rows"}),": Breaks text into tokens and outputs each token as a new row in a single column. Rows are generated dynamically, making this option useful when the number of tokens varies."]})]})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Allow Blank Tokens (Split to columns only)"}),(0,r.jsxs)(n.td,{children:["If there are fewer tokens than the defined number of columns, allow empty strings to fill the extra columns. Otherwise, those columns are set to ",(0,r.jsx)(n.code,{children:"NULL"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Number of columns (Split to columns only)"}),(0,r.jsx)(n.td,{children:"Specify the number of output columns to create for tokenized data."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"For Extra Columns (Split to columns only)"}),(0,r.jsxs)(n.td,{children:["Define how to handle cases where there are more tokens than columns. ",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)(n.strong,{children:"Drop Extra with Warning"}),": Skip writing excess tokens and log a warning message to indicate this."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)(n.strong,{children:"Drop Extra without Warning"}),": Skip writing excess tokens silently without generating warnings."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)(n.strong,{children:"Error"}),": Stop processing and raise an error when the number of tokens exceeds the defined number of columns."]})]})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Output Root Name"}),(0,r.jsx)(n.td,{children:"Base name for the new column(s) containing the tokens."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-tokenize",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"Use this method to parse email addresses into username and domain components."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Select Column to Split"}),": ",(0,r.jsx)(n.code,{children:"email"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regex"}),": ",(0,r.jsx)(n.code,{children:"([^@]+)@(.+)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Select Split Strategy"}),": Split to columns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Number of columns"}),": 2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Output root name"}),": ",(0,r.jsx)(n.code,{children:"token"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Input table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"email"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"support@example.com"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sales@company.org"})})]})]})]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"email"}),(0,r.jsx)(n.th,{children:"token_1"}),(0,r.jsx)(n.th,{children:"token_2"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"support@example.com"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"support"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"example.com"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sales@company.org"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sales"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"company.org"})})]})]})]})}),"\n",(0,r.jsx)(n.h3,{id:"parse-configuration",children:"Parse configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Parse"})," method extracts capture groups from regex matches and outputs each group as a separate column. Prophecy automatically generates one output column for every capture group in the regex."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"New Column Name"}),(0,r.jsx)(n.td,{children:"Specify the name for the new column."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Select Data Type"}),(0,r.jsx)(n.td,{children:"Choose the data type."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Regex Expression"}),(0,r.jsxs)(n.td,{children:["View the capture group that will populate the column.",(0,r.jsx)("br",{}),"If you edit this value, Prophecy will automatically revert it to the original value."]})]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Rows in the ",(0,r.jsx)(n.strong,{children:"Parse Configuration"})," table are determined by the number of capture groups in the ",(0,r.jsx)(n.strong,{children:"Regex"})," field. You cannot add additional rows to or remove rows from this table."]})}),"\n",(0,r.jsx)(n.h4,{id:"example-parse",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Use this method to parse phone numbers into ",(0,r.jsx)(n.code,{children:"area_code"}),", ",(0,r.jsx)(n.code,{children:"exchange"}),", and ",(0,r.jsx)(n.code,{children:"number"})," columns."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Select Column to Split"}),": ",(0,r.jsx)(n.code,{children:"phone_number"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Regex"}),": ",(0,r.jsx)(n.code,{children:"([0-9]{3})-([0-9]{3})-([0-9]{4})"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parse Configuration"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"New Column Name"}),(0,r.jsx)(n.th,{children:"Select Data Type"}),(0,r.jsx)(n.th,{children:"Regex Expression"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"area_code"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"([0-9]{3})"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exchange"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"([0-9]{3})"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"([0-9]{4})"})})]})]})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Input table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"phone_number"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"555-332-1234"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"555-034-9876"})]})]})]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"phone_number"}),(0,r.jsx)(n.th,{children:"area_code"}),(0,r.jsx)(n.th,{children:"exchange"}),(0,r.jsx)(n.th,{children:"number"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"555-332-1234"}),(0,r.jsx)(n.td,{children:"555"}),(0,r.jsx)(n.td,{children:"332"}),(0,r.jsx)(n.td,{children:"1234"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"555-034-9876"}),(0,r.jsx)(n.td,{children:"555"}),(0,r.jsx)(n.td,{children:"034"}),(0,r.jsx)(n.td,{children:"9876"})]})]})]})}),"\n",(0,r.jsx)(n.h3,{id:"match-configuration",children:"Match configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Match"})," method determines whether text matches the specified regex pattern. Adds a column with 1 for matches and 0 for non-matches."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Column name for match status"}),(0,r.jsx)(n.td,{children:"Specify the name for the new column containing match results."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Error if not Matched"}),(0,r.jsxs)(n.td,{children:["Enable to raise an error when no match is found. When disabled, non-matching rows will receive a ",(0,r.jsx)(n.code,{children:"0"})," value."]})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-match",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"Use this method to validate email addresses and create a binary match column."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Select Column to Split"}),": ",(0,r.jsx)(n.code,{children:"email"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regex"}),": ",(0,r.jsx)(n.code,{children:"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Column name for match status"}),": ",(0,r.jsx)(n.code,{children:"is_valid_email"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error if not matched"}),": ",(0,r.jsx)(n.code,{children:"Disabled"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Input table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"email"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"support@example.com"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sales.team"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"engineering@company.org"})})]})]})]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output table"})}),"\n",(0,r.jsx)("div",{class:"table-example",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"email"}),(0,r.jsx)(n.th,{children:"is_valid_email"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"support@example.com"})}),(0,r.jsx)(n.td,{children:"1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sales.team"})}),(0,r.jsx)(n.td,{children:"0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"engineering@company.org"})}),(0,r.jsx)(n.td,{children:"1"})]})]})]})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(96540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}},77956:(e,n,s)=>{s.d(n,{A:()=>r});s(96540);var t=s(74848);function r(e){return(0,t.jsxs)("div",{children:[e.execution_engine&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,t.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,t.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]})}}}]);