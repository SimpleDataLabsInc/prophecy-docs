"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[96965],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},l=s.createContext(r);function a(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:t},e.children)}},38170:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"analysts/development/gems/prepare/reformat","title":"Reformat","description":"Use expressions to reformat column names and values","source":"@site/docs/analysts/development/gems/prepare/reformat.md","sourceDirName":"analysts/development/gems/prepare","slug":"/analysts/reformat","permalink":"/analysts/reformat","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"analyst","permalink":"/tags/analyst"},{"inline":true,"label":"prepare","permalink":"/tags/prepare"}],"version":"current","frontMatter":{"title":"Reformat","id":"reformat","slug":"/analysts/reformat","description":"Use expressions to reformat column names and values","tags":["gems","analyst","prepare"]},"sidebar":"mySidebar","previous":{"title":"OrderBy","permalink":"/analysts/order-by"},"next":{"title":"Join","permalink":"/analysts/join"}}');var r=n(74848),l=n(28453);const a={title:"Reformat",id:"reformat",slug:"/analysts/reformat",description:"Use expressions to reformat column names and values",tags:["gems","analyst","prepare"]},o=void 0,i={},d=[{value:"Parameters",id:"parameters",level:2}];function c(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("span",{class:"badge",children:"SQL"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.p,{children:"Transforms one or more column names or values by using expressions and/or functions. It's useful when we need to extract only the required columns or make changes column-wise."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Model"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Input Source on which changes are required"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Target column"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Output column name"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"False"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Expression"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Expression to compute target column"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Required if a ",(0,r.jsx)(t.code,{children:"Target column"})," is present"]})]})]})]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"If no columns are selected, then all columns are passed through to the output."})})]})}function m(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);