"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[5596],{19124:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/sql-udf-25befa6583fc2f820cfc479a8c4ceb8b.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},37244:(e,t,n)=>{n.d(t,{A:()=>A});var s=n(96540),r=n(18215),i=n(44319),a=n(56347),l=n(94280),o=n(73024),c=n(58417),d=n(44031);function u(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)(()=>{const e=t??function(e){return u(e).map(({props:{value:e,label:t,attributes:n,default:s}})=>({value:e,label:t,attributes:n,default:s}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function f({value:e,tabValues:t}){return t.some(t=>t.value===e)}function p({queryString:e=!1,groupId:t}){const n=(0,a.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,o.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=h(e),[a,o]=(0,s.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[c,u]=p({queryString:n,groupId:r}),[x,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,d.Dv)(t);return[n,(0,s.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),m=(()=>{const e=c??x;return f({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{m&&o(m)},[m]);return{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)},[u,g,i]),tabValues:i}}var g=n(46916);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(74848);function y({className:e,block:t,selectedValue:n,selectValue:s,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),c=e=>{const t=e.currentTarget,r=l.indexOf(t),i=a[r].value;i!==n&&(o(t),s(i))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:a.map(({value:e,label:t,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...s,className:(0,r.A)("tabs__item",m.tabItem,s?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function j({lazy:e,children:t,selectedValue:n}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===n);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function v(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,b.jsx)(y,{...t,...e}),(0,b.jsx)(j,{...t,...e})]})}function A(e){const t=(0,g.A)();return(0,b.jsx)(v,{...e,children:u(e.children)},String(t))}},44444:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/add-function-4db4256c36d145dbd2a5cd9cdd181ec2.png"},56778:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var s=n(18215);const r={tabItem:"tabItem_Ymn6"};var i=n(74848);function a({children:e,hidden:t,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,n),hidden:t,children:e})}},74094:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/sql-call-function-a903ca9b686df4f1e517280b91ea120c.png"},83166:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/define-function-68dfefe1259016cb154c88f65edc6ecf.png"},83241:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/call-function-bfaab9dfdb71a9bb151a99f58baa79fb.png"},94552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"Spark/functions/udfs","title":"User-defined functions","description":"User-defined functions","source":"@site/docs/Spark/functions/user-defined-functions.md","sourceDirName":"Spark/functions","slug":"/engineers/user-defined-functions","permalink":"/engineers/user-defined-functions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"extensibility","permalink":"/tags/extensibility"},{"inline":true,"label":"udfs","permalink":"/tags/udfs"},{"inline":true,"label":"udafs","permalink":"/tags/udafs"},{"inline":true,"label":"SQL","permalink":"/tags/sql"},{"inline":true,"label":"python","permalink":"/tags/python"}],"version":"current","frontMatter":{"title":"User-defined functions","id":"udfs","slug":"/engineers/user-defined-functions","description":"User-defined functions","tags":["extensibility","udfs","udafs","SQL","python"]},"sidebar":"mySidebar","previous":{"title":"Business rules engine","permalink":"/engineers/business-rules"},"next":{"title":"Spark Structured Streaming","permalink":"/engineers/spark-streaming"}}');var r=n(74848),i=n(28453),a=n(37244),l=n(56778);const o={title:"User-defined functions",id:"udfs",slug:"/engineers/user-defined-functions",description:"User-defined functions",tags:["extensibility","udfs","udafs","SQL","python"]},c=void 0,d={},u=[{value:"Create UDFs",id:"create-udfs",level:2},{value:"Parameters",id:"parameters",level:3},{value:"How to Create UDFs",id:"how-to-create-udfs",level:3},{value:"Import UDFs",id:"import-udfs",level:2},{value:"UDFs across pipelines",id:"udfs-across-pipelines",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Prophecy lets you create and import user-defined functions (UDFs), which can be used anywhere in the pipeline. Prophecy supports creating UDFs written in Python/Scala and importing UDFs written in SQL."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Project Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Create UDFs"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Import UDFs"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Python"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Python/Scala"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"SQL"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Scala"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Python/Scala"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Not supported"})]})]})]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["Learn about UDF support in Databricks on our documentation on cluster ",(0,r.jsx)(t.a,{href:"/administration/fabrics/Spark-fabrics/databricks/ucshared",children:"access modes"}),"."]})}),"\n",(0,r.jsx)(t.h2,{id:"create-udfs",children:"Create UDFs"}),"\n",(0,r.jsx)(t.p,{children:"Prophecy supports creating UDFs written in Python or Scala."}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Function name"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the function as it appears in your project."}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"UDF Name"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the UDF that will register it. All calls to the UDF will use this name."}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Definition"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Definition of the UDF function. ",(0,r.jsx)("br",{})," For example, ",(0,r.jsx)(t.code,{children:"udf((value:Int)=>value*value)"})]}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"True"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"UDF initialization code"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Code block that contains initialization of entities used by UDFs. This could, for example, contain any static mapping that a UDF might use."}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"False"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"how-to-create-udfs",children:"How to Create UDFs"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Create a new function. You can find the ",(0,r.jsx)(t.strong,{children:"Functions"})," section in the left sidebar of a project page."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add a function to the pipeline",src:n(44444).A+"",width:"2620",height:"1508"})}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Define the function."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Define the function",src:n(83166).A+"",width:"2620",height:"1508"})}),"\n",(0,r.jsxs)(t.ol,{start:"3",children:["\n",(0,r.jsx)(t.li,{children:"Call the function."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Call the function",src:n(83241).A+"",width:"2620",height:"1508"})}),"\n","\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"py",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-py",children:'country_code_map = {"Mexico" : "MX", "USA" : "US", "India" : "IN"}\n\ndef registerUDFs(spark: SparkSession):\n    spark.udf.register("get_country_code", get_country_code)\n\n@udf(returnType = StringType())\ndef get_country_code(country: str):\n    return country_code_map.get(country, "Not Found")\n'})})}),(0,r.jsx)(l.A,{value:"scala",label:"Scala",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'object UDFs extends Serializable {\n  val country_code_map = Map("Mexico" -> "MX", "USA" -> "US", "India" -> "IN")\n\n  def registerUDFs(spark: SparkSession) =\n    spark.udf.register("get_country_code", get_country_code)\n\n  def get_country_code =\n    udf { (country: String) =>\n      country_code_map.getOrElse(country, "Not Found")\n    }\n\n}\n'})})})]}),"\n",(0,r.jsx)(t.h2,{id:"import-udfs",children:"Import UDFs"}),"\n",(0,r.jsx)(t.p,{children:"UDFs from the Unity Catalog are automatically available in Python projects when you attach to the relevant Databricks fabric. You can call these UDFs from any gem in the project."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(74094).A+"",width:"2880",height:"754"})}),"\n",(0,r.jsx)(t.p,{children:"To view a function, open the Environment browser and expand the Catalog and Schema containing the function. Refresh the project editor to access any new functions added in Databricks."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(19124).A+"",width:"2880",height:"786"})}),"\n",(0,r.jsx)(t.h2,{id:"udfs-across-pipelines",children:"UDFs across pipelines"}),"\n",(0,r.jsx)(t.p,{children:"User-defined functions (UDFs) are defined at the project level, so they are shared across all pipelines in the project."}),"\n",(0,r.jsx)(t.p,{children:"However, each pipeline keeps its own local copy of the UDF code. Prophecy updates this copy only when you open the pipeline. So if someone edits or adds a UDF in one pipeline, those changes won\u2019t automatically appear in other pipelines until you open them. At that point, Prophecy copies the latest UDF definitions into the pipeline, and you\u2019ll see them as uncommitted changes in the code view."})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);