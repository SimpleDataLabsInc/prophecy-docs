"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[33680],{10787:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"analysts/development/gems/source-target/file/json","title":"JSON","description":"Read and write JSON files","source":"@site/docs/analysts/development/gems/source-target/file/json.md","sourceDirName":"analysts/development/gems/source-target/file","slug":"/analysts/json","permalink":"/analysts/json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"JSON","id":"json","slug":"/analysts/json","description":"Read and write JSON files","tags":[]},"sidebar":"mySidebar","previous":{"title":"Fixed-width","permalink":"/analysts/fixed-width"},"next":{"title":"Parquet","permalink":"/analysts/parquet"}}');var i=r(74848),s=r(28453),o=r(77956);const c={title:"JSON",id:"json",slug:"/analysts/json",description:"Read and write JSON files",tags:[]},a=void 0,l={},d=[{value:"Supported connections",id:"supported-connections",level:2},{value:"Configuration tabs",id:"configuration-tabs",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Source properties",id:"source-properties",level:3},{value:"Target properties",id:"target-properties",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.A,{execution_engine:"Prophecy Automate",sql_package_name:"",sql_package_version:""}),"\n",(0,i.jsx)(n.p,{children:"Read or write a JSON file from an external connection using a Source or Target gem."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["You can also use the ",(0,i.jsx)(n.a,{href:"/analysts/upload-file",children:"upload file"})," feature to use JSON files. These will be stored in the SQL warehouse configured in your fabric."]})}),"\n",(0,i.jsx)(n.h2,{id:"supported-connections",children:"Supported connections"}),"\n",(0,i.jsx)(n.p,{children:"You can read JSON files from the following connections:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/administration/fabrics/prophecy-fabrics/connections/s3",children:"Amazon S3"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/administration/fabrics/prophecy-fabrics/connections/databricks",children:"Databricks"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/administration/fabrics/prophecy-fabrics/connections/onedrive",children:"Microsoft OneDrive"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/administration/fabrics/prophecy-fabrics/connections/sftp",children:"SFTP"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/administration/fabrics/prophecy-fabrics/connections/sharepoint",children:"SharePoint"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configuration-tabs",children:"Configuration tabs"}),"\n",(0,i.jsx)(n.p,{children:"When you create a new Source or Target gem, the gem dialog contains the following tabs."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),": Choose the file storage provider you will connect to."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Source/Target location"}),": Choose the ",(0,i.jsx)(n.a,{href:"/administration/fabrics/prophecy-fabrics/connections/",children:"connection"})," and define the file path where you will read from or write to."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Properties"}),": Infer or manually specify the schema, and optionally add properties that influence table behavior."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Preview"}),": Load a preview of the dataset reflecting your configurations."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Configure a Source/Target gem using the following parameters for JSON files."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Tab"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Connection type"}),(0,i.jsx)(n.td,{children:"Type"}),(0,i.jsx)(n.td,{children:"Location you want to connect from."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Format type"}),(0,i.jsx)(n.td,{children:"Source location"}),(0,i.jsxs)(n.td,{children:["Format of the gem. In this case, ",(0,i.jsx)(n.code,{children:"json"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Select or create connection"}),(0,i.jsx)(n.td,{children:"Source location"}),(0,i.jsx)(n.td,{children:"Whether to select an existing connection, or to create a new one."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Filepath"}),(0,i.jsx)(n.td,{children:"Source location"}),(0,i.jsx)(n.td,{children:"File path where you want to read and write files according to the connection type."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Properties"}),(0,i.jsx)(n.td,{children:"Properties"}),(0,i.jsxs)(n.td,{children:["Optional table properties to apply. ",(0,i.jsx)(n.a,{href:"#source-properties",children:"Source"})," and ",(0,i.jsx)(n.a,{href:"#target-properties",children:"target"})," properties are outlined below."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Schema"}),(0,i.jsx)(n.td,{children:"Properties"}),(0,i.jsx)(n.td,{children:"Schema definition of the table (custom or inferred)."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"source-properties",children:"Source properties"}),"\n",(0,i.jsx)(n.p,{children:"The following properties are available for the JSON Source gem."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Description"}),(0,i.jsx)(n.td,{children:"Description of the table."}),(0,i.jsx)(n.td,{children:"None"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Multiple documents per file"}),(0,i.jsx)(n.td,{children:"Whether the file contains multiple JSON objects separated by newline."}),(0,i.jsx)(n.td,{children:"False"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Inference Data Sampling Limit"}),(0,i.jsx)(n.td,{children:"Maximum number of rows to sample for inferring the schema."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"target-properties",children:"Target properties"}),"\n",(0,i.jsx)(n.p,{children:"The following properties are available for the JSON Target gem."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Description"}),(0,i.jsx)(n.td,{children:"Description of the table."}),(0,i.jsx)(n.td,{children:"None"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Multiple documents per file"}),(0,i.jsx)(n.td,{children:"Whether the file will contain multiple JSON objects separated by newline."}),(0,i.jsx)(n.td,{children:"False"})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},77956:(e,n,r)=>{r.d(n,{A:()=>i});r(96540);var t=r(74848);function i(e){return(0,t.jsxs)("div",{children:[e.execution_engine&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/prophecy-fabrics/",children:(0,t.jsx)("span",{className:"badge badge-runtime",children:e.execution_engine})}),e.sql_package_name&&e.sql_package_version&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,t.jsxs)("span",{className:"badge badge-dependency",children:[e.sql_package_name," ",e.sql_package_version]})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]})}}}]);