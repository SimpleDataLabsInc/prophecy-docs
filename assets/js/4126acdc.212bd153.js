"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[7304],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),m=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=m(a),u=n,g=c["".concat(i,".").concat(u)]||c[u]||p[u]||s;return a?r.createElement(g,o(o({ref:t},d),{},{components:a})):r.createElement(g,o({ref:t},d))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var m=2;m<s;m++)o[m]=a[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8294:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var r=a(87462),n=(a(67294),a(3905));const s={title:"Gems",id:"sql-gems",description:"Gems are data seeds, sources, transformations, and targets",sidebar_position:2,tags:["gems","transformation","source","target","cte"]},o=void 0,l={unversionedId:"low-code-sql/development/gems/sql-gems",id:"low-code-sql/development/gems/sql-gems",title:"Gems",description:"Gems are data seeds, sources, transformations, and targets",source:"@site/docs/low-code-sql/development/gems/gems.md",sourceDirName:"low-code-sql/development/gems",slug:"/low-code-sql/development/gems/",permalink:"/low-code-sql/development/gems/",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"transformation",permalink:"/tags/transformation"},{label:"source",permalink:"/tags/source"},{label:"target",permalink:"/tags/target"},{label:"cte",permalink:"/tags/cte"}],version:"current",sidebarPosition:2,frontMatter:{title:"Gems",id:"sql-gems",description:"Gems are data seeds, sources, transformations, and targets",sidebar_position:2,tags:["gems","transformation","source","target","cte"]},sidebar:"defaultSidebar",previous:{title:"Models",permalink:"/low-code-sql/development/models"},next:{title:"Data Sources",permalink:"/low-code-sql/development/gems/datasources-sql"}},i={},m=[],d={toc:m},c="wrapper";function p(e){let{components:t,...s}=e;return(0,n.kt)(c,(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In Prophecy and dbt, Data ",(0,n.kt)("a",{parentName:"p",href:"/concepts/project/Model"},"Models")," are SQL statements that build a single table or view. Prophecy visualizes Data Models to illustrate the many steps needed to generate a single table or view. Gems represent the individual steps. A Gem is a unit of functionality ranging from reading, transforming, writing, and various other ad-hoc operations on data."),(0,n.kt)("p",null,"Each Gem represents a SQL statement, and allows users to construct that statement by configuring a visual interface. Prophecy is smart about whether to construct a CTE or subquery for each Gem; users just configure the visual interface, and Prophecy includes the Gem's SQL statement as part of the Model."),(0,n.kt)("div",{class:"gems-table"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("div",{style:{width:"100px"}},"Gem")),(0,n.kt)("th",{parentName:"tr",align:null},"Category"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("img",{alt:"Model",src:a(26467).Z,width:"666",height:"658"})),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/concepts/project/Model"},(0,n.kt)("strong",{parentName:"a"},"Model"))),(0,n.kt)("td",{parentName:"tr",align:null},"Each model is a DAG that defines a single table or view. A model can also serve as an input for other Models.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("img",{alt:"Source",src:a(88818).Z,width:"288",height:"320"})),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/low-code-sql/development/gems/datasources-sql"},(0,n.kt)("strong",{parentName:"a"},"Datasource"))),(0,n.kt)("td",{parentName:"tr",align:null},"Gems related to loading data: Seeds, Sources, or Models can be used as datasources")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("img",{alt:"Transform",src:a(92661).Z,width:"288",height:"320"})),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/low-code-sql/development/gems/Transformations/"},(0,n.kt)("strong",{parentName:"a"},"Transform"))),(0,n.kt)("td",{parentName:"tr",align:null},"Gems related to the transformation of data")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("img",{alt:"Join and Split",src:a(65657).Z,width:"288",height:"320"})),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/low-code-sql/development/gems/data-joins"},(0,n.kt)("strong",{parentName:"a"},"Join"))),(0,n.kt)("td",{parentName:"tr",align:null},"Gems related to splitting or joining tables together")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("img",{alt:"Custom",src:a(36823).Z,width:"288",height:"320"})),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/low-code-sql/development/gems/custom/"},(0,n.kt)("strong",{parentName:"a"},"Custom"))),(0,n.kt)("td",{parentName:"tr",align:null},"The set of Gems built to extend Prophecy's capabilities."))))),(0,n.kt)("p",null,"Prophecy is smart about whether to construct a CTE or subquery for each Gem; users just configure the visual interface, and Prophecy includes the Gem's SQL statement as part of the Model's ",(0,n.kt)("inlineCode",{parentName:"p"},".sql")," file."))}p.isMDXComponent=!0},36823:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Custom-4e4106f212d22ad0e6f2404cc028bb66.png"},65657:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Join and Split-9a074a1ce283e1ee0ab645b0e52ccd4b.png"},26467:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Model-ea2530df6ff37a3c38cf0bc57fc4972e.png"},88818:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Source and Target-e8b62ba43e1ba4e74133ee826a69a165.png"},92661:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Transform-f62500f4ff428e8b114286997bc20280.png"}}]);