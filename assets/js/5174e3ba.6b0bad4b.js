"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[26803],{14880:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/emr-setup-41af69fdd1a9c4d149377d61b365bd2d.png"},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(96540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}},37244:(e,n,r)=>{r.d(n,{A:()=>k});var s=r(96540),i=r(18215),t=r(44319),o=r(56347),l=r(94280),a=r(73024),c=r(58417),d=r(44031);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:r,default:s}})=>({value:e,label:n,attributes:r,default:s}))}(r);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function x({queryString:e=!1,groupId:n}){const r=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,a.aZ)(i),(0,s.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})},[i,r])]}function j(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,t=u(e),[o,a]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find(e=>e.default)??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:t})),[c,h]=x({queryString:r,groupId:i}),[j,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,i]=(0,d.Dv)(n);return[r,(0,s.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),f=(()=>{const e=c??j;return p({value:e,tabValues:t})?e:null})();(0,l.A)(()=>{f&&a(f)},[f]);return{selectedValue:o,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),m(e)},[h,m,t]),tabValues:t}}var m=r(46916);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(74848);function y({className:e,block:n,selectedValue:r,selectValue:s,tabValues:o}){const l=[],{blockElementScrollPositionUntilNextRender:a}=(0,t.a_)(),c=e=>{const n=e.currentTarget,i=l.indexOf(n),t=o[i].value;t!==r&&(a(n),s(t))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...s,className:(0,i.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:r}){const t=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=t.find(e=>e.props.value===r);return e?(0,s.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:t.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function v(e){const n=j(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,b.jsx)(y,{...n,...e}),(0,b.jsx)(g,{...n,...e})]})}function k(e){const n=(0,m.A)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(n))}},51e3:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/livy-6d54a4b67a7e5d1203f0106b8c327d44.png"},56778:(e,n,r)=>{r.d(n,{A:()=>o});r(96540);var s=r(18215);const i={tabItem:"tabItem_Ymn6"};var t=r(74848);function o({children:e,hidden:n,className:r}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,r),hidden:n,children:e})}},61573:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/library-789a18e5a1d88023a77f94cfaf14cdb9.png"},64373:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"administration/fabrics/Spark-fabrics/emr","title":"Amazon EMR","description":"Use Amazon EMR via Livy as your Spark execution engine","source":"@site/docs/administration/fabrics/Spark-fabrics/emr.md","sourceDirName":"administration/fabrics/Spark-fabrics","slug":"/administration/fabrics/Spark-fabrics/emr","permalink":"/administration/fabrics/Spark-fabrics/emr","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"emr","permalink":"/tags/emr"},{"inline":true,"label":"livy","permalink":"/tags/livy"},{"inline":true,"label":"fabric","permalink":"/tags/fabric"},{"inline":true,"label":"serverless","permalink":"/tags/serverless"}],"version":"current","frontMatter":{"title":"Amazon EMR","id":"emr","description":"Use Amazon EMR via Livy as your Spark execution engine","tags":["emr","livy","fabric","serverless"]},"sidebar":"platformSidebar","previous":{"title":"Livy","permalink":"/administration/fabrics/Spark-fabrics/livy"},"next":{"title":"EMR SAML with Okta","permalink":"/administration/authentication/emr-saml"}}');var i=r(74848),t=r(28453),o=r(37244),l=r(56778);const a={title:"Amazon EMR",id:"emr",description:"Use Amazon EMR via Livy as your Spark execution engine",tags:["emr","livy","fabric","serverless"]},c=void 0,d={},h=[{value:"Create Amazon EMR cluster with Apache Livy",id:"create-amazon-emr-cluster-with-apache-livy",level:2},{value:"Configure network settings",id:"configure-network-settings",level:2},{value:"Create a fabric",id:"create-a-fabric",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Prophecy supports using Amazon EMR via Livy as your Spark execution engine for running pipelines."}),"\n",(0,i.jsxs)(n.p,{children:["These page includes steps to configure both ",(0,i.jsx)(n.strong,{children:"Amazon EMR"})," and ",(0,i.jsx)(n.strong,{children:"Amazon EMR Serverless"})," fabrics."]}),"\n",(0,i.jsx)(n.h2,{id:"create-amazon-emr-cluster-with-apache-livy",children:"Create Amazon EMR cluster with Apache Livy"}),"\n",(0,i.jsx)(n.p,{children:"In your Amazon EMR service, create a cluster. When doing so:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Under ",(0,i.jsx)(n.strong,{children:"Application bundle"})," select ",(0,i.jsx)(n.strong,{children:"Custom"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["When selecting applications, make sure ",(0,i.jsx)(n.strong,{children:"Livy"})," and ",(0,i.jsx)(n.strong,{children:"Spark"})," are included in the install."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("img",{src:r(51e3).A,alt:"EMR create cluster",width:"75%"}),"\n",(0,i.jsx)(n.h2,{id:"configure-network-settings",children:"Configure network settings"}),"\n",(0,i.jsx)(n.p,{children:"To make sure that EMR can communicate with Prophecy, you need to configure specific network settings. Specifically, you need to modify the security groups of your EMR cluster."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Modify the ",(0,i.jsx)(n.strong,{children:"Primary Node"})," security group to allow incoming connections to port ",(0,i.jsx)(n.code,{children:"8998"})," from the Prophecy IP. You can do so by adding an inbound rule to the Master security group that permits incoming traffic on port ",(0,i.jsx)(n.code,{children:"8998"})," from the Prophecy IP address."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Modify the ",(0,i.jsx)(n.strong,{children:"Core Node"})," security group to allow outgoing connections to the Prophecy public IP ",(0,i.jsx)(n.code,{children:"3.133.35.237"})," over HTTPS. Do this by adding an outbound rule to the Core security group that allows outgoing traffic over HTTPS protocol to the Prophecy public IP."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"create-a-fabric",children:"Create a fabric"}),"\n",(0,i.jsxs)(n.p,{children:["To connect EMR and Prophecy, you must create a fabric. You can either create an EMR fabric (suggested), or a ",(0,i.jsx)(n.a,{href:"/administration/fabrics/Spark-fabrics/livy",children:"Livy fabric"}),"."]}),"\n",(0,i.jsxs)(o.A,{children:[(0,i.jsxs)(l.A,{value:"emr",label:"EMR",default:!0,children:[(0,i.jsx)(n.p,{children:"To create an EMR fabric:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open Prophecy and click ",(0,i.jsx)(n.strong,{children:"Create Entity"})," from the left navigation menu. Then, click on the fabric tile."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Name your fabric and click ",(0,i.jsx)(n.strong,{children:"Continue"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Keep the Provider Type as ",(0,i.jsx)(n.strong,{children:"Spark"}),", and choose ",(0,i.jsx)(n.strong,{children:"EMR"})," as the Provider."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Choose an authentication method (Static or SAML)."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Static"}),": Enter your AWS credentials under ",(0,i.jsx)(n.strong,{children:"Access Key"})," and ",(0,i.jsx)(n.strong,{children:"Secret Key"}),". Then, enter the region that your EMR cluster runs in."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"SAML"}),": Use an Okta application to authenticate the EMR connection. Learn more in ",(0,i.jsx)(n.a,{href:"/administration/authentication/emr-saml",children:"Configure EMR SAML authentication with Okta"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click on ",(0,i.jsx)(n.strong,{children:"Fetch environments"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Under ",(0,i.jsx)(n.strong,{children:"Spark Environment"}),", select the EMR cluster that you would like to connect to."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Enter the S3 path that points to the location where you would like your logs to persist."}),"\n"]}),"\n"]}),(0,i.jsx)("img",{src:r(14880).A,alt:"EMR dependencies",width:"75%"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add the job size to your environment by clicking on ",(0,i.jsx)(n.strong,{children:"Add job Size"}),". ",(0,i.jsx)(n.a,{href:"/administration/fabrics/Spark-fabrics/emr-job-sizes",children:"Configure your job size"})," and click on ",(0,i.jsx)(n.strong,{children:"Add"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select File System under ",(0,i.jsx)(n.strong,{children:"Scala Resolution mode"})," and input ",(0,i.jsx)(n.code,{children:"s3://prophecy-public-bucket/prophecy-libs"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select File System under ",(0,i.jsx)(n.strong,{children:"Python Resolution mode"})," and input ",(0,i.jsx)(n.code,{children:"s3://prophecy-public-bucket/python-prophecy-libs"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Complete"})," to save your new EMR fabric."]}),"\n"]}),"\n"]})]}),(0,i.jsxs)(l.A,{value:"emr-serverless",label:"EMR Serverless",children:[(0,i.jsx)(n.p,{children:"To create an EMR fabric for your serverless cluster:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open Prophecy and click ",(0,i.jsx)(n.strong,{children:"Create Entity"})," from the left navigation menu. Then, click on the fabric tile."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Name your fabric and click ",(0,i.jsx)(n.strong,{children:"Continue"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Keep the Provider Type as ",(0,i.jsx)(n.strong,{children:"Spark"}),", and choose ",(0,i.jsx)(n.strong,{children:"EMR"})," as the Provider."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Choose an authentication method (Static or SAML)."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Static"}),": Enter your AWS credentials under ",(0,i.jsx)(n.strong,{children:"Access Key"})," and ",(0,i.jsx)(n.strong,{children:"Secret Key"}),". Then, enter the region that your EMR cluster runs in."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"SAML"}),": Use an Okta application to authenticate the EMR connection. Learn more in ",(0,i.jsx)(n.a,{href:"/administration/authentication/emr-saml",children:"Configure EMR SAML authentication with Okta"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click on ",(0,i.jsx)(n.strong,{children:"Fetch environments"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Under ",(0,i.jsx)(n.strong,{children:"Spark Environment"}),", select the EMR serverless cluster that you would like to connect to. From the list of active clusters, you can identify your EMR Serverless cluster by finding ",(0,i.jsx)(n.code,{children:"emr-serverless-services"})," within the Livy URL. This will automatically populate some of the following fields."]}),"\n"]}),"\n"]}),(0,i.jsx)("img",{src:r(76162).A,alt:"EMR Serverless select",width:"80%"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For the ",(0,i.jsx)(n.strong,{children:"Authentication type"}),", select ",(0,i.jsx)(n.code,{children:"AWS Sig V4"}),". This is the only option that will work for EMR Serverless."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select your ",(0,i.jsx)(n.strong,{children:"Runtime Role"}),". The role must have enough permissions to use the selected Serverless App."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Enter the S3 path that points to the location where you would like your logs and pipeline artifacts to persist."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add the job size to your environment by clicking on ",(0,i.jsx)(n.strong,{children:"Add Job Size"}),". ",(0,i.jsx)(n.a,{href:"/administration/fabrics/Spark-fabrics/emr-job-sizes",children:"Configure your job size"})," and click on ",(0,i.jsx)(n.strong,{children:"Add"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Note that the Spark and Scala versions are fixed."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select File System under Scala Resolution mode and input ",(0,i.jsx)(n.code,{children:"s3://prophecy-public-bucket/prophecy-libs"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select File System under Python Resolution mode and input ",(0,i.jsx)(n.code,{children:"s3://prophecy-public-bucket/python-prophecy-libs"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Complete"})," to save your new EMR fabric."]}),"\n"]}),"\n"]})]}),(0,i.jsxs)(l.A,{value:"livy",label:"Livy",children:[(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"Livy does not work with Python version 3.8 and above."})}),(0,i.jsx)(n.p,{children:"To create a Livy fabric:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open Prophecy and click ",(0,i.jsx)(n.strong,{children:"Create Entity"})," from the left navigation menu. Then, click on the fabric tile."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Name your fabric and click ",(0,i.jsx)(n.strong,{children:"Continue"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Keep the Provider Type as ",(0,i.jsx)(n.strong,{children:"Spark"}),", and choose ",(0,i.jsx)(n.strong,{children:"Livy"})," as the Provider."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Paste your Livy URL. You can find your Livy URL under the ",(0,i.jsx)(n.strong,{children:"Applications"})," tab on your EMR cluster page."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Choose your Authentication type."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Test Connection"}),"."]}),"\n"]}),"\n"]}),(0,i.jsx)(n.p,{children:"Once your connection is tested, you'll have to configure a few more settings:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Fill out the Spark and Scala version based on the values found in your EMR console. Refer to ",(0,i.jsx)(n.a,{href:"https://spark.apache.org/docs",children:"Spark documentation"})," to find the Scala version in relation to your Spark version."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"For the Prophecy Library configurations, choose the File System Resolution mode and provide the S3 folder names for dependencies."}),"\n"]}),"\n"]}),(0,i.jsx)("img",{src:r(61573).A,alt:"EMR create cluster",width:"75%"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Complete"})," to save your new Livy fabric."]}),"\n"]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},76162:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/emr-serverless-dev-select-6519ad3a861079c485acfa293c0b2cf8.png"}}]);