"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[71769],{15680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>d});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,d=u["".concat(c,".").concat(h)]||u[h]||g[h]||i;return r?a.createElement(d,o(o({ref:t},l),{},{components:r})):a.createElement(d,o({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},80433:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=r(58168),n=(r(96540),r(15680));const i={sidebar_position:2,title:"HashiCorp Vault",id:"hashicorp-vault",description:"Working with Hashicorp Vault secrets",tags:["hashicorp","vault","secrets"]},o=void 0,s={unversionedId:"Spark/secret-management/hashicorp-vault",id:"Spark/secret-management/hashicorp-vault",title:"HashiCorp Vault",description:"Working with Hashicorp Vault secrets",source:"@site/docs/Spark/secret-management/hashicorp-vault.md",sourceDirName:"Spark/secret-management",slug:"/Spark/secret-management/hashicorp-vault",permalink:"/Spark/secret-management/hashicorp-vault",draft:!1,tags:[{label:"hashicorp",permalink:"/tags/hashicorp"},{label:"vault",permalink:"/tags/vault"},{label:"secrets",permalink:"/tags/secrets"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"HashiCorp Vault",id:"hashicorp-vault",description:"Working with Hashicorp Vault secrets",tags:["hashicorp","vault","secrets"]},sidebar:"defaultSidebar",previous:{title:"Environment Variables",permalink:"/Spark/secret-management/env-variable"},next:{title:"Using Secrets in Pipelines",permalink:"/Spark/secret-management/using-secrets"}},c={},p=[{value:"Managing HashiCorp Vault Secret Provider",id:"managing-hashicorp-vault-secret-provider",level:2},{value:"Managing Vault Secrets",id:"managing-vault-secrets",level:2},{value:"Using HashiCorp Vault Secrets in Pipelines",id:"using-hashicorp-vault-secrets-in-pipelines",level:2}],l={toc:p},u="wrapper";function g(e){let{components:t,...i}=e;return(0,n.yg)(u,(0,a.A)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://developer.hashicorp.com/vault/docs/what-is-vault"},"HashiCorp Vault")," is a comprehensive and highly scalable secrets management solution that provides centralized control over sensitive information such as API keys, passwords, and encryption keys. It ensures secure storage, dynamic secret generation, and fine-grained access policies."),(0,n.yg)("h2",{id:"managing-hashicorp-vault-secret-provider"},"Managing HashiCorp Vault Secret Provider"),(0,n.yg)("p",null,"To add a HashiCorp Vault Secret Provider, click on the ",(0,n.yg)("strong",{parentName:"p"},"(1) Add Provider")," button, opening the Secret Provider form."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Add_Hashicorp_Vault_provider",src:r(41846).A,width:"2880",height:"1084"})),(0,n.yg)("p",null,"Provide a ",(0,n.yg)("strong",{parentName:"p"},"(2) Name"),", select ",(0,n.yg)("strong",{parentName:"p"},"(3) Provider type")," as ",(0,n.yg)("strong",{parentName:"p"},"HashiCorp"),", and add a ",(0,n.yg)("strong",{parentName:"p"},"(4) Description")," of your choice.\nFor authentication, Prophecy currently supports fixed Environment variables with names ",(0,n.yg)("strong",{parentName:"p"},"(5) VAULT_ADDR")," and ",(0,n.yg)("strong",{parentName:"p"},"(6) VAULT_TOKEN"),". Ensure your Spark cluster has these environment variables set correctly, pointing to the respective Vault URL and token. Verify the configuration by clicking the ",(0,n.yg)("strong",{parentName:"p"},"(7) Test connection")," button."),(0,n.yg)("p",null,"Once done, click ",(0,n.yg)("strong",{parentName:"p"},"(8) Save"),"."),(0,n.yg)("h2",{id:"managing-vault-secrets"},"Managing Vault Secrets"),(0,n.yg)("p",null,"After adding your Vault provider, click on the ",(0,n.yg)("strong",{parentName:"p"},"(1) Refresh")," button to fetch secrets already stored in HashiCorp Vault.\nMake sure you select the Secret provider created above in the Secret Provider dropdown while listing the secrets."),(0,n.yg)("admonition",{type:"info"},(0,n.yg)("p",{parentName:"admonition"},"You can only fetch the secrets accessible to the Token provided in your Spark cluster")),(0,n.yg)("p",null,"To create a new Secret, click on the ",(0,n.yg)("strong",{parentName:"p"},"(2) Add Secret")," button, opening the Add secret form."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Add_hashicorp_vault_secrets",src:r(85578).A,width:"2880",height:"1084"})),(0,n.yg)("p",null,"Provide a ",(0,n.yg)("strong",{parentName:"p"},"(3) Secret Name"),", and select a ",(0,n.yg)("strong",{parentName:"p"},"(4) Secret Scope")," from the dropdown.Scope in Hashicorp vault is nothing but the path of that secret key. Note that if the scope/path doesn't exist, it will be auto-created.",(0,n.yg)("br",{parentName:"p"}),"\n","Add a ",(0,n.yg)("strong",{parentName:"p"},"(5) Description"),", and the ",(0,n.yg)("strong",{parentName:"p"},"(6) value")," for your secret. Once done, click ",(0,n.yg)("strong",{parentName:"p"},"(7) Save"),". This will create the Secret with the given key and value, at the specified path."),(0,n.yg)("p",null,"You can also Edit/Delete an existing secret from the button next to the Secret in the table."),(0,n.yg)("h2",{id:"using-hashicorp-vault-secrets-in-pipelines"},"Using HashiCorp Vault Secrets in Pipelines"),(0,n.yg)("p",null,"Once you have added a HashiCorp Vault Secret Provider and stored secrets, you can seamlessly ",(0,n.yg)("a",{parentName:"p",href:"/Spark/secret-management/using-secrets"},"use")," them in your Pipelines."))}g.isMDXComponent=!0},41846:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/Add_hashicorp_provider-d86c414b1940163513af77364523342f.png"},85578:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/Add_hashicorp_secrets-dd49215f1a31afe48ccb190e90c885f7.png"}}]);