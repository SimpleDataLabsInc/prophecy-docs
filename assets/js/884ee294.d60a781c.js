"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[6425],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||l;return a?r.createElement(g,i(i({ref:t},u),{},{components:a})):r.createElement(g,i({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2360:function(e,t,a){a.d(t,{Z:function(){return i}});var r=a(7294),n=a(6010),l="tabItem_OmH5";function i(e){var t=e.children,a=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,i),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return m}});var r=a(7462),n=a(7294),l=a(2389),i=a(7392),o=a(7094),s=a(2466),p=a(6010),u="tabList_uSqn",c="tabItem_LplD";function d(e){var t,a,l,d=e.lazy,m=e.block,g=e.defaultValue,f=e.values,v=e.groupId,k=e.className,h=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,i.l)(b,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var S=null===g?g:null!=(t=null!=g?g:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=h[0])?void 0:l.props.value;if(null!==S&&!b.some((function(e){return e.value===S})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+S+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,o.U)(),T=N.tabGroupChoices,w=N.setTabGroupChoices,C=(0,n.useState)(S),D=C[0],x=C[1],E=[],O=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var P=T[v];null!=P&&P!==D&&b.some((function(e){return e.value===P}))&&x(P)}var I=function(e){var t=e.currentTarget,a=E.indexOf(t),r=b[a].value;r!==D&&(O(t),x(r),null!=v&&w(v,r))},_=function(e){var t,a=null;switch(e.key){case"ArrowRight":var r=E.indexOf(e.currentTarget)+1;a=E[r]||E[0];break;case"ArrowLeft":var n=E.indexOf(e.currentTarget)-1;a=E[n]||E[E.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,p.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":m},k)},b.map((function(e){var t=e.value,a=e.label,l=e.attributes;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:D===t?0:-1,"aria-selected":D===t,key:t,ref:function(e){return E.push(e)},onKeyDown:_,onFocus:I,onClick:I},l,{className:(0,p.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":D===t})}),null!=a?a:t)}))),d?(0,n.cloneElement)(h.filter((function(e){return e.props.value===D}))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},h.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==D})}))))}function m(e){var t=(0,l.Z)();return n.createElement(d,(0,r.Z)({key:String(t)},e))}},1217:function(e,t,a){a.d(t,{Z:function(){return s}});var r=a(7294),n=a(4996),l=function(e){var t=e.children;return r.createElement("div",{style:{position:"relative",display:"flex","justify-content":"center","align-items":"center"}},t)},i=function(e){var t=e.source;e.children;return r.createElement("img",{src:(0,n.Z)(t),style:{"object-fit":"cover"}})},o=function(e){var t=e.slides,a=(0,r.useState)(0),n=a[0],o=a[1];return r.createElement(l,null,r.createElement("i",{class:"fa fa-chevron-left",onClick:function(){o(0===n?t.length-1:n-1)},style:{position:"absolute",top:"50%",left:"0px","font-size":"2rem"}}),r.createElement("i",{class:"fa fa-chevron-right",onClick:function(){o(n===t.length-1?0:n+1)},style:{position:"absolute",top:"50%",right:"0px","font-size":"2rem"}}),r.createElement("div",{style:{padding:"30px"}},r.createElement(i,{source:t[n].image}),t[n].description))};function s(e){var t=e.ImageData;return r.createElement(o,{slides:t,style:{"font-family":" sans-serif","text-align":"center"}})}},7777:function(e,t,a){a.r(t),a.d(t,{ImageData:function(){return g},ImageData2:function(){return v},assets:function(){return m},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return f}});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),i=a(1217),o=a(9877),s=a(2360),p=["components"],u={title:"CSV",id:"csv",description:"CSV",sidebar_position:1,tags:["gems","file","csv"]},c=void 0,d={unversionedId:"low-code-spark/gems/source-target/file/csv",id:"low-code-spark/gems/source-target/file/csv",title:"CSV",description:"CSV",source:"@site/docs/low-code-spark/gems/source-target/file/csv.md",sourceDirName:"low-code-spark/gems/source-target/file",slug:"/low-code-spark/gems/source-target/file/csv",permalink:"/low-code-spark/gems/source-target/file/csv",draft:!1,tags:[{label:"gems",permalink:"/tags/gems"},{label:"file",permalink:"/tags/file"},{label:"csv",permalink:"/tags/csv"}],version:"current",sidebarPosition:1,frontMatter:{title:"CSV",id:"csv",description:"CSV",sidebar_position:1,tags:["gems","file","csv"]},sidebar:"defaultSidebar",previous:{title:"Source & Target",permalink:"/low-code-spark/gems/source-target/"},next:{title:"FTP",permalink:"/low-code-spark/gems/source-target/file/ftp"}},m={},g=[{image:"/img/csv/load/1.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Source Component")},{image:"/img/csv/load/2.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"/img/csv/load/3.png",description:(0,l.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the CSV format")},{image:"/img/csv/load/4.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 4 - Navigate to the desired CSV source file")},{image:"/img/csv/load/5.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 5 - Customize the properties and update schema as per your needs")},{image:"/img/csv/load/6.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 6 - Hit 'Refresh' to preview data ")}],f=[{value:"Source Parameters",id:"source-parameters",level:3},{value:"Target Parameters",id:"target-parameters",level:3},{value:"Loading a CSV file",id:"loading-a-csv-file",level:3},{value:"Writing a CSV file",id:"writing-a-csv-file",level:3}],v=[{image:"/img/csv/write/1.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 1 - Create Target Component")},{image:"/img/csv/write/2.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 2 - Click 'Create Dataset'")},{image:"/img/csv/write/3.png",description:(0,l.kt)("h3",{style:{padding:"10px"}}," Step 3 - Enter 'Dataset Name' and select the CSV format")},{image:"/img/csv/write/4.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 4 - Navigate to the desired CSV target location")},{image:"/img/csv/write/5.png",description:(0,l.kt)("h3",{style:{padding:"10px"}},"Step 5 - Customize the properties as per your needs")}],k={ImageData:g,toc:f,ImageData2:v};function h(e){var t=e.components,a=(0,n.Z)(e,p);return(0,l.kt)("wrapper",(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Allows you to read or write a delimited file (often called Comma Separated File, CSV)"),(0,l.kt)("h3",{id:"source-parameters"},"Source Parameters"),(0,l.kt)("p",null,"CSV ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Source"))," supports all the available ",(0,l.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-csv.html"},"spark read options for CSV"),"."),(0,l.kt)("p",null,"The below list contains the additional parameters to read a CSV file:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the Dataset (",(0,l.kt)("a",{parentName:"td",href:"/core/concepts/dataset"},"read more about Datasets"),")"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Location"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,l.kt)("br",null)," Eg: dbfs:/data/test.csv"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Schema"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Schema to applied on the loaded data. Can be defined/edited as json or inferred using ",(0,l.kt)("inlineCode",{parentName:"td"},"Infer Schema")," button"),(0,l.kt)("td",{parentName:"tr",align:null},"True")))),(0,l.kt)("h3",{id:"target-parameters"},"Target Parameters"),(0,l.kt)("p",null,"CSV ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Target"))," supports all the available ",(0,l.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/sql-data-sources-csv.html"},"spark write options for CSV"),"."),(0,l.kt)("p",null,"The below list contains the additional parameters to write a CSV file:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Name"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the Dataset (",(0,l.kt)("a",{parentName:"td",href:"/core/concepts/dataset"},"read more about Datasets"),")"),(0,l.kt)("td",{parentName:"tr",align:null},"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Location"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:null},"Location of the file(s) to be loaded ",(0,l.kt)("br",null)," Eg: dbfs:/data/output.csv"),(0,l.kt)("td",{parentName:"tr",align:null},"True")))),(0,l.kt)("h3",{id:"loading-a-csv-file"},"Loading a CSV file"),(0,l.kt)(i.Z,{ImageData:g,mdxType:"App"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def load_csv(spark: SparkSession) -> DataFrame:\n    return spark.read\\\n        .schema(\n          StructType([\n            StructField("order_id", IntegerType(), True),\n            StructField("customer_id", IntegerType(), True),\n            StructField("order_status", StringType(), True),\n            StructField("order_category", StringType(), True),\n            StructField("order_date", DateType(), True),\n            StructField("amount", DoubleType(), True)\n        ])\n        )\\\n        .option("header", True)\\\n        .option("quote", "\\"")\\\n        .option("sep", ",")\\\n        .csv("dbfs:/Prophecy/anshuman@simpledatalabs.com/OrdersDatasetInput.csv")\n\n'))),(0,l.kt)(s.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'object load_csv {\n\n  def apply(spark: SparkSession): DataFrame =\n    spark.read\n      .format("csv")\n      .option("header", true)\n      .option("quote",  "\\"")\n      .option("sep",    ",")\n      .schema(\n        StructType(\n          Array(\n            StructField("order_id",       IntegerType, true),\n            StructField("customer_id",    IntegerType, true),\n            StructField("order_status",   StringType,  true),\n            StructField("order_category", StringType,  true),\n            StructField("order_date",     DateType,    true),\n            StructField("amount",         DoubleType,  true)\n          )\n        )\n      )\n      .load("dbfs:/Prophecy/anshuman@simpledatalabs.com/OrdersDatasetInput.csv")\n\n}\n')))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"writing-a-csv-file"},"Writing a CSV file"),(0,l.kt)(i.Z,{ImageData:v,mdxType:"App"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def write_as_csv(spark: SparkSession, in0: DataFrame):\n    in0.write\\\n        .option("header", True)\\\n        .option("sep", ",")\\\n        .mode("error")\\\n        .option("separator", ",")\\\n        .option("header", True)\\\n        .csv("dbfs:/Prophecy/anshuman@simpledatalabs.com/output.csv")\n'))),(0,l.kt)(s.Z,{value:"scala",label:"Scala",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'object write_as_csv {\n  def apply(spark: SparkSession, in: DataFrame): Unit =\n    in.write\n      .format("csv")\n      .option("header", true)\n      .option("sep",    ",")\n      .mode("error")\n      .save("dbfs:/Prophecy/anshuman@simpledatalabs.com/output.csv")\n}\n')))))}h.isMDXComponent=!0}}]);