"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[64738],{28453:(e,a,r)=>{r.d(a,{R:()=>l,x:()=>i});var t=r(96540);const n={},s=t.createContext(n);function l(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(s.Provider,{value:a},e.children)}},37244:(e,a,r)=>{r.d(a,{A:()=>_});var t=r(96540),n=r(18215),s=r(44319),l=r(56347),i=r(94280),o=r(73024),c=r(58417),d=r(44031);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:a,children:r}=e;return(0,t.useMemo)(()=>{const e=a??function(e){return u(e).map(({props:{value:e,label:a,attributes:r,default:t}})=>({value:e,label:a,attributes:r,default:t}))}(r);return function(e){const a=(0,c.XI)(e,(e,a)=>e.value===a.value);if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[a,r])}function p({value:e,tabValues:a}){return a.some(a=>a.value===e)}function m({queryString:e=!1,groupId:a}){const r=(0,l.W6)(),n=function({queryString:e=!1,groupId:a}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,o.aZ)(n),(0,t.useCallback)(e=>{if(!n)return;const a=new URLSearchParams(r.location.search);a.set(n,e),r.replace({...r.location,search:a.toString()})},[n,r])]}function f(e){const{defaultValue:a,queryString:r=!1,groupId:n}=e,s=h(e),[l,o]=(0,t.useState)(()=>function({defaultValue:e,tabValues:a}){if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=a.find(e=>e.default)??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:s})),[c,u]=m({queryString:r,groupId:n}),[f,g]=function({groupId:e}){const a=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,n]=(0,d.Dv)(a);return[r,(0,t.useCallback)(e=>{a&&n.set(e)},[a,n])]}({groupId:n}),x=(()=>{const e=c??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)(()=>{x&&o(x)},[x]);return{selectedValue:l,selectValue:(0,t.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)},[u,g,s]),tabValues:s}}var g=r(46916);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(74848);function j({className:e,block:a,selectedValue:r,selectValue:t,tabValues:l}){const i=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const a=e.currentTarget,n=i.indexOf(a),s=l[n].value;s!==r&&(o(a),t(s))},d=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;a=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;a=i[r]??i[i.length-1];break}}a?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":a},e),children:l.map(({value:e,label:a,attributes:t})=>(0,b.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{i.push(e)},onKeyDown:d,onClick:c,...t,className:(0,n.A)("tabs__item",x.tabItem,t?.className,{"tabs__item--active":r===e}),children:a??e},e))})}function v({lazy:e,children:a,selectedValue:r}){const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===r);return e?(0,t.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==r}))})}function y(e){const a=f(e);return(0,b.jsxs)("div",{className:(0,n.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...a,...e}),(0,b.jsx)(v,{...a,...e})]})}function _(e){const a=(0,g.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(a))}},38419:(e,a,r)=>{r.d(a,{A:()=>t});const t=r.p+"assets/images/reformat_advanced-c65c99761ced1311392e26c6c335bf7b.png"},45457:(e,a,r)=>{r.d(a,{A:()=>t});const t=r.p+"assets/images/reformat_eg_1-9a9344e1d3174c50427768400047df6c.png"},56778:(e,a,r)=>{r.d(a,{A:()=>l});r(96540);var t=r(18215);const n={tabItem:"tabItem_Ymn6"};var s=r(74848);function l({children:e,hidden:a,className:r}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(n.tabItem,r),hidden:a,children:e})}},64900:(e,a,r)=>{r.d(a,{A:()=>t});const t=r.p+"assets/images/reformat_advanced_2-c906ca7673c85cf3c013bdd6923d471b.png"},85999:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"Spark/gems/transform/reformat","title":"Reformat gem","description":"Select one or more columns or values using expressions and functions","source":"@site/docs/Spark/gems/transform/reformat.md","sourceDirName":"Spark/gems/transform","slug":"/engineers/reformat","permalink":"/engineers/reformat","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/tags/gems"},{"inline":true,"label":"select","permalink":"/tags/select"},{"inline":true,"label":"reformat","permalink":"/tags/reformat"},{"inline":true,"label":"transform","permalink":"/tags/transform"}],"version":"current","frontMatter":{"title":"Reformat gem","sidebar_label":"Reformat","id":"reformat","slug":"/engineers/reformat","description":"Select one or more columns or values using expressions and functions","tags":["gems","select","reformat","transform"]},"sidebar":"platformSidebar","previous":{"title":"OrderBy","permalink":"/engineers/order-by"},"next":{"title":"SampleRows","permalink":"/engineers/sample-rows"}}');var n=r(74848),s=r(28453),l=r(97071),i=r(37244),o=r(56778);const c={title:"Reformat gem",sidebar_label:"Reformat",id:"reformat",slug:"/engineers/reformat",description:"Select one or more columns or values using expressions and functions",tags:["gems","select","reformat","transform"]},d=void 0,u={},h=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Spark Code",id:"spark-code",level:2},{value:"Advanced Import",id:"advanced-import",level:2},{value:"Using Advanced Import",id:"using-advanced-import",level:3},{value:"Format",id:"format",level:3}];function p(e){const a={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.A,{python_package_name:"ProphecySparkBasicsPython",python_package_version:"0.0.1+",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.0.1+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,n.jsx)(a.p,{children:"Transforms one or more column names or values by using expressions and/or functions. It's useful when we need to extract only the required columns or make changes column-wise."}),"\n",(0,n.jsx)(a.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(a.table,{children:[(0,n.jsx)(a.thead,{children:(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(a.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(a.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,n.jsxs)(a.tbody,{children:[(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"DataFrame"}),(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"Input DataFrame on which changes are required"}),(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"True"})]}),(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"Target column"}),(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"Output column name"}),(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"False"})]}),(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"Expression"}),(0,n.jsx)(a.td,{style:{textAlign:"left"},children:"Expression to compute target column"}),(0,n.jsxs)(a.td,{style:{textAlign:"left"},children:["Required if a ",(0,n.jsx)(a.code,{children:"Target column"})," is present"]})]})]})]}),"\n",(0,n.jsx)(a.admonition,{type:"info",children:(0,n.jsx)(a.p,{children:"If no columns are selected, then all columns are passed through to the output"})}),"\n",(0,n.jsx)(a.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"Example usage of Reformat",src:r(45457).A+"",width:"1209",height:"724"})}),"\n",(0,n.jsx)(a.h2,{id:"spark-code",children:"Spark Code"}),"\n",(0,n.jsxs)(a.p,{children:["Reformat converts to a SQL ",(0,n.jsx)(a.code,{children:"Select"})," or in relational terms into a projection, unlike ",(0,n.jsx)(a.code,{children:"SchemaTransform"})," gem which uses underlying ",(0,n.jsx)(a.code,{children:"withColumn"})," construct"]}),"\n","\n",(0,n.jsxs)(i.A,{children:[(0,n.jsx)(o.A,{value:"py",label:"Python",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-py",children:'def Reformat(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.select(\n        col("id"),\n        col("email").alias("email_address"),\n        col("name"),\n        col("updated_at"),\n        concat_ws("$$$", col("address_line1"), col("address_line2"), col("postal_code"))\n            .alias("address_string")\n    )\n'})})}),(0,n.jsx)(o.A,{value:"scala",label:"Scala",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:'object Reformat {\n\n  def apply(spark: SparkSession, in: DataFrame): DataFrame =\n    in.select(\n      col("id"),\n      col("email").as("email_address"),\n      col("name"),\n      col("updated_at"),\n      expr("concat_ws(\'$$$\', address_line1, address_line2, postal_code)").as("address_string")\n    )\n }\n\n'})})})]}),"\n",(0,n.jsx)(a.h2,{id:"advanced-import",children:"Advanced Import"}),"\n",(0,n.jsxs)(a.p,{children:["The Advanced Import feature allows you to bulk import statements that are structured similarly to CSV/TSV files. This can be useful if you have your expressions/transformation logic in another format and just want to quickly configure a ",(0,n.jsx)(a.code,{children:"Reformat"})," gem based on this logic."]}),"\n",(0,n.jsx)(a.h3,{id:"using-advanced-import",children:"Using Advanced Import"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["Click the ",(0,n.jsx)(a.code,{children:"Advanced"})," button in the `Reformat UI"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"Advanced import toggle",src:r(38419).A+"",width:"2090",height:"1395"})}),"\n",(0,n.jsxs)(a.ol,{start:"2",children:["\n",(0,n.jsx)(a.li,{children:"Enter the expressions into the text area using the format as described below:"}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"Advanced import mode",src:r(64900).A+"",width:"2618",height:"2026"})}),"\n",(0,n.jsxs)(a.ol,{start:"3",children:["\n",(0,n.jsxs)(a.li,{children:["Use the button at the top (labeled ",(0,n.jsx)(a.code,{children:"Expressions"}),") to switch back to the expressions view. This will translate the expressions from the CSV format to the table format and will show any errors detected."]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"format",children:"Format"}),"\n",(0,n.jsxs)(a.p,{children:["The format of these expressions is ",(0,n.jsx)(a.code,{children:"target_name,target_expr"}),", where ",(0,n.jsx)(a.code,{children:"target_name"})," is the desired new column name and ",(0,n.jsx)(a.code,{children:"target_expr"})," is the Spark expression that will be used to generate the new column."]}),"\n",(0,n.jsxs)(a.admonition,{type:"caution",children:[(0,n.jsxs)(a.p,{children:["For ",(0,n.jsx)(a.code,{children:"target_expr"})," values that contain a comma ",(0,n.jsx)(a.code,{children:","})," or span multiple lines, you must surround them by ",(0,n.jsx)(a.code,{children:"``"})," on either side. For example:"]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"customer_id,customer_id\nfull_name,``concat(first_name, ' ', last_name)``\n"})})]})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},97071:(e,a,r)=>{r.d(a,{A:()=>n});r(96540);var t=r(74848);function n(e){return(0,t.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub/",children:(0,t.jsxs)("span",{className:"badge badge-dependency",children:[e.python_package_name," ",e.python_package_version]})}),e.scala_package_name&&e.scala_package_version&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/engineers/package-hub",children:(0,t.jsxs)("span",{className:"badge badge-dependency",children:[e.scala_package_name," ",e.scala_package_version]})}),e.python_lib&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,t.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsPython ",e.python_lib]})}),e.scala_lib&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,t.jsxs)("span",{className:"badge badge-dependency",children:["ProphecyLibsScala ",e.scala_lib]})}),e.uc_single&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,t.jsxs)("span",{className:"badge badge-spark",children:["UC Dedicated Cluster ",e.uc_single]})}),e.uc_shared&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,t.jsxs)("span",{className:"badge badge-spark",children:["UC Standard Cluster ",e.uc_shared]})}),e.livy&&(0,t.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,t.jsxs)("span",{className:"badge badge-spark",children:["Livy ",e.livy]})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]})}}}]);